<Project ToolsVersion="15.0">

	<PropertyGroup>
		<LangVersion>10.0</LangVersion>
		<PackageProjectUrl>https://github.com/unoplatform/uno.themes</PackageProjectUrl>
		<PackageReadmeFile>README.md</PackageReadmeFile>
		<UseWinUI Condition="'$(UseWinUI)'==''">false</UseWinUI>

		<!-- Required until xamarin targets are used (defined by MSBuild.SDK.Extras)-->
		<DisableImplicitFrameworkDefines>false</DisableImplicitFrameworkDefines>
		<UnoEnableXamlFuzzyMatching>false</UnoEnableXamlFuzzyMatching>
	</PropertyGroup>

	<PropertyGroup Condition="'$(TF_BUILD)' == 'true'">
		<ContinuousIntegrationBuild>true</ContinuousIntegrationBuild>
	</PropertyGroup>

	<PropertyGroup>
		<GeneratePackageOnBuild Condition="'$(Configuration)'=='Release'">true</GeneratePackageOnBuild>
		<IsTestProject>$(MSBuildProjectName.Contains('Test'))</IsTestProject>
		<IsSampleProject>$(MSBuildProjectName.Contains('Sample'))</IsSampleProject>
		<IsMarkupProject>$(MSBuildProjectName.Contains('Markup'))</IsMarkupProject>
	</PropertyGroup>

	<ItemGroup>
		<None Include="$(MSBuildThisFileDirectory)build\uno-logo.png" Pack="true" Visible="false" PackagePath="\"/>
		<None Include="$(MSBuildThisFileDirectory)README.md" Pack="true" PackagePath="/" />
	</ItemGroup>

	<Choose>
		<When Condition="'$(IsTestProject)' != 'true' and '$(SourceLinkEnabled)' != 'false' and '$(IsSampleProject)' != 'true'">
			<PropertyGroup>
				<!-- Optional: Declare that the Repository URL can be published to NuSpec -->
				<PublishRepositoryUrl>true</PublishRepositoryUrl>
				<!-- Optional: Embed source files that are not tracked by the source control manager to the PDB -->
				<EmbedUntrackedSources>true</EmbedUntrackedSources>
				<!-- Optional: Include PDB in the built .nupkg -->
				<AllowedOutputExtensionsInPackageBuildOutputFolder>$(AllowedOutputExtensionsInPackageBuildOutputFolder);.pdb</AllowedOutputExtensionsInPackageBuildOutputFolder>
			</PropertyGroup>
			<ItemGroup>
				<PackageReference Include="DotNet.ReproducibleBuilds" Version="1.1.1" PrivateAssets="All" />
			</ItemGroup>
		</When>
	</Choose>

	<PropertyGroup Condition="'$(IsMarkupProject)'=='true'">
		<IsPackable>true</IsPackable>
	</PropertyGroup>

	<!-- Workaround for https://developercommunity.visualstudio.com/t/XamarinMac-binaries-are-missing-in-173/10164443 -->
	<ItemGroup Condition="$(TargetFramework.ToLower().StartsWith('xamarinmac')) and '$(Configuration)' == 'Release' and '$(OS)'=='Windows_NT'">
		<Reference Include="Xamarin.Mac">
			<HintPath Condition="Exists('C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\IDE\Extensions\Xamarin.VisualStudio')">C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\IDE\Extensions\Xamarin.VisualStudio\Xamarin.Mac.dll</HintPath>
			<HintPath Condition="Exists('C:\Program Files\Microsoft Visual Studio\2022\Professional\Common7\IDE\Extensions\Xamarin.VisualStudio')">C:\Program Files\Microsoft Visual Studio\2022\Professional\Common7\IDE\Extensions\Xamarin.VisualStudio\Xamarin.Mac.dll</HintPath>
			<HintPath Condition="Exists('C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\Extensions\Xamarin.VisualStudio')">C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\Extensions\Xamarin.VisualStudio\Xamarin.Mac.dll</HintPath>
			<HintPath Condition="Exists('C:\Program Files\Microsoft Visual Studio\2022\Preview\Common7\IDE\Extensions\Xamarin.VisualStudio')">C:\Program Files\Microsoft Visual Studio\2022\Preview\Common7\IDE\Extensions\Xamarin.VisualStudio\Xamarin.Mac.dll</HintPath>
		</Reference>
	</ItemGroup>

	<Import Project="PlatformItemGroups.props" />
	<Import Project="Uno.CrossTargeting.props" />
</Project>

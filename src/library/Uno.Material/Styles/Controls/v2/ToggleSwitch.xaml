<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
					xmlns:android="http://uno.ui/android"
					xmlns:ios="http://uno.ui/ios"
					xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
					xmlns:not_mobile="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					xmlns:todo="what should be done"
					xmlns:toolkit="using:Uno.UI.Toolkit"
					mc:Ignorable="ios android todo">

	<ResourceDictionary.ThemeDictionaries>
		<ResourceDictionary x:Key="Light">
			<!-- Non-opaque/transparent primary disabled color -->
			<Color x:Key="MaterialPrimaryVariantLowThumbColor">#E9E5FA</Color>
			<!-- Non-opaque/transparent white color that shows on white surfaces -->
			<Color x:Key="MaterialSurfaceVariantLightColor">#F7F7F7</Color>
		</ResourceDictionary>
		<ResourceDictionary x:Key="Dark">
			<!-- Non-opaque/transparent primary disabled color -->
			<Color x:Key="MaterialPrimaryVariantLowThumbColor">#57507C</Color>
			<!-- Non-opaque/transparent white color that shows on white surfaces -->
			<Color x:Key="MaterialSurfaceVariantLightColor">#D7D7D7</Color>
		</ResourceDictionary>
	</ResourceDictionary.ThemeDictionaries>

	<Thickness x:Key="MaterialToggleSwitchHeaderMargin">0,0,12,0</Thickness>

	<!-- Toggle On -->
	<StaticResource x:Key="MaterialToggleSwitchOnButtonBrush"
					ResourceKey="PrimaryBrush" />
	<StaticResource x:Key="MaterialToggleSwitchOnBackgroundBrush"
					ResourceKey="PrimaryVariantLightBrush" />

	<!-- Toggle Off -->
	<StaticResource x:Key="MaterialToggleSwitchOffButtonBrush"
					ResourceKey="OnPrimaryBrush" />
	<StaticResource x:Key="MaterialToggleSwitchOffBackgroundBrush"
					ResourceKey="OnSurfaceLowBrush" />

	<!-- Toggle On Disabled -->
	<StaticResource x:Key="MaterialToggleSwitchOnLowButtonBrush"
					ResourceKey="OnSurfaceSelectedBrush" />
	<StaticResource x:Key="MaterialToggleSwitchOnLowBackgroundBrush"
					ResourceKey="OnSurfaceSelectedBrush" />

	<SolidColorBrush x:Key="MaterialPrimaryVariantLowThumbColorBrush"
					 Color="{ThemeResource MaterialPrimaryVariantLowThumbColor}" />


	<not_mobile:Style x:Key="MaterialToggleSwitchStyle"
					  TargetType="ToggleSwitch">
		<Setter Property="Foreground"
				Value="{ThemeResource MaterialToggleSwitchOnButtonBrush}" />
		<Setter Property="Background"
				Value="{ThemeResource MaterialToggleSwitchOnBackgroundBrush}" />

		<!-- Start: Body Small Typo -->
		<Setter Property="FontFamily"
				Value="{ThemeResource MaterialMediumFontFamily}" />
		<Setter Property="FontWeight"
				Value="{ThemeResource BodySmallFontWeight}" />
		<Setter Property="FontSize"
				Value="{ThemeResource BodySmallFontSize}" />
		<Setter Property="CharacterSpacing"
				Value="{ThemeResource BodySmallCharacterSpacing}" />
		<!-- End: Body Small Typo -->

		<!-- microsoft/microsoft-ui-xaml#6157: reset min-width inherited from base style -->
		<Setter Property="MinWidth"
				Value="54" />

		<Setter Property="HorizontalAlignment"
				Value="Left" />
		<Setter Property="HorizontalContentAlignment"
				Value="Stretch" />
		<Setter Property="VerticalContentAlignment"
				Value="Center" />
		<Setter Property="ManipulationMode"
				Value="System,TranslateX" />
		<Setter Property="UseSystemFocusVisuals"
				Value="True" />

		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ToggleSwitch">

					<Grid Background="Transparent">

						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">

								<VisualState x:Name="Normal" />

								<VisualState x:Name="PointerOver">
									<VisualState.Setters>
										<Setter Target="SwitchKnobOnShadow.Opacity"
												Value="0.1" />
										<Setter Target="SwitchKnobOffShadow.Opacity"
												Value="0.1" />
									</VisualState.Setters>
								</VisualState>

								<VisualState x:Name="Pressed">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobOnShadow"
																	   Storyboard.TargetProperty="Opacity">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="0.3" />
										</ObjectAnimationUsingKeyFrames>

										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobOffShadow"
																	   Storyboard.TargetProperty="Opacity">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="0.3" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>

								<VisualState x:Name="Disabled">
									<Storyboard>

										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="HighlightBorder"
																	   Storyboard.TargetProperty="Fill">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource MaterialToggleSwitchOnLowBackgroundBrush}" />
										</ObjectAnimationUsingKeyFrames>

										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="OuterBorder"
																	   Storyboard.TargetProperty="Fill">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource MaterialToggleSwitchOnLowBackgroundBrush}" />
										</ObjectAnimationUsingKeyFrames>

										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobOff"
																	   Storyboard.TargetProperty="Fill">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource MaterialToggleSwitchOffButtonBrush}" />
										</ObjectAnimationUsingKeyFrames>

										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobOn"
																	   Storyboard.TargetProperty="Fill">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource MaterialToggleSwitchOffButtonBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobOffStateOverlay"
																	   Storyboard.TargetProperty="Fill">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource MaterialToggleSwitchOnLowButtonBrush}" />
										</ObjectAnimationUsingKeyFrames>

										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobOnStateOverlay"
																	   Storyboard.TargetProperty="Fill">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource MaterialToggleSwitchOnLowButtonBrush}" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>

							<VisualStateGroup x:Name="FocusStates">

								<VisualState x:Name="Focused">
									<VisualState.Setters>
										<Setter Target="SwitchKnobOnShadow.Opacity"
												Value="0.2" />
										<Setter Target="SwitchKnobOffShadow.Opacity"
												Value="0.2" />
									</VisualState.Setters>
								</VisualState>

								<VisualState x:Name="PointerFocused" />

								<VisualState x:Name="Unfocused">
									<VisualState.Setters>
										<Setter Target="SwitchKnobOnShadow.Opacity"
												Value="0" />
										<Setter Target="SwitchKnobOffShadow.Opacity"
												Value="0" />
									</VisualState.Setters>
								</VisualState>
							</VisualStateGroup>

							<VisualStateGroup x:Name="ToggleStates">
								<VisualStateGroup.Transitions>

									<VisualTransition x:Name="DraggingToOnTransition"
													  GeneratedDuration="0"
													  From="Dragging"
													  To="On">
										<Storyboard>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="HighlightBorder"
																		   Storyboard.TargetProperty="Opacity">
												<DiscreteObjectKeyFrame KeyTime="0"
																		Value="1" />
											</ObjectAnimationUsingKeyFrames>

											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="OuterBorder"
																		   Storyboard.TargetProperty="Opacity">
												<DiscreteObjectKeyFrame KeyTime="0"
																		Value="0" />
											</ObjectAnimationUsingKeyFrames>

											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobOn"
																		   Storyboard.TargetProperty="Opacity">
												<DiscreteObjectKeyFrame KeyTime="0"
																		Value="1" />
											</ObjectAnimationUsingKeyFrames>

											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobOff"
																		   Storyboard.TargetProperty="Opacity">
												<DiscreteObjectKeyFrame KeyTime="0"
																		Value="0" />
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobOnStateOverlay"
																		   Storyboard.TargetProperty="Opacity">
												<DiscreteObjectKeyFrame KeyTime="0"
																		Value="1" />
											</ObjectAnimationUsingKeyFrames>

											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobOffStateOverlay"
																		   Storyboard.TargetProperty="Opacity">
												<DiscreteObjectKeyFrame KeyTime="0"
																		Value="0" />
											</ObjectAnimationUsingKeyFrames>
										</Storyboard>
									</VisualTransition>

									<VisualTransition x:Name="DraggingToOffTransition"
													  GeneratedDuration="0"
													  From="Dragging"
													  To="Off">
										<Storyboard />
									</VisualTransition>

									<VisualTransition x:Name="OnToOffTransition"
													  GeneratedDuration="0"
													  From="On"
													  To="Off">
										<Storyboard />
									</VisualTransition>

									<VisualTransition x:Name="OffToOnTransition"
													  GeneratedDuration="0"
													  From="Off"
													  To="On">
										<Storyboard>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="HighlightBorder"
																		   Storyboard.TargetProperty="Opacity">
												<DiscreteObjectKeyFrame KeyTime="0"
																		Value="1" />
											</ObjectAnimationUsingKeyFrames>

											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="OuterBorder"
																		   Storyboard.TargetProperty="Opacity">
												<DiscreteObjectKeyFrame KeyTime="0"
																		Value="0" />
											</ObjectAnimationUsingKeyFrames>

											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobOn"
																		   Storyboard.TargetProperty="Opacity">
												<DiscreteObjectKeyFrame KeyTime="0"
																		Value="1" />
											</ObjectAnimationUsingKeyFrames>

											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobOff"
																		   Storyboard.TargetProperty="Opacity">
												<DiscreteObjectKeyFrame KeyTime="0"
																		Value="0" />
											</ObjectAnimationUsingKeyFrames>

											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobOnStateOverlay"
																		   Storyboard.TargetProperty="Opacity">
												<DiscreteObjectKeyFrame KeyTime="0"
																		Value="1" />
											</ObjectAnimationUsingKeyFrames>

											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobOffStateOverlay"
																		   Storyboard.TargetProperty="Opacity">
												<DiscreteObjectKeyFrame KeyTime="0"
																		Value="0" />
											</ObjectAnimationUsingKeyFrames>
										</Storyboard>
									</VisualTransition>
								</VisualStateGroup.Transitions>

								<VisualState x:Name="Dragging" />

								<VisualState x:Name="Off">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobOnShadow"
																	   Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="Collapsed" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobOffShadow"
																	   Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="Visible" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>

								<VisualState x:Name="On">
									<Storyboard>

										<DoubleAnimation Storyboard.TargetName="KnobTranslateTransform"
														 Storyboard.TargetProperty="X"
														 To="14"
														 Duration="0" />

										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobOnShadow"
																	   Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="Visible" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobOffShadow"
																	   Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="Collapsed" />
										</ObjectAnimationUsingKeyFrames>

										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="HighlightBorder"
																	   Storyboard.TargetProperty="Opacity">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="1" />
										</ObjectAnimationUsingKeyFrames>

										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="OuterBorder"
																	   Storyboard.TargetProperty="Opacity">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="0" />
										</ObjectAnimationUsingKeyFrames>

										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobOn"
																	   Storyboard.TargetProperty="Opacity">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="1" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobOnStateOverlay"
																	   Storyboard.TargetProperty="Opacity">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="1" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobOff"
																	   Storyboard.TargetProperty="Opacity">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="0" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobOffStateOverlay"
																	   Storyboard.TargetProperty="Opacity">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="0" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>

							<VisualStateGroup x:Name="ContentStates">
								<!-- No notion of OnContent and OffContent for Material -->
								<VisualState x:Name="OffContent" />
								<VisualState x:Name="OnContent" />
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>

						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="Auto" />
							<ColumnDefinition Width="*" />
							<ColumnDefinition Width="Auto" />
						</Grid.ColumnDefinitions>

						<ContentPresenter Grid.Column="0"
										  x:Name="HeaderContentPresenter"
										  Content="{TemplateBinding Header}"
										  ContentTemplate="{TemplateBinding HeaderTemplate}"
										  Foreground="{ThemeResource OnSurfaceMediumBrush}"
										  FontSize="{TemplateBinding FontSize}"
										  FontWeight="{TemplateBinding FontWeight}"
										  FontFamily="{TemplateBinding FontFamily}"
										  Margin="{StaticResource MaterialToggleSwitchHeaderMargin}"
										  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
										  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />

						<Grid Grid.ColumnSpan="3"
							  Control.IsTemplateFocusTarget="True" />

						<!-- Marker element used to compute draggable zone -->
						<Rectangle Grid.Column="2"
								   x:Name="SwitchKnobBounds" />

						<Rectangle x:Name="OuterBorder"
								   Grid.Column="2"
								   Width="34"
								   Height="14"
								   Margin="10,0"
								   Fill="{ThemeResource MaterialToggleSwitchOffBackgroundBrush}"
								   RadiusX="7"
								   RadiusY="7" />

						<Rectangle x:Name="HighlightBorder"
								   Grid.Column="2"
								   Width="34"
								   Height="14"
								   Margin="10,0"
								   Fill="{TemplateBinding Background}"
								   Opacity="0"
								   RadiusX="7"
								   RadiusY="7" />

						<Grid x:Name="SwitchKnob"
							  Grid.Column="2"
							  Width="40"
							  Height="40"
							  HorizontalAlignment="Left"
							  VerticalAlignment="Center">
							<Grid.RenderTransform>
								<TranslateTransform x:Name="KnobTranslateTransform" />
							</Grid.RenderTransform>

							<Ellipse x:Name="SwitchKnobOnShadow"
									 Width="40"
									 Height="40"
									 Fill="{TemplateBinding Foreground}"
									 Opacity="0"
									 Visibility="Collapsed" />

							<Ellipse x:Name="SwitchKnobOffShadow"
									 Width="40"
									 Height="40"
									 Fill="#FF808080"
									 Opacity="0" />

							<toolkit:ElevatedView Width="20"
												  Height="20"
												  HorizontalAlignment="Stretch"
												  VerticalAlignment="Stretch"
												  Background="Transparent"
												  CornerRadius="10"
												  Elevation="4">
								<Grid>
									<Ellipse x:Name="SwitchKnobOn"
											 Width="20"
											 Height="20"
											 Fill="{TemplateBinding Foreground}"
											 Opacity="0" />

									<Ellipse x:Name="SwitchKnobOnStateOverlay"
											 Width="20"
											 Height="20"
											 Opacity="0" />

									<Ellipse x:Name="SwitchKnobOff"
											 Width="20"
											 Height="20"
											 Fill="{ThemeResource MaterialToggleSwitchOffButtonBrush}" />

									<Ellipse x:Name="SwitchKnobOffStateOverlay"
											 Width="20"
											 Height="20" />
								</Grid>
							</toolkit:ElevatedView>
						</Grid>

						<Thumb x:Name="SwitchThumb"
							   Grid.Column="2"
							   AutomationProperties.AccessibilityView="Raw">
							<Thumb.Template>
								<ControlTemplate TargetType="Thumb">
									<Rectangle Fill="Transparent" />
								</ControlTemplate>
							</Thumb.Template>
						</Thumb>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</not_mobile:Style>

	<ios:Style x:Key="MaterialToggleSwitchStyle"
			   TargetType="ToggleSwitch">
		<Setter Property="FontFamily"
				Value="{ThemeResource MaterialRegularFontFamily}" />
		<Setter Property="HorizontalAlignment"
				Value="Left" />
		<Setter Property="HorizontalContentAlignment"
				Value="Stretch" />
		<Setter Property="VerticalContentAlignment"
				Value="Center" />
		<Setter Property="Foreground"
				Value="{ThemeResource MaterialToggleSwitchOnButtonBrush}" />

		<!-- microsoft/microsoft-ui-xaml#6157: reset min-width inherited from base style -->
		<Setter Property="MinWidth"
				Value="0" />
		<Setter Property="Padding"
				Value="9,0,10,0" />

		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ToggleSwitch">

					<StackPanel Width="{TemplateBinding Width}"
								Height="{TemplateBinding Height}"
								Padding="{TemplateBinding Padding}"
								HorizontalAlignment="Stretch"
								BorderBrush="{TemplateBinding BorderBrush}"
								BorderThickness="{TemplateBinding BorderThickness}">

						<!-- The visibility is managed by the control impl via 'HeaderContentPresenter' marker -->
						<ContentPresenter x:Name="HeaderContentPresenter"
										  Content="{TemplateBinding Header}"
										  ContentTemplate="{TemplateBinding HeaderTemplate}"
										  Foreground="{ThemeResource OnSurfaceMediumBrush}"
										  FontSize="{TemplateBinding FontSize}"
										  FontWeight="{TemplateBinding FontWeight}"
										  FontFamily="{TemplateBinding FontFamily}"
										  Margin="{StaticResource MaterialToggleSwitchHeaderMargin}"
										  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
										  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />

						<!-- note: BindableUISwitch is a native control and does not support any attached properties nor common FrameworkElement/UIElement properties -->
						<BindableUISwitch Background="{TemplateBinding Foreground}"
										  Enabled="{TemplateBinding IsEnabled}"
										  IsOn="{TemplateBinding IsOn, Mode=TwoWay}" />
					</StackPanel>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</ios:Style>

	<android:Style x:Key="MaterialToggleSwitchStyle"
				   TargetType="ToggleSwitch">
		<Setter Property="FontFamily"
				Value="{ThemeResource MaterialRegularFontFamily}" />
		<Setter Property="Foreground"
				Value="{ThemeResource MaterialToggleSwitchOnButtonBrush}" />
		<Setter Property="HorizontalAlignment"
				Value="Left" />
		<Setter Property="HorizontalContentAlignment"
				Value="Stretch" />
		<Setter Property="VerticalContentAlignment"
				Value="Center" />
		<Setter Property="MinHeight"
				Value="25" />

		<!-- microsoft/microsoft-ui-xaml#6157: reset min-width inherited from base style -->
		<Setter Property="MinWidth"
				Value="0" />

		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ToggleSwitch">

					<Grid Width="{TemplateBinding Width}"
						  Height="{TemplateBinding Height}"
						  Padding="{TemplateBinding Padding}"
						  HorizontalAlignment="Stretch"
						  BorderBrush="{TemplateBinding BorderBrush}"
						  BorderThickness="{TemplateBinding BorderThickness}">

						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal" />
								<VisualState x:Name="PointerOver" />
								<VisualState x:Name="Pressed" />
								<VisualState x:Name="Disabled">
									<VisualState.Setters>
										<Setter Target="SwitchGrid.Visibility"
												Value="Collapsed" />
									</VisualState.Setters>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="ToggleStates">
								<VisualState x:Name="Dragging" />

								<VisualState x:Name="Off">
									<VisualState.Setters>
										<Setter Target="AndroidSwitch.TrackTint"
												Value="{ThemeResource MaterialToggleSwitchOffBackgroundBrush}" />
										<Setter Target="OnDisabledGrid.Visibility"
												Value="Collapsed" />
										<Setter Target="OffDisabledGrid.Visibility"
												Value="Visible" />
									</VisualState.Setters>
								</VisualState>

								<VisualState x:Name="On">
									<VisualState.Setters>
										<Setter Target="AndroidSwitch.TrackTint"
												Value="{ThemeResource MaterialToggleSwitchOnBackgroundBrush}" />
										<Setter Target="OnDisabledGrid.Visibility"
												Value="Visible" />
										<Setter Target="OffDisabledGrid.Visibility"
												Value="Collapsed" />
									</VisualState.Setters>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>

						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="*" />
							<ColumnDefinition Width="Auto" />
						</Grid.ColumnDefinitions>

						<!-- The visibility is managed by the control impl via 'HeaderContentPresenter' marker -->
						<ContentPresenter Grid.Row="0"
										  x:Name="HeaderContentPresenter"
										  Content="{TemplateBinding Header}"
										  ContentTemplate="{TemplateBinding HeaderTemplate}"
										  Foreground="{ThemeResource OnSurfaceMediumBrush}"
										  FontSize="{TemplateBinding FontSize}"
										  FontWeight="{TemplateBinding FontWeight}"
										  FontFamily="{TemplateBinding FontFamily}"
										  Margin="{StaticResource MaterialToggleSwitchHeaderMargin}"
										  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
										  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />

						<!-- TODO: fix disabled on thumbtint, using MaterialToggleSwitchOnLowButtonBrush -> OnPrimaryMedium shows a transparent opacity with android native toggleswitch -->
						<!-- note: BindableSwitchCompat is a native control and does not support any attached properties nor common FrameworkElement/UIElement properties -->
						<!-- Grid wrappers are used here to alter the Visibility by proxy -->
						<Grid Grid.Column="1"
							  x:Name="OnDisabledGrid">

							<!-- Provides a disabled state for an on switch -->
							<BindableSwitchCompat Checked="{TemplateBinding IsOn, Mode=TwoWay}"
												  Enabled="{TemplateBinding IsEnabled}"
												  ThumbTint="{ThemeResource MaterialPrimaryVariantLowThumbColorBrush}"
												  TrackTint="{ThemeResource MaterialToggleSwitchOnLowBackgroundBrush}" />
						</Grid>
						<Grid Grid.Column="1"
							  x:Name="OffDisabledGrid">

							<!-- Provides a disabled state for an off switch -->
							<BindableSwitchCompat Checked="{TemplateBinding IsOn, Mode=TwoWay}"
												  Enabled="{TemplateBinding IsEnabled}"
												  ThumbTint="{ThemeResource MaterialPrimaryVariantLowThumbColorBrush}"
												  TrackTint="{ThemeResource MaterialToggleSwitchOnLowBackgroundBrush}" />
						</Grid>
						<Grid Grid.Column="1"
							  x:Name="SwitchGrid">
							<BindableSwitchCompat x:Name="AndroidSwitch"
												  Checked="{TemplateBinding IsOn, Mode=TwoWay}"
												  Enabled="{TemplateBinding IsEnabled}" />
						</Grid>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</android:Style>
</ResourceDictionary>

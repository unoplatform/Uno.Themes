<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
					xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
					xmlns:toolkit="using:Uno.UI.Toolkit"
					mc:Ignorable="">

	<!-- 28-CornerRadius doesnt match the general 24-Spacing; this is indeed correct. -->
	<x:Double x:Key="MaterialContentDialogMinWidth">288</x:Double>
	<x:Double x:Key="MaterialContentDialogMinHeight">132</x:Double>
	<x:Double x:Key="MaterialContentDialogMaxWidth">560</x:Double>
	<x:Double x:Key="MaterialContentDialogMaxHeight">560</x:Double>
	<Thickness x:Key="MaterialContentDialogEdgeMargin">56</Thickness>
	<Thickness x:Key="MaterialContentDialogPanelPadding">24</Thickness>
	<CornerRadius x:Key="MaterialContentDialogCornerRadius">28</CornerRadius>
	<GridLength x:Key="MaterialContentDialogButtonSpacing">8</GridLength>
	<Thickness x:Key="MaterialContentDialogTitleToContentMargin">0,0,0,16</Thickness>
	<Thickness x:Key="MaterialContentDialogCommandSpaceToContentMargin">0,24,0,0</Thickness>

	<StaticResource x:Key="MaterialContentDialogBackground" ResourceKey="SurfaceBrush" />
	<StaticResource x:Key="MaterialContentDialogSmokeLayerBackground" ResourceKey="OnSurfaceLowBrush" />

	<!-- === title: OnSurface, -->
	<StaticResource x:Key="MaterialContentDialogTitleForeground" ResourceKey="OnSurfaceBrush" />

	<!-- === content: OnSurface\Variant -->
	<StaticResource x:Key="MaterialContentDialogContentForeground" ResourceKey="OnSurfaceVariantBrush" />

	<!-- note: MaterialContentDialogDefaultButtonStyle is the style associated with ContentDialog.DefaultButton (accented or CTA btn) -->
	<Style x:Key="MaterialContentDialogButtonStyle"
		   TargetType="Button"
		   BasedOn="{StaticResource MaterialTextButtonStyle}">
		<Setter Property="HorizontalAlignment" Value="Right" />
		<Setter Property="VerticalAlignment" Value="Stretch" />
	</Style>
	<Style x:Key="MaterialContentDialogDefaultButtonStyle"
		   TargetType="Button"
		   BasedOn="{StaticResource MaterialFilledButtonStyle}">
		<Setter Property="HorizontalAlignment" Value="Right" />
		<Setter Property="VerticalAlignment" Value="Stretch" />
	</Style>

	<Style x:Key="MaterialContentDialogStyle" TargetType="ContentDialog">

		<Setter Property="Background" Value="{StaticResource MaterialContentDialogBackground}" />
		<Setter Property="Foreground" Value="{StaticResource MaterialContentDialogContentForeground}" />
		<Setter Property="CornerRadius" Value="{StaticResource MaterialContentDialogCornerRadius}" />

		<Setter Property="HorizontalAlignment" Value="Stretch" />
		<Setter Property="VerticalAlignment" Value="Stretch" />

		<Setter Property="PrimaryButtonStyle" Value="{StaticResource MaterialContentDialogButtonStyle}" />
		<Setter Property="SecondaryButtonStyle" Value="{StaticResource MaterialContentDialogButtonStyle}" />
		<Setter Property="CloseButtonStyle" Value="{StaticResource MaterialContentDialogButtonStyle}" />

		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ContentDialog">
					<Border x:Name="Container">
						<!-- DialogSpace/CommandSpace are reserved name from the control implementation. -->
						<!-- `Title` is toggled from the impl; and `CommandSpace`, via visual-states -->

						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="DialogShowingStates">
								<VisualStateGroup.Transitions>
									<VisualTransition To="DialogHidden" />
									<VisualTransition To="DialogShowing" />
								</VisualStateGroup.Transitions>

								<VisualState x:Name="DialogHidden" />
								<VisualState x:Name="DialogShowing">
									<VisualState.Setters>
										<Setter Target="PrimaryButton.IsTabStop" Value="True" />
										<Setter Target="SecondaryButton.IsTabStop" Value="True" />
										<Setter Target="CloseButton.IsTabStop" Value="True" />
										<Setter Target="LayoutRoot.Visibility" Value="Visible" />
										<Setter Target="RealBackgroundElement.TabFocusNavigation" Value="Cycle" />
									</VisualState.Setters>
								</VisualState>
								<VisualState x:Name="DialogShowingWithoutSmokeLayer">
									<VisualState.Setters>
										<Setter Target="PrimaryButton.IsTabStop" Value="True" />
										<Setter Target="SecondaryButton.IsTabStop" Value="True" />
										<Setter Target="CloseButton.IsTabStop" Value="True" />
										<Setter Target="LayoutRoot.Visibility" Value="Visible" />
										<Setter Target="LayoutRoot.Background" Value="{x:Null}" />
									</VisualState.Setters>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="DialogSizingStates">
								<VisualState x:Name="DefaultDialogSizing" />
								<VisualState x:Name="FullDialogSizing" />
							</VisualStateGroup>
							<VisualStateGroup x:Name="ButtonsVisibilityStates">
								<VisualState x:Name="AllVisible" />
								<VisualState x:Name="NoneVisible">
									<VisualState.Setters>
										<Setter Target="CommandSpace.Visibility" Value="Collapsed" />
									</VisualState.Setters>
								</VisualState>
								<VisualState x:Name="PrimaryVisible">
									<VisualState.Setters>
										<Setter Target="FirstSpacer.Width" Value="0" />
										<Setter Target="SecondaryButton.Visibility" Value="Collapsed" />
										<Setter Target="SecondSpacer.Width" Value="0" />
										<Setter Target="CloseButton.Visibility" Value="Collapsed" />
									</VisualState.Setters>
								</VisualState>
								<VisualState x:Name="SecondaryVisible">
									<VisualState.Setters>
										<Setter Target="PrimaryButton.Visibility" Value="Collapsed" />
										<Setter Target="FirstSpacer.Width" Value="0" />
										<Setter Target="SecondSpacer.Width" Value="0" />
										<Setter Target="CloseButton.Visibility" Value="Collapsed" />
									</VisualState.Setters>
								</VisualState>
								<VisualState x:Name="CloseVisible">
									<VisualState.Setters>
										<Setter Target="PrimaryButton.Visibility" Value="Collapsed" />
										<Setter Target="FirstSpacer.Width" Value="0" />
										<Setter Target="SecondaryButton.Visibility" Value="Collapsed" />
										<Setter Target="SecondSpacer.Width" Value="0" />
									</VisualState.Setters>
								</VisualState>
								<VisualState x:Name="PrimaryAndSecondaryVisible">
									<VisualState.Setters>
										<Setter Target="SecondSpacer.Width" Value="0" />
										<Setter Target="CloseButton.Visibility" Value="Collapsed" />
									</VisualState.Setters>
								</VisualState>
								<VisualState x:Name="PrimaryAndCloseVisible">
									<VisualState.Setters>
										<Setter Target="FirstSpacer.Width" Value="0" />
										<Setter Target="SecondaryButton.Visibility" Value="Collapsed" />
									</VisualState.Setters>
								</VisualState>
								<VisualState x:Name="SecondaryAndCloseVisible">
									<VisualState.Setters>
										<Setter Target="PrimaryButton.Visibility" Value="Collapsed" />
										<Setter Target="FirstSpacer.Width" Value="0" />
									</VisualState.Setters>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="DefaultButtonStates">
								<VisualState x:Name="NoDefaultButton" />
								<VisualState x:Name="PrimaryAsDefaultButton">
									<VisualState.Setters>
										<Setter Target="PrimaryButton.Style" Value="{StaticResource MaterialContentDialogDefaultButtonStyle}" />
									</VisualState.Setters>
								</VisualState>
								<VisualState x:Name="SecondaryAsDefaultButton">
									<VisualState.Setters>
										<Setter Target="SecondaryButton.Style" Value="{StaticResource MaterialContentDialogDefaultButtonStyle}" />
									</VisualState.Setters>
								</VisualState>
								<VisualState x:Name="CloseAsDefaultButton">
									<VisualState.Setters>
										<Setter Target="CloseButton.Style" Value="{StaticResource MaterialContentDialogDefaultButtonStyle}" />
									</VisualState.Setters>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="DialogBorderStates" />
						</VisualStateManager.VisualStateGroups>

						<Grid x:Name="LayoutRoot">
							<Rectangle x:Name="SmokeLayerBackground" Fill="{StaticResource MaterialContentDialogSmokeLayerBackground}" />

							<!-- workaround: BackgroundElement is hidden, because it has an undesired shadow that the control impl applies. -->
							<Border x:Name="BackgroundElement"
									Opacity="0"
									Visibility="Collapsed" />
							<toolkit:ElevatedView x:Name="RealBackgroundElement"
												  Background="{TemplateBinding Background}"
												  BackgroundSizing="InnerBorderEdge"
												  BorderBrush="{TemplateBinding BorderBrush}"
												  BorderThickness="{TemplateBinding BorderThickness}"
												  CornerRadius="{TemplateBinding CornerRadius}"
												  Elevation="3"
												  FlowDirection="{TemplateBinding FlowDirection}"
												  MaxWidth="{StaticResource MaterialContentDialogMaxWidth}"
												  MaxHeight="{StaticResource MaterialContentDialogMaxHeight}"
												  Margin="{StaticResource MaterialContentDialogEdgeMargin}"
												  HorizontalAlignment="Center"
												  VerticalAlignment="Center">
								<toolkit:ElevatedView.RenderTransform>
									<ScaleTransform x:Name="ScaleTransform" />
								</toolkit:ElevatedView.RenderTransform>
								
								<Grid>
									
									<!--
										workaround: this holder enforce a min-size when the content isnt enough, but allows for
										the dialog to shrink below min-size if the screen dictates (better than being clipped).
										- min-size on RealBackgroundElement will clip the dialog when the screen is too small
										- min-size on DialogSpace will prevent Title from being centered when screen is too small
									-->
									<Border x:Name="MinSizeHolder"
											MinWidth="{StaticResource MaterialContentDialogMinWidth}"
											MinHeight="{StaticResource MaterialContentDialogMinHeight}" />
									
									<Grid x:Name="DialogSpace" Margin="{StaticResource MaterialContentDialogPanelPadding}">
										<Grid.RowDefinitions>
											<!-- 0: Title, 1: Content, 2: CommandSpace -->
											<RowDefinition Height="Auto" />
											<RowDefinition Height="*" />
											<RowDefinition Height="Auto" />
										</Grid.RowDefinitions>

										<ContentControl Grid.Row="0"
														x:Name="Title"
														Content="{TemplateBinding Title}"
														ContentTemplate="{TemplateBinding TitleTemplate}"
														Foreground="{StaticResource MaterialContentDialogTitleForeground}"
														FontFamily="{ThemeResource HeadlineSmallFontFamily}"
														FontSize="{StaticResource HeadlineSmallFontSize}"
														FontWeight="{ThemeResource HeadlineSmallFontWeight}"
														Margin="{StaticResource MaterialContentDialogTitleToContentMargin}"
														HorizontalAlignment="Center"
														VerticalAlignment="Top"
														IsTabStop="False">
											<ContentControl.Template>
												<ControlTemplate TargetType="ContentControl">
													<ContentPresenter Content="{TemplateBinding Content}"
																	  ContentTemplate="{TemplateBinding ContentTemplate}"
																	  ContentTransitions="{TemplateBinding ContentTransitions}"
																	  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
																	  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
																	  MaxLines="2"
																	  TextWrapping="Wrap"
																	  Margin="{TemplateBinding Padding}" />
												</ControlTemplate>
											</ContentControl.Template>
										</ContentControl>
										<ScrollViewer Grid.Row="1"
													  x:Name="ContentScrollViewer"
													  HorizontalScrollBarVisibility="Disabled"
													  VerticalScrollBarVisibility="Disabled"
													  ZoomMode="Disabled"
													  IsTabStop="False">
											<ContentPresenter x:Name="Content"
															  Content="{TemplateBinding Content}"
															  ContentTemplate="{TemplateBinding ContentTemplate}"
															  Foreground="{TemplateBinding Foreground}"
															  FontFamily="{ThemeResource BodyMediumFontFamily}"
															  FontSize="{ThemeResource BodyMediumFontSize}"
															  FontWeight="{ThemeResource BodyMediumFontWeight}"
															  TextWrapping="Wrap" />
										</ScrollViewer>
										<Grid x:Name="CommandSpace"
											  Grid.Row="2"
											  Margin="{StaticResource MaterialContentDialogCommandSpaceToContentMargin}"
											  HorizontalAlignment="Right"
											  VerticalAlignment="Bottom"
											  XYFocusKeyboardNavigation="Enabled">

											<Grid.ColumnDefinitions>
												<ColumnDefinition x:Name="CloseColumn" Width="Auto" />
												<ColumnDefinition x:Name="SecondSpacer" Width="{StaticResource MaterialContentDialogButtonSpacing}" />
												<ColumnDefinition x:Name="SecondaryColumn" Width="Auto" />
												<ColumnDefinition x:Name="FirstSpacer" Width="{StaticResource MaterialContentDialogButtonSpacing}" />
												<ColumnDefinition x:Name="PrimaryColumn" Width="Auto" />
											</Grid.ColumnDefinitions>

											<Button Grid.Column="0"
													x:Name="CloseButton"
													Content="{TemplateBinding CloseButtonText}"
													IsTabStop="False"
													ElementSoundMode="FocusOnly"
													Style="{TemplateBinding CloseButtonStyle}" />
											<Button Grid.Column="2"
													x:Name="SecondaryButton"
													Content="{TemplateBinding SecondaryButtonText}"
													IsEnabled="{TemplateBinding IsSecondaryButtonEnabled}"
													IsTabStop="False"
													ElementSoundMode="FocusOnly"
													Style="{TemplateBinding SecondaryButtonStyle}" />
											<Button Grid.Column="4"
													x:Name="PrimaryButton"
													Content="{TemplateBinding PrimaryButtonText}"
													IsEnabled="{TemplateBinding IsPrimaryButtonEnabled}"
													IsTabStop="False"
													ElementSoundMode="FocusOnly"
													Style="{TemplateBinding PrimaryButtonStyle}" />

										</Grid>
									</Grid>
								</Grid>
							</toolkit:ElevatedView>
						</Grid>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="MaterialDefaultContentDialogStyle"
		   TargetType="ContentDialog"
		   BasedOn="{StaticResource MaterialContentDialogStyle}" />
</ResourceDictionary>

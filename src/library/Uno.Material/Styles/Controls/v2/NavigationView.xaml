<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:local="using:Microsoft.UI.Xaml.Controls"
                    xmlns:animatedvisuals="using:Microsoft.UI.Xaml.Controls.AnimatedVisuals"
                    xmlns:media="using:Microsoft.UI.Xaml.Media"
                    xmlns:primitives="using:Microsoft.UI.Xaml.Controls.Primitives"
                    xmlns:toolkit="using:Uno.UI.Toolkit"
                    xmlns:um="using:Uno.Material"
                    xmlns:contract4Present="http://schemas.microsoft.com/winfx/2006/xaml/presentation?IsApiContractPresent(Windows.Foundation.UniversalApiContract,4)"
                    xmlns:contract4NotPresent="http://schemas.microsoft.com/winfx/2006/xaml/presentation?IsApiContractNotPresent(Windows.Foundation.UniversalApiContract,4)"
                    xmlns:contract7Present="http://schemas.microsoft.com/winfx/2006/xaml/presentation?IsApiContractPresent(Windows.Foundation.UniversalApiContract,7)"
                    xmlns:contract7NotPresent="http://schemas.microsoft.com/winfx/2006/xaml/presentation?IsApiContractNotPresent(Windows.Foundation.UniversalApiContract,7)"
                    xmlns:primitiveContract7Present="using:Microsoft.UI.Xaml.Controls.Primitives?IsApiContractPresent(Windows.Foundation.UniversalApiContract,7)"
                    xmlns:win="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:todo="what should be done"
                    mc:Ignorable="todo">

    <!--
        Source taken/modified from: https://github.com/unoplatform/uno/tree/4.5.12
        - src\Uno.UI.FluentTheme.v2\Resources\Version2\PriorityDefault\NavigationView.xaml
        - src\Uno.UI.FluentTheme.v2\Resources\Version2\PriorityDefault\NavigationView_rs2_themeresources.xaml
        - src\Uno.UI.FluentTheme.v2\Resources\Version2\PriorityDefault\NavigationView_rs1_themeresources.xaml
    -->
    <!--
        Important Note: Beside the AnimatedIcon problem that can be bypassed, the prerelease version also introduces another problem with
        the layout of the back/close/toggle/nvi icons which we are unable to fix here (incompatible MinWidth+Margin injected from the control implementation).
        Because of that, the consuming app should be at least on 2.6.0, which shouldn't be a problem as recent unoapp template has been on 2.6.2 for a while.
        
        Important Changes:
        - removed AnimatedIcon due to missing api support from Microsoft.UI.Xaml 2.6.0 (at least stable)
        ____^ we are also version locked to pre-release due to ProgressRing requiring the access to (Ind|D)eterminateSource
        ____  which is only available in pre-release and still not in stable (2.8 at the time of writing)
        - general values (color+measurements) changes to fit the design
    -->
    <!--
        note: when debugging with LiveVisualTree, it is suggested to comment out Ripple (it only affect on-hit effect).
        note: Should 'The parameter is incorrect.' exception ever be thrown, changes to MaterialNavigationViewIconButtonStyle are likely the cause.
    -->

    <ResourceDictionary.ThemeDictionaries>
        <ResourceDictionary x:Key="Default">
            <!--#region Material Theming-->

            <!-- NavigationView -->
            <CornerRadius x:Key="MaterialNavigationViewSplitViewCornerRadius">0,14,14,0</CornerRadius>
            <CornerRadius x:Key="MaterialNavigationViewContentGridCornerRadius">14,0,0,14</CornerRadius>

            <!-- NavigationView\Buttons -->
            <x:Double x:Key="MaterialNavigationViewButtonWidth">56</x:Double>
            <CornerRadius x:Key="MaterialNavigationViewButtonCornerRadius">28</CornerRadius>
            <x:Double x:Key="MaterialNavigationViewButtonIconLength">24</x:Double>
            <x:Double x:Key="MaterialNavigationViewButtonIconSymbolFontSize">24</x:Double>
            <Thickness x:Key="MaterialNavigationViewButtonMarginWhenStackedVertically">12,0</Thickness>

            <!-- NavigationViewItem -->
            <x:Double x:Key="MaterialNavigationItemHeight">56</x:Double>
            <CornerRadius x:Key="MaterialNavigationViewItemCornerRadius">28</CornerRadius>
            <CornerRadius x:Key="MaterialNavigationViewItemCornerRadiusLeftOnly">28,0,0,28</CornerRadius>
            <Thickness x:Key="MaterialNavigationItemLeftMargin">12,0</Thickness>
            <x:Double x:Key="MaterialNavigationItemIconLength">24</x:Double>
            <Thickness x:Key="MaterialNavigationItemContentMargin">12,0,0,0</Thickness>
            <Thickness x:Key="MaterialNavigationItemContentMarginWithoutIcon">0</Thickness>
            <!--#endregion-->

            <!--#region Resources Imported from Reference-->

            <Thickness x:Key="NavigationViewAutoSuggestBoxMargin">16,0</Thickness>
            <Thickness x:Key="TopNavigationViewAutoSuggestBoxMargin">4,0</Thickness>
            <x:Double x:Key="PaneToggleButtonHeight">56</x:Double>
            <x:Double x:Key="PaneToggleButtonWidth">80</x:Double>
            <x:Double x:Key="NavigationViewCompactPaneLength">80</x:Double>
            <x:Double x:Key="NavigationViewIconBoxWidth">40</x:Double>
            <x:Double x:Key="NavigationViewTopPaneHeight">48</x:Double>
            <x:Double x:Key="NavigationViewAutoSuggestAreaHeight">40</x:Double>
            <x:Double x:Key="TopNavigationViewPaneCustomContentMinWidth">80</x:Double>
            <x:Double x:Key="TopNavigationViewOverflowButtonWidth">40</x:Double>
            <x:Double x:Key="TopNavigationViewOverflowButtonHeight">40</x:Double>
            <x:Double x:Key="TopNavigationViewSettingsButtonWidth">40</x:Double>
            <x:Double x:Key="TopNavigationViewSettingsButtonHeight">40</x:Double>

            <x:Double x:Key="NavigationViewItemOnLeftMinHeight">56</x:Double>
            <x:Double x:Key="NavigationViewPaneHeaderRowMinHeight">56</x:Double>
            <x:Double x:Key="NavigationViewItemOnLeftIconBoxHeight">24</x:Double>
            <x:Double x:Key="NavigationViewSelectionIndicatorWidth">3</x:Double>
            <x:Double x:Key="NavigationViewSelectionIndicatorHeight">24</x:Double>
            <x:Double x:Key="NavigationViewSelectionIndicatorRadius">2</x:Double>

            <x:Double x:Key="NavigationViewItemSeparatorHeight">1</x:Double>
            <x:Double x:Key="TopNavigationViewItemSeparatorWidth">1</x:Double>

            <Thickness x:Key="NavigationViewToggleBorderThickness">0</Thickness>
            <Thickness x:Key="NavigationViewItemBorderThickness">1</Thickness>
            <Thickness x:Key="NavigationViewItemOnLeftIconBoxMargin">3</Thickness>
            <Thickness x:Key="NavigationViewItemButtonMargin">12,0</Thickness>
            <Thickness x:Key="NavigationViewItemInnerHeaderMargin">16,0</Thickness>
            <Thickness x:Key="TopNavigationViewItemInnerHeaderMargin">12,0</Thickness>
            <Thickness x:Key="NavigationViewMinimalHeaderMargin">-24,44,0,0</Thickness>
            <Thickness x:Key="NavigationViewButtonHolderGridMargin">0</Thickness>
            <Thickness x:Key="NavigationViewPaneContentGridMargin">-1,3</Thickness>
            <Thickness x:Key="NavigationViewContentGridBorderThickness">1,1,0,0</Thickness>
            <Thickness x:Key="NavigationViewMinimalContentGridBorderThickness">0,1,0,0</Thickness>
            <Thickness x:Key="TopNavigationViewContentGridBorderThickness">0,1,0,0</Thickness>
            <Thickness x:Key="TopNavigationViewTopNavGridMargin">4,0</Thickness>
            <Thickness x:Key="NavigationViewBorderThickness">1</Thickness>
            <Thickness x:Key="NavigationViewHeaderMargin">56,44,0,0</Thickness>
            <Thickness x:Key="NavigationViewContentPresenterMargin">0</Thickness>
            <Thickness x:Key="NavigationViewContentMargin">0</Thickness>
            <Thickness x:Key="NavigationViewMinimalContentMargin">0</Thickness>
            <Thickness x:Key="TopNavigationViewContentMargin">0</Thickness>
            <Thickness x:Key="NavigationViewPaneTitlePresenterMargin">8,4,0,0</Thickness>
            <Thickness x:Key="NavigationViewItemMargin">0</Thickness>
            <Thickness x:Key="TopNavigationViewItemMargin">0</Thickness>
            <Thickness x:Key="NavigationViewItemSeparatorMargin">0,3,0,4</Thickness>
            <Thickness x:Key="NavigationViewCompactItemSeparatorMargin">0,3,0,4</Thickness>
            <Thickness x:Key="TopNavigationViewItemSeparatorMargin">3,0,4,0</Thickness>
            <Thickness x:Key="TopNavigationViewOverflowButtonMargin">0</Thickness>
            <Thickness x:Key="NavigationViewItemContentPresenterMargin">4,-1,8,-1</Thickness>
            <Thickness x:Key="NavigationViewCompactItemContentPresenterMargin">0,0,0,0</Thickness>
            <Thickness x:Key="TopNavigationViewItemContentPresenterMargin">8,-1,12,-1</Thickness>
            <Thickness x:Key="TopNavigationViewItemContentOnlyContentPresenterMargin">12,0</Thickness>
            <Thickness x:Key="NavigationViewItemExpandChevronMargin">0,0,-14,0</Thickness>
            <Thickness x:Key="TopNavigationViewItemExpandChevronMargin">-16,0,0,0</Thickness>
            <Thickness x:Key="TopNavigationViewItemIconOnlyExpandChevronMargin">0,0,0,0</Thickness>
            <Thickness x:Key="TopNavigationViewItemContentOnlyExpandChevronMargin">-12,0,0,0</Thickness>
            <Thickness x:Key="TopNavigationViewItemOnOverflowContentPresenterMargin">12,0,20,0</Thickness>
            <Thickness x:Key="TopNavigationViewItemOnOverflowNoIconContentPresenterMargin">16,0,20,0</Thickness>
            <Thickness x:Key="TopNavigationViewItemOnOverflowExpandChevronMargin">-4,0,-8,0</Thickness>
            <Thickness x:Key="TopNavigationViewItemOnOverflowExpandChevronPadding">12,0,12,0</Thickness>

            <CornerRadius x:Key="NavigationViewContentGridCornerRadius">8,0,0,0</CornerRadius>
            <CornerRadius x:Key="TopNavigationViewContentGridCornerRadius">0</CornerRadius>
            <CornerRadius x:Key="NavigationViewMinimalContentGridCornerRadius">0</CornerRadius>

            <!-- The two resources below must be defined at the app level in order to take effect. -->
            <Thickness x:Key="TopNavigationViewOverflowMenuPadding">0,8</Thickness>
            <Thickness x:Key="NavigationViewItemChildrenMenuFlyoutPadding">0,8</Thickness>

            <!--
                The resource below must be defined at the app level in order to affect the expand/collapse chevron font size
                used in the Top NavigationView's Overflow menu.
            -->
            <x:Double x:Key="NavigationViewItemExpandedGlyphFontSize">8</x:Double>
            <x:String x:Key="NavigationViewItemExpandedGlyph">&#xE70D;</x:String>
            <!--#endregion-->

            <x:Double x:Key="SplitViewOpenPaneThemeLength">320</x:Double>
            <x:Double x:Key="SplitViewCompactPaneThemeLength">48</x:Double>
            <Thickness x:Key="SplitViewLeftBorderThemeThickness">0,0,1,0</Thickness>
            <Thickness x:Key="SplitViewRightBorderThemeThickness">1,0,0,0</Thickness>
            <StaticResource x:Key="NavigationViewSplitViewLightDismissOverlayBackground" ResourceKey="SystemControlPageBackgroundMediumAltMediumBrush" />
            <x:String x:Key="SplitViewPaneAnimationOpenDuration">00:00:00.2</x:String>
            <x:String x:Key="SplitViewPaneAnimationOpenPreDuration">00:00:00.19999</x:String>
            <x:String x:Key="SplitViewPaneAnimationCloseDuration">00:00:00.1</x:String>
            <CornerRadius x:Key="SplitViewPaneRootCornerRadius">0</CornerRadius>

            <!-- Brushes -->
            <StaticResource x:Key="NavigationViewBackground" ResourceKey="SurfaceBrush" />
            <StaticResource x:Key="NavigationViewDefaultPaneBackground" ResourceKey="SystemControlPageBackgroundChromeLowBrush" />
            <StaticResource x:Key="NavigationViewPaneBackground" ResourceKey="SurfaceBrush" />
            <StaticResource x:Key="NavigationViewTopPaneBackground" ResourceKey="SystemControlTransparentBrush" />

            <StaticResource x:Key="NavigationViewDefaultPaneBorderBrush" ResourceKey="SurfaceBrush" />

            <StaticResource x:Key="NavigationViewButtonForeground" ResourceKey="OnSurfaceBrush" />
            <StaticResource x:Key="NavigationViewButtonForegroundPointerOver" ResourceKey="OnSurfaceBrush" />
            <StaticResource x:Key="NavigationViewButtonForegroundPressed" ResourceKey="OnSurfaceBrush" />
            <StaticResource x:Key="NavigationViewButtonForegroundDisabled" ResourceKey="OnSurfaceDisabledLowBrush" />

            <StaticResource x:Key="NavigationViewButtonBackground" ResourceKey="SystemControlTransparentBrush" />
            <StaticResource x:Key="NavigationViewButtonBackgroundPointerOver" ResourceKey="PrimaryHoverBrush" />
            <StaticResource x:Key="NavigationViewButtonBackgroundPressed" ResourceKey="PrimaryPressedBrush" />
            <StaticResource x:Key="NavigationViewButtonBackgroundDisabled" ResourceKey="SystemControlTransparentBrush" />

            <StaticResource x:Key="NavigationViewButtonRippleFeedback" ResourceKey="PrimaryPressedBrush" />

            <StaticResource x:Key="NavigationViewItemBackground" ResourceKey="SystemControlTransparentBrush" />
            <StaticResource x:Key="NavigationViewItemBackgroundPointerOver" ResourceKey="PrimaryHoverBrush" />
            <StaticResource x:Key="NavigationViewItemBackgroundPressed" ResourceKey="PrimaryPressedBrush" />
            <StaticResource x:Key="NavigationViewItemBackgroundDisabled" ResourceKey="OnSurfaceDisabledLowBrush" />
            <StaticResource x:Key="NavigationViewItemBackgroundSelected" ResourceKey="PrimarySelectedBrush" />
            <StaticResource x:Key="NavigationViewItemBackgroundSelectedPointerOver" ResourceKey="SystemControlTransparentBrush" />
            <StaticResource x:Key="NavigationViewItemBackgroundSelectedPressed" ResourceKey="SystemControlTransparentBrush" />
            <StaticResource x:Key="NavigationViewItemBackgroundSelectedDisabled" ResourceKey="SystemControlTransparentBrush" />

            <StaticResource x:Key="NavigationViewItemForeground" ResourceKey="OnSurfaceBrush" />
            <StaticResource x:Key="NavigationViewItemForegroundPointerOver" ResourceKey="SystemControlTransparentBrush" />
            <StaticResource x:Key="NavigationViewItemForegroundPressed" ResourceKey="SystemControlTransparentBrush" />
            <StaticResource x:Key="NavigationViewItemForegroundDisabled" ResourceKey="SystemControlTransparentBrush" />
            <StaticResource x:Key="NavigationViewItemForegroundSelected" ResourceKey="SystemControlTransparentBrush" />
            <StaticResource x:Key="NavigationViewItemForegroundSelectedPointerOver" ResourceKey="SystemControlTransparentBrush" />
            <StaticResource x:Key="NavigationViewItemForegroundSelectedPressed" ResourceKey="SystemControlTransparentBrush" />
            <StaticResource x:Key="NavigationViewItemForegroundSelectedDisabled" ResourceKey="SystemControlTransparentBrush" />

            <StaticResource x:Key="NavigationViewItemBorderBrush" ResourceKey="SystemControlTransparentBrush" />
            <StaticResource x:Key="NavigationViewItemBorderBrushPointerOver" ResourceKey="SystemControlTransparentBrush" />
            <StaticResource x:Key="NavigationViewItemBorderBrushPressed" ResourceKey="SystemControlTransparentBrush" />
            <StaticResource x:Key="NavigationViewItemBorderBrushDisabled" ResourceKey="SystemControlTransparentBrush" />
            <StaticResource x:Key="NavigationViewItemBorderBrushSelected" ResourceKey="SystemControlTransparentBrush" />
            <StaticResource x:Key="NavigationViewItemBorderBrushSelectedPointerOver" ResourceKey="SystemControlTransparentBrush" />
            <StaticResource x:Key="NavigationViewItemBorderBrushSelectedPressed" ResourceKey="SystemControlTransparentBrush" />
            <StaticResource x:Key="NavigationViewItemBorderBrushSelectedDisabled" ResourceKey="SystemControlTransparentBrush" />

            <StaticResource x:Key="NavigationViewItemSeparatorForeground" ResourceKey="OnSurfacePressedBrush" />
            <StaticResource x:Key="NavigationViewItemHeaderForeground" ResourceKey="SystemControlTransparentBrush" />

            <StaticResource x:Key="NavigationViewSelectionIndicatorForeground" ResourceKey="SystemControlTransparentBrush" />

            <StaticResource x:Key="NavigationViewItemRippleFeedback" ResourceKey="PrimaryPressedBrush" />

            <StaticResource x:Key="TopNavigationViewItemForeground" ResourceKey="SystemControlTransparentBrush" />
            <StaticResource x:Key="TopNavigationViewItemForegroundPointerOver" ResourceKey="SystemControlTransparentBrush" />
            <StaticResource x:Key="TopNavigationViewItemForegroundPressed" ResourceKey="SystemControlTransparentBrush" />
            <StaticResource x:Key="TopNavigationViewItemForegroundDisabled" ResourceKey="SystemControlTransparentBrush" />
            <StaticResource x:Key="TopNavigationViewItemForegroundSelected" ResourceKey="SystemControlTransparentBrush" />
            <StaticResource x:Key="TopNavigationViewItemForegroundSelectedPointerOver" ResourceKey="SystemControlTransparentBrush" />
            <StaticResource x:Key="TopNavigationViewItemForegroundSelectedPressed" ResourceKey="SystemControlTransparentBrush" />

            <StaticResource x:Key="TopNavigationViewItemBackground" ResourceKey="SystemControlTransparentBrush" />
            <StaticResource x:Key="TopNavigationViewItemBackgroundPointerOver" ResourceKey="SystemControlTransparentBrush" />
            <StaticResource x:Key="TopNavigationViewItemBackgroundPressed" ResourceKey="SystemControlTransparentBrush" />
            <StaticResource x:Key="TopNavigationViewItemBackgroundDisabled" ResourceKey="SystemControlTransparentBrush" />
            <StaticResource x:Key="TopNavigationViewItemBackgroundSelected" ResourceKey="SystemControlTransparentBrush" />
            <StaticResource x:Key="TopNavigationViewItemBackgroundSelectedPointerOver" ResourceKey="SystemControlTransparentBrush" />
            <StaticResource x:Key="TopNavigationViewItemBackgroundSelectedPressed" ResourceKey="SystemControlTransparentBrush" />

            <StaticResource x:Key="TopNavigationViewItemSeparatorForeground" ResourceKey="SystemControlTransparentBrush" />
        </ResourceDictionary>

        <ResourceDictionary x:Key="HighContrast">
            <!--#region Material Theming-->

            <!-- NavigationView -->
            <CornerRadius x:Key="MaterialNavigationViewSplitViewCornerRadius">0,14,14,0</CornerRadius>
            <CornerRadius x:Key="MaterialNavigationViewContentGridCornerRadius">14,0,0,14</CornerRadius>

            <!-- NavigationView\Buttons -->
            <x:Double x:Key="MaterialNavigationViewButtonWidth">56</x:Double>
            <CornerRadius x:Key="MaterialNavigationViewButtonCornerRadius">28</CornerRadius>
            <x:Double x:Key="MaterialNavigationViewButtonIconLength">24</x:Double>
            <x:Double x:Key="MaterialNavigationViewButtonIconSymbolFontSize">24</x:Double>
            <Thickness x:Key="MaterialNavigationViewButtonMarginWhenStackedVertically">12,0</Thickness>

            <!-- NavigationViewItem -->
            <x:Double x:Key="MaterialNavigationItemHeight">56</x:Double>
            <CornerRadius x:Key="MaterialNavigationViewItemCornerRadius">28</CornerRadius>
            <CornerRadius x:Key="MaterialNavigationViewItemCornerRadiusLeftOnly">28,0,0,28</CornerRadius>
            <Thickness x:Key="MaterialNavigationItemLeftMargin">12,0</Thickness>
            <x:Double x:Key="MaterialNavigationItemIconLength">24</x:Double>
            <Thickness x:Key="MaterialNavigationItemContentMargin">12,0,0,0</Thickness>
            <Thickness x:Key="MaterialNavigationItemContentMarginWithoutIcon">0</Thickness>
            <!--#endregion-->

            <!--#region Resources Imported from Reference-->

            <Thickness x:Key="NavigationViewAutoSuggestBoxMargin">16,0</Thickness>
            <Thickness x:Key="TopNavigationViewAutoSuggestBoxMargin">4,0</Thickness>
            <x:Double x:Key="PaneToggleButtonHeight">56</x:Double>
            <x:Double x:Key="PaneToggleButtonWidth">80</x:Double>
            <x:Double x:Key="NavigationViewCompactPaneLength">80</x:Double>
            <x:Double x:Key="NavigationViewIconBoxWidth">40</x:Double>
            <x:Double x:Key="NavigationViewTopPaneHeight">48</x:Double>
            <x:Double x:Key="NavigationViewAutoSuggestAreaHeight">40</x:Double>
            <x:Double x:Key="TopNavigationViewPaneCustomContentMinWidth">80</x:Double>
            <x:Double x:Key="TopNavigationViewOverflowButtonWidth">40</x:Double>
            <x:Double x:Key="TopNavigationViewOverflowButtonHeight">40</x:Double>
            <x:Double x:Key="TopNavigationViewSettingsButtonWidth">40</x:Double>
            <x:Double x:Key="TopNavigationViewSettingsButtonHeight">40</x:Double>

            <x:Double x:Key="NavigationViewItemOnLeftMinHeight">56</x:Double>
            <x:Double x:Key="NavigationViewPaneHeaderRowMinHeight">56</x:Double>
            <x:Double x:Key="NavigationViewItemOnLeftIconBoxHeight">24</x:Double>
            <x:Double x:Key="NavigationViewSelectionIndicatorWidth">3</x:Double>
            <x:Double x:Key="NavigationViewSelectionIndicatorHeight">24</x:Double>
            <x:Double x:Key="NavigationViewSelectionIndicatorRadius">2</x:Double>

            <x:Double x:Key="NavigationViewItemSeparatorHeight">1</x:Double>
            <x:Double x:Key="TopNavigationViewItemSeparatorWidth">1</x:Double>

            <Thickness x:Key="NavigationViewToggleBorderThickness">0</Thickness>
            <Thickness x:Key="NavigationViewItemBorderThickness">1</Thickness>
            <Thickness x:Key="NavigationViewItemOnLeftIconBoxMargin">3</Thickness>
            <Thickness x:Key="NavigationViewItemButtonMargin">12,0</Thickness>
            <Thickness x:Key="NavigationViewItemInnerHeaderMargin">16,0</Thickness>
            <Thickness x:Key="TopNavigationViewItemInnerHeaderMargin">12,0</Thickness>
            <Thickness x:Key="NavigationViewMinimalHeaderMargin">-24,44,0,0</Thickness>
            <Thickness x:Key="NavigationViewButtonHolderGridMargin">0</Thickness>
            <Thickness x:Key="NavigationViewPaneContentGridMargin">-1,3</Thickness>
            <Thickness x:Key="NavigationViewContentGridBorderThickness">1,1,0,0</Thickness>
            <Thickness x:Key="NavigationViewMinimalContentGridBorderThickness">0,1,0,0</Thickness>
            <Thickness x:Key="TopNavigationViewContentGridBorderThickness">0,1,0,0</Thickness>
            <Thickness x:Key="TopNavigationViewTopNavGridMargin">4,0</Thickness>
            <Thickness x:Key="NavigationViewBorderThickness">1</Thickness>
            <Thickness x:Key="NavigationViewHeaderMargin">56,44,0,0</Thickness>
            <Thickness x:Key="NavigationViewContentPresenterMargin">0</Thickness>
            <Thickness x:Key="NavigationViewContentMargin">0</Thickness>
            <Thickness x:Key="NavigationViewMinimalContentMargin">0</Thickness>
            <Thickness x:Key="TopNavigationViewContentMargin">0</Thickness>
            <Thickness x:Key="NavigationViewPaneTitlePresenterMargin">8,4,0,0</Thickness>
            <Thickness x:Key="NavigationViewItemMargin">0</Thickness>
            <Thickness x:Key="TopNavigationViewItemMargin">0</Thickness>
            <Thickness x:Key="NavigationViewItemSeparatorMargin">0,3,0,4</Thickness>
            <Thickness x:Key="NavigationViewCompactItemSeparatorMargin">0,3,0,4</Thickness>
            <Thickness x:Key="TopNavigationViewItemSeparatorMargin">3,0,4,0</Thickness>
            <Thickness x:Key="TopNavigationViewOverflowButtonMargin">0</Thickness>
            <Thickness x:Key="NavigationViewItemContentPresenterMargin">4,-1,8,-1</Thickness>
            <Thickness x:Key="NavigationViewCompactItemContentPresenterMargin">0,0,0,0</Thickness>
            <Thickness x:Key="TopNavigationViewItemContentPresenterMargin">8,-1,12,-1</Thickness>
            <Thickness x:Key="TopNavigationViewItemContentOnlyContentPresenterMargin">12,0</Thickness>
            <Thickness x:Key="NavigationViewItemExpandChevronMargin">0,0,-14,0</Thickness>
            <Thickness x:Key="TopNavigationViewItemExpandChevronMargin">-16,0,0,0</Thickness>
            <Thickness x:Key="TopNavigationViewItemIconOnlyExpandChevronMargin">0,0,0,0</Thickness>
            <Thickness x:Key="TopNavigationViewItemContentOnlyExpandChevronMargin">-12,0,0,0</Thickness>
            <Thickness x:Key="TopNavigationViewItemOnOverflowContentPresenterMargin">12,0,20,0</Thickness>
            <Thickness x:Key="TopNavigationViewItemOnOverflowNoIconContentPresenterMargin">16,0,20,0</Thickness>
            <Thickness x:Key="TopNavigationViewItemOnOverflowExpandChevronMargin">-4,0,-8,0</Thickness>
            <Thickness x:Key="TopNavigationViewItemOnOverflowExpandChevronPadding">12,0,12,0</Thickness>

            <CornerRadius x:Key="NavigationViewContentGridCornerRadius">8,0,0,0</CornerRadius>
            <CornerRadius x:Key="TopNavigationViewContentGridCornerRadius">0</CornerRadius>
            <CornerRadius x:Key="NavigationViewMinimalContentGridCornerRadius">0</CornerRadius>

            <!-- The two resources below must be defined at the app level in order to take effect. -->
            <Thickness x:Key="TopNavigationViewOverflowMenuPadding">0,8</Thickness>
            <Thickness x:Key="NavigationViewItemChildrenMenuFlyoutPadding">0,8</Thickness>

            <!--
                The resource below must be defined at the app level in order to affect the expand/collapse chevron font size
                used in the Top NavigationView's Overflow menu.
            -->
            <x:Double x:Key="NavigationViewItemExpandedGlyphFontSize">8</x:Double>
            <x:String x:Key="NavigationViewItemExpandedGlyph">&#xE70D;</x:String>
            <!--#endregion-->

            <x:Double x:Key="SplitViewOpenPaneThemeLength">320</x:Double>
            <x:Double x:Key="SplitViewCompactPaneThemeLength">48</x:Double>
            <Thickness x:Key="SplitViewLeftBorderThemeThickness">0,0,1,0</Thickness>
            <Thickness x:Key="SplitViewRightBorderThemeThickness">1,0,0,0</Thickness>
            <StaticResource x:Key="NavigationViewSplitViewLightDismissOverlayBackground" ResourceKey="SystemControlPageBackgroundMediumAltMediumBrush" />
            <x:String x:Key="SplitViewPaneAnimationOpenDuration">00:00:00.2</x:String>
            <x:String x:Key="SplitViewPaneAnimationOpenPreDuration">00:00:00.19999</x:String>
            <x:String x:Key="SplitViewPaneAnimationCloseDuration">00:00:00.1</x:String>
            <CornerRadius x:Key="SplitViewPaneRootCornerRadius">0</CornerRadius>

            <!-- Brushes -->
            <StaticResource x:Key="NavigationViewBackground" ResourceKey="SurfaceBrush" />
            <StaticResource x:Key="NavigationViewDefaultPaneBackground" ResourceKey="SystemControlPageBackgroundChromeLowBrush" />
            <StaticResource x:Key="NavigationViewPaneBackground" ResourceKey="SurfaceBrush" />
            <StaticResource x:Key="NavigationViewTopPaneBackground" ResourceKey="SystemControlTransparentBrush" />

            <StaticResource x:Key="NavigationViewDefaultPaneBorderBrush" ResourceKey="SurfaceBrush" />

            <StaticResource x:Key="NavigationViewButtonForeground" ResourceKey="OnSurfaceBrush" />
            <StaticResource x:Key="NavigationViewButtonForegroundPointerOver" ResourceKey="OnSurfaceBrush" />
            <StaticResource x:Key="NavigationViewButtonForegroundPressed" ResourceKey="OnSurfaceBrush" />
            <StaticResource x:Key="NavigationViewButtonForegroundDisabled" ResourceKey="OnSurfaceDisabledLowBrush" />

            <StaticResource x:Key="NavigationViewButtonBackground" ResourceKey="SystemControlTransparentBrush" />
            <StaticResource x:Key="NavigationViewButtonBackgroundPointerOver" ResourceKey="PrimaryHoverBrush" />
            <StaticResource x:Key="NavigationViewButtonBackgroundPressed" ResourceKey="PrimaryPressedBrush" />
            <StaticResource x:Key="NavigationViewButtonBackgroundDisabled" ResourceKey="SystemControlTransparentBrush" />

            <StaticResource x:Key="NavigationViewButtonRippleFeedback" ResourceKey="PrimaryPressedBrush" />

            <StaticResource x:Key="NavigationViewItemBackground" ResourceKey="SystemControlTransparentBrush" />
            <StaticResource x:Key="NavigationViewItemBackgroundPointerOver" ResourceKey="PrimaryHoverBrush" />
            <StaticResource x:Key="NavigationViewItemBackgroundPressed" ResourceKey="PrimaryPressedBrush" />
            <StaticResource x:Key="NavigationViewItemBackgroundDisabled" ResourceKey="OnSurfaceDisabledLowBrush" />
            <StaticResource x:Key="NavigationViewItemBackgroundSelected" ResourceKey="PrimarySelectedBrush" />
            <StaticResource x:Key="NavigationViewItemBackgroundSelectedPointerOver" ResourceKey="SystemControlTransparentBrush" />
            <StaticResource x:Key="NavigationViewItemBackgroundSelectedPressed" ResourceKey="SystemControlTransparentBrush" />
            <StaticResource x:Key="NavigationViewItemBackgroundSelectedDisabled" ResourceKey="SystemControlTransparentBrush" />

            <StaticResource x:Key="NavigationViewItemForeground" ResourceKey="OnSurfaceBrush" />
            <StaticResource x:Key="NavigationViewItemForegroundPointerOver" ResourceKey="SystemControlTransparentBrush" />
            <StaticResource x:Key="NavigationViewItemForegroundPressed" ResourceKey="SystemControlTransparentBrush" />
            <StaticResource x:Key="NavigationViewItemForegroundDisabled" ResourceKey="SystemControlTransparentBrush" />
            <StaticResource x:Key="NavigationViewItemForegroundSelected" ResourceKey="SystemControlTransparentBrush" />
            <StaticResource x:Key="NavigationViewItemForegroundSelectedPointerOver" ResourceKey="SystemControlTransparentBrush" />
            <StaticResource x:Key="NavigationViewItemForegroundSelectedPressed" ResourceKey="SystemControlTransparentBrush" />
            <StaticResource x:Key="NavigationViewItemForegroundSelectedDisabled" ResourceKey="SystemControlTransparentBrush" />

            <StaticResource x:Key="NavigationViewItemBorderBrush" ResourceKey="SystemControlTransparentBrush" />
            <StaticResource x:Key="NavigationViewItemBorderBrushPointerOver" ResourceKey="SystemControlTransparentBrush" />
            <StaticResource x:Key="NavigationViewItemBorderBrushPressed" ResourceKey="SystemControlTransparentBrush" />
            <StaticResource x:Key="NavigationViewItemBorderBrushDisabled" ResourceKey="SystemControlTransparentBrush" />
            <StaticResource x:Key="NavigationViewItemBorderBrushSelected" ResourceKey="SystemControlTransparentBrush" />
            <StaticResource x:Key="NavigationViewItemBorderBrushSelectedPointerOver" ResourceKey="SystemControlTransparentBrush" />
            <StaticResource x:Key="NavigationViewItemBorderBrushSelectedPressed" ResourceKey="SystemControlTransparentBrush" />
            <StaticResource x:Key="NavigationViewItemBorderBrushSelectedDisabled" ResourceKey="SystemControlTransparentBrush" />

            <StaticResource x:Key="NavigationViewItemSeparatorForeground" ResourceKey="OnSurfacePressedBrush" />
            <StaticResource x:Key="NavigationViewItemHeaderForeground" ResourceKey="SystemControlTransparentBrush" />

            <StaticResource x:Key="NavigationViewSelectionIndicatorForeground" ResourceKey="SystemControlTransparentBrush" />

            <StaticResource x:Key="NavigationViewItemRippleFeedback" ResourceKey="PrimaryPressedBrush" />

            <StaticResource x:Key="TopNavigationViewItemForeground" ResourceKey="SystemControlTransparentBrush" />
            <StaticResource x:Key="TopNavigationViewItemForegroundPointerOver" ResourceKey="SystemControlTransparentBrush" />
            <StaticResource x:Key="TopNavigationViewItemForegroundPressed" ResourceKey="SystemControlTransparentBrush" />
            <StaticResource x:Key="TopNavigationViewItemForegroundDisabled" ResourceKey="SystemControlTransparentBrush" />
            <StaticResource x:Key="TopNavigationViewItemForegroundSelected" ResourceKey="SystemControlTransparentBrush" />
            <StaticResource x:Key="TopNavigationViewItemForegroundSelectedPointerOver" ResourceKey="SystemControlTransparentBrush" />
            <StaticResource x:Key="TopNavigationViewItemForegroundSelectedPressed" ResourceKey="SystemControlTransparentBrush" />

            <StaticResource x:Key="TopNavigationViewItemBackground" ResourceKey="SystemControlTransparentBrush" />
            <StaticResource x:Key="TopNavigationViewItemBackgroundPointerOver" ResourceKey="SystemControlTransparentBrush" />
            <StaticResource x:Key="TopNavigationViewItemBackgroundPressed" ResourceKey="SystemControlTransparentBrush" />
            <StaticResource x:Key="TopNavigationViewItemBackgroundDisabled" ResourceKey="SystemControlTransparentBrush" />
            <StaticResource x:Key="TopNavigationViewItemBackgroundSelected" ResourceKey="SystemControlTransparentBrush" />
            <StaticResource x:Key="TopNavigationViewItemBackgroundSelectedPointerOver" ResourceKey="SystemControlTransparentBrush" />
            <StaticResource x:Key="TopNavigationViewItemBackgroundSelectedPressed" ResourceKey="SystemControlTransparentBrush" />

            <StaticResource x:Key="TopNavigationViewItemSeparatorForeground" ResourceKey="SystemControlTransparentBrush" />
        </ResourceDictionary>

        <ResourceDictionary x:Key="Light">
            <!--#region Material Theming-->

            <!-- NavigationView -->
            <CornerRadius x:Key="MaterialNavigationViewSplitViewCornerRadius">0,14,14,0</CornerRadius>
            <CornerRadius x:Key="MaterialNavigationViewContentGridCornerRadius">14,0,0,14</CornerRadius>

            <!-- NavigationView\Buttons -->
            <x:Double x:Key="MaterialNavigationViewButtonWidth">56</x:Double>
            <CornerRadius x:Key="MaterialNavigationViewButtonCornerRadius">28</CornerRadius>
            <x:Double x:Key="MaterialNavigationViewButtonIconLength">24</x:Double>
            <x:Double x:Key="MaterialNavigationViewButtonIconSymbolFontSize">24</x:Double>
            <Thickness x:Key="MaterialNavigationViewButtonMarginWhenStackedVertically">12,0</Thickness>

            <!-- NavigationViewItem -->
            <x:Double x:Key="MaterialNavigationItemHeight">56</x:Double>
            <CornerRadius x:Key="MaterialNavigationViewItemCornerRadius">28</CornerRadius>
            <CornerRadius x:Key="MaterialNavigationViewItemCornerRadiusLeftOnly">28,0,0,28</CornerRadius>
            <Thickness x:Key="MaterialNavigationItemLeftMargin">12,0</Thickness>
            <x:Double x:Key="MaterialNavigationItemIconLength">24</x:Double>
            <Thickness x:Key="MaterialNavigationItemContentMargin">12,0,0,0</Thickness>
            <Thickness x:Key="MaterialNavigationItemContentMarginWithoutIcon">0</Thickness>
            <!--#endregion-->

            <!--#region Resources Imported from Reference-->

            <Thickness x:Key="NavigationViewAutoSuggestBoxMargin">16,0</Thickness>
            <Thickness x:Key="TopNavigationViewAutoSuggestBoxMargin">4,0</Thickness>
            <x:Double x:Key="PaneToggleButtonHeight">56</x:Double>
            <x:Double x:Key="PaneToggleButtonWidth">80</x:Double>
            <x:Double x:Key="NavigationViewCompactPaneLength">80</x:Double>
            <x:Double x:Key="NavigationViewIconBoxWidth">40</x:Double>
            <x:Double x:Key="NavigationViewTopPaneHeight">48</x:Double>
            <x:Double x:Key="NavigationViewAutoSuggestAreaHeight">40</x:Double>
            <x:Double x:Key="TopNavigationViewPaneCustomContentMinWidth">80</x:Double>
            <x:Double x:Key="TopNavigationViewOverflowButtonWidth">40</x:Double>
            <x:Double x:Key="TopNavigationViewOverflowButtonHeight">40</x:Double>
            <x:Double x:Key="TopNavigationViewSettingsButtonWidth">40</x:Double>
            <x:Double x:Key="TopNavigationViewSettingsButtonHeight">40</x:Double>

            <x:Double x:Key="NavigationViewItemOnLeftMinHeight">56</x:Double>
            <x:Double x:Key="NavigationViewPaneHeaderRowMinHeight">56</x:Double>
            <x:Double x:Key="NavigationViewItemOnLeftIconBoxHeight">24</x:Double>
            <x:Double x:Key="NavigationViewSelectionIndicatorWidth">3</x:Double>
            <x:Double x:Key="NavigationViewSelectionIndicatorHeight">24</x:Double>
            <x:Double x:Key="NavigationViewSelectionIndicatorRadius">2</x:Double>

            <x:Double x:Key="NavigationViewItemSeparatorHeight">1</x:Double>
            <x:Double x:Key="TopNavigationViewItemSeparatorWidth">1</x:Double>

            <Thickness x:Key="NavigationViewToggleBorderThickness">0</Thickness>
            <Thickness x:Key="NavigationViewItemBorderThickness">1</Thickness>
            <Thickness x:Key="NavigationViewItemOnLeftIconBoxMargin">3</Thickness>
            <Thickness x:Key="NavigationViewItemButtonMargin">12,0</Thickness>
            <Thickness x:Key="NavigationViewItemInnerHeaderMargin">16,0</Thickness>
            <Thickness x:Key="TopNavigationViewItemInnerHeaderMargin">12,0</Thickness>
            <Thickness x:Key="NavigationViewMinimalHeaderMargin">-24,44,0,0</Thickness>
            <Thickness x:Key="NavigationViewButtonHolderGridMargin">0</Thickness>
            <Thickness x:Key="NavigationViewPaneContentGridMargin">-1,3</Thickness>
            <Thickness x:Key="NavigationViewContentGridBorderThickness">1,1,0,0</Thickness>
            <Thickness x:Key="NavigationViewMinimalContentGridBorderThickness">0,1,0,0</Thickness>
            <Thickness x:Key="TopNavigationViewContentGridBorderThickness">0,1,0,0</Thickness>
            <Thickness x:Key="TopNavigationViewTopNavGridMargin">4,0</Thickness>
            <Thickness x:Key="NavigationViewBorderThickness">1</Thickness>
            <Thickness x:Key="NavigationViewHeaderMargin">56,44,0,0</Thickness>
            <Thickness x:Key="NavigationViewContentPresenterMargin">0</Thickness>
            <Thickness x:Key="NavigationViewContentMargin">0</Thickness>
            <Thickness x:Key="NavigationViewMinimalContentMargin">0</Thickness>
            <Thickness x:Key="TopNavigationViewContentMargin">0</Thickness>
            <Thickness x:Key="NavigationViewPaneTitlePresenterMargin">8,4,0,0</Thickness>
            <Thickness x:Key="NavigationViewItemMargin">0</Thickness>
            <Thickness x:Key="TopNavigationViewItemMargin">0</Thickness>
            <Thickness x:Key="NavigationViewItemSeparatorMargin">0,3,0,4</Thickness>
            <Thickness x:Key="NavigationViewCompactItemSeparatorMargin">0,3,0,4</Thickness>
            <Thickness x:Key="TopNavigationViewItemSeparatorMargin">3,0,4,0</Thickness>
            <Thickness x:Key="TopNavigationViewOverflowButtonMargin">0</Thickness>
            <Thickness x:Key="NavigationViewItemContentPresenterMargin">4,-1,8,-1</Thickness>
            <Thickness x:Key="NavigationViewCompactItemContentPresenterMargin">0,0,0,0</Thickness>
            <Thickness x:Key="TopNavigationViewItemContentPresenterMargin">8,-1,12,-1</Thickness>
            <Thickness x:Key="TopNavigationViewItemContentOnlyContentPresenterMargin">12,0</Thickness>
            <Thickness x:Key="NavigationViewItemExpandChevronMargin">0,0,-14,0</Thickness>
            <Thickness x:Key="TopNavigationViewItemExpandChevronMargin">-16,0,0,0</Thickness>
            <Thickness x:Key="TopNavigationViewItemIconOnlyExpandChevronMargin">0,0,0,0</Thickness>
            <Thickness x:Key="TopNavigationViewItemContentOnlyExpandChevronMargin">-12,0,0,0</Thickness>
            <Thickness x:Key="TopNavigationViewItemOnOverflowContentPresenterMargin">12,0,20,0</Thickness>
            <Thickness x:Key="TopNavigationViewItemOnOverflowNoIconContentPresenterMargin">16,0,20,0</Thickness>
            <Thickness x:Key="TopNavigationViewItemOnOverflowExpandChevronMargin">-4,0,-8,0</Thickness>
            <Thickness x:Key="TopNavigationViewItemOnOverflowExpandChevronPadding">12,0,12,0</Thickness>

            <CornerRadius x:Key="NavigationViewContentGridCornerRadius">8,0,0,0</CornerRadius>
            <CornerRadius x:Key="TopNavigationViewContentGridCornerRadius">0</CornerRadius>
            <CornerRadius x:Key="NavigationViewMinimalContentGridCornerRadius">0</CornerRadius>

            <!-- The two resources below must be defined at the app level in order to take effect. -->
            <Thickness x:Key="TopNavigationViewOverflowMenuPadding">0,8</Thickness>
            <Thickness x:Key="NavigationViewItemChildrenMenuFlyoutPadding">0,8</Thickness>

            <!--
                The resource below must be defined at the app level in order to affect the expand/collapse chevron font size
                used in the Top NavigationView's Overflow menu.
            -->
            <x:Double x:Key="NavigationViewItemExpandedGlyphFontSize">8</x:Double>
            <x:String x:Key="NavigationViewItemExpandedGlyph">&#xE70D;</x:String>
            <!--#endregion-->

            <x:Double x:Key="SplitViewOpenPaneThemeLength">320</x:Double>
            <x:Double x:Key="SplitViewCompactPaneThemeLength">48</x:Double>
            <Thickness x:Key="SplitViewLeftBorderThemeThickness">0,0,1,0</Thickness>
            <Thickness x:Key="SplitViewRightBorderThemeThickness">1,0,0,0</Thickness>
            <StaticResource x:Key="NavigationViewSplitViewLightDismissOverlayBackground" ResourceKey="SystemControlPageBackgroundMediumAltMediumBrush" />
            <x:String x:Key="SplitViewPaneAnimationOpenDuration">00:00:00.2</x:String>
            <x:String x:Key="SplitViewPaneAnimationOpenPreDuration">00:00:00.19999</x:String>
            <x:String x:Key="SplitViewPaneAnimationCloseDuration">00:00:00.1</x:String>
            <CornerRadius x:Key="SplitViewPaneRootCornerRadius">0</CornerRadius>

            <!-- Brushes -->
            <StaticResource x:Key="NavigationViewBackground" ResourceKey="SurfaceBrush" />
            <StaticResource x:Key="NavigationViewDefaultPaneBackground" ResourceKey="SystemControlPageBackgroundChromeLowBrush" />
            <StaticResource x:Key="NavigationViewPaneBackground" ResourceKey="SurfaceBrush" />
            <StaticResource x:Key="NavigationViewTopPaneBackground" ResourceKey="SystemControlTransparentBrush" />

            <StaticResource x:Key="NavigationViewDefaultPaneBorderBrush" ResourceKey="SurfaceBrush" />

            <StaticResource x:Key="NavigationViewButtonForeground" ResourceKey="OnSurfaceBrush" />
            <StaticResource x:Key="NavigationViewButtonForegroundPointerOver" ResourceKey="OnSurfaceBrush" />
            <StaticResource x:Key="NavigationViewButtonForegroundPressed" ResourceKey="OnSurfaceBrush" />
            <StaticResource x:Key="NavigationViewButtonForegroundDisabled" ResourceKey="OnSurfaceDisabledLowBrush" />

            <StaticResource x:Key="NavigationViewButtonBackground" ResourceKey="SystemControlTransparentBrush" />
            <StaticResource x:Key="NavigationViewButtonBackgroundPointerOver" ResourceKey="PrimaryHoverBrush" />
            <StaticResource x:Key="NavigationViewButtonBackgroundPressed" ResourceKey="PrimaryPressedBrush" />
            <StaticResource x:Key="NavigationViewButtonBackgroundDisabled" ResourceKey="SystemControlTransparentBrush" />

            <StaticResource x:Key="NavigationViewButtonRippleFeedback" ResourceKey="PrimaryPressedBrush" />

            <StaticResource x:Key="NavigationViewItemBackground" ResourceKey="SystemControlTransparentBrush" />
            <StaticResource x:Key="NavigationViewItemBackgroundPointerOver" ResourceKey="PrimaryHoverBrush" />
            <StaticResource x:Key="NavigationViewItemBackgroundPressed" ResourceKey="PrimaryPressedBrush" />
            <StaticResource x:Key="NavigationViewItemBackgroundDisabled" ResourceKey="OnSurfaceDisabledLowBrush" />
            <StaticResource x:Key="NavigationViewItemBackgroundSelected" ResourceKey="PrimarySelectedBrush" />
            <StaticResource x:Key="NavigationViewItemBackgroundSelectedPointerOver" ResourceKey="SystemControlTransparentBrush" />
            <StaticResource x:Key="NavigationViewItemBackgroundSelectedPressed" ResourceKey="SystemControlTransparentBrush" />
            <StaticResource x:Key="NavigationViewItemBackgroundSelectedDisabled" ResourceKey="SystemControlTransparentBrush" />

            <StaticResource x:Key="NavigationViewItemForeground" ResourceKey="OnSurfaceBrush" />
            <StaticResource x:Key="NavigationViewItemForegroundPointerOver" ResourceKey="SystemControlTransparentBrush" />
            <StaticResource x:Key="NavigationViewItemForegroundPressed" ResourceKey="SystemControlTransparentBrush" />
            <StaticResource x:Key="NavigationViewItemForegroundDisabled" ResourceKey="SystemControlTransparentBrush" />
            <StaticResource x:Key="NavigationViewItemForegroundSelected" ResourceKey="SystemControlTransparentBrush" />
            <StaticResource x:Key="NavigationViewItemForegroundSelectedPointerOver" ResourceKey="SystemControlTransparentBrush" />
            <StaticResource x:Key="NavigationViewItemForegroundSelectedPressed" ResourceKey="SystemControlTransparentBrush" />
            <StaticResource x:Key="NavigationViewItemForegroundSelectedDisabled" ResourceKey="SystemControlTransparentBrush" />

            <StaticResource x:Key="NavigationViewItemBorderBrush" ResourceKey="SystemControlTransparentBrush" />
            <StaticResource x:Key="NavigationViewItemBorderBrushPointerOver" ResourceKey="SystemControlTransparentBrush" />
            <StaticResource x:Key="NavigationViewItemBorderBrushPressed" ResourceKey="SystemControlTransparentBrush" />
            <StaticResource x:Key="NavigationViewItemBorderBrushDisabled" ResourceKey="SystemControlTransparentBrush" />
            <StaticResource x:Key="NavigationViewItemBorderBrushSelected" ResourceKey="SystemControlTransparentBrush" />
            <StaticResource x:Key="NavigationViewItemBorderBrushSelectedPointerOver" ResourceKey="SystemControlTransparentBrush" />
            <StaticResource x:Key="NavigationViewItemBorderBrushSelectedPressed" ResourceKey="SystemControlTransparentBrush" />
            <StaticResource x:Key="NavigationViewItemBorderBrushSelectedDisabled" ResourceKey="SystemControlTransparentBrush" />

            <StaticResource x:Key="NavigationViewItemSeparatorForeground" ResourceKey="OnSurfacePressedBrush" />
            <StaticResource x:Key="NavigationViewItemHeaderForeground" ResourceKey="SystemControlTransparentBrush" />

            <StaticResource x:Key="NavigationViewSelectionIndicatorForeground" ResourceKey="SystemControlTransparentBrush" />

            <StaticResource x:Key="NavigationViewItemRippleFeedback" ResourceKey="PrimaryPressedBrush" />

            <StaticResource x:Key="TopNavigationViewItemForeground" ResourceKey="SystemControlTransparentBrush" />
            <StaticResource x:Key="TopNavigationViewItemForegroundPointerOver" ResourceKey="SystemControlTransparentBrush" />
            <StaticResource x:Key="TopNavigationViewItemForegroundPressed" ResourceKey="SystemControlTransparentBrush" />
            <StaticResource x:Key="TopNavigationViewItemForegroundDisabled" ResourceKey="SystemControlTransparentBrush" />
            <StaticResource x:Key="TopNavigationViewItemForegroundSelected" ResourceKey="SystemControlTransparentBrush" />
            <StaticResource x:Key="TopNavigationViewItemForegroundSelectedPointerOver" ResourceKey="SystemControlTransparentBrush" />
            <StaticResource x:Key="TopNavigationViewItemForegroundSelectedPressed" ResourceKey="SystemControlTransparentBrush" />

            <StaticResource x:Key="TopNavigationViewItemBackground" ResourceKey="SystemControlTransparentBrush" />
            <StaticResource x:Key="TopNavigationViewItemBackgroundPointerOver" ResourceKey="SystemControlTransparentBrush" />
            <StaticResource x:Key="TopNavigationViewItemBackgroundPressed" ResourceKey="SystemControlTransparentBrush" />
            <StaticResource x:Key="TopNavigationViewItemBackgroundDisabled" ResourceKey="SystemControlTransparentBrush" />
            <StaticResource x:Key="TopNavigationViewItemBackgroundSelected" ResourceKey="SystemControlTransparentBrush" />
            <StaticResource x:Key="TopNavigationViewItemBackgroundSelectedPointerOver" ResourceKey="SystemControlTransparentBrush" />
            <StaticResource x:Key="TopNavigationViewItemBackgroundSelectedPressed" ResourceKey="SystemControlTransparentBrush" />

            <StaticResource x:Key="TopNavigationViewItemSeparatorForeground" ResourceKey="SystemControlTransparentBrush" />
        </ResourceDictionary>
    </ResourceDictionary.ThemeDictionaries>

    <Style x:Key="ResetDefaultSplitViewStyle"
           TargetType="SplitView">
        <Setter Property="BorderBrush" Value="{ThemeResource NavigationViewDefaultPaneBorderBrush}" />
        <Setter Property="BorderThickness" Value="{ThemeResource SplitViewLeftBorderThemeThickness}" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="OpenPaneLength" Value="{ThemeResource SplitViewOpenPaneThemeLength}" />
        <Setter Property="CompactPaneLength" Value="{ThemeResource SplitViewCompactPaneThemeLength}" />
        <Setter Property="PaneBackground" Value="{ThemeResource NavigationViewDefaultPaneBackground}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="SplitView">
                    <Grid Background="{TemplateBinding Background}">

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="DisplayModeStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition From="Closed"
                                                      To="OpenOverlayLeft">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot"
                                                                           Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0"
                                                                        Value="Visible" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HCPaneBorder"
                                                                           Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0"
                                                                        Value="Visible" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PaneTransform"
                                                                           Storyboard.TargetProperty="TranslateX">
                                                <DiscreteDoubleKeyFrame KeyTime="0:0:0"
                                                                        Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.NegativeOpenPaneLength}" />
                                                <SplineDoubleKeyFrame KeyTime="0:0:0.35"
                                                                      KeySpline="0.1,0.9 0.2,1.0"
                                                                      Value="0" />
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PaneClipRectangleTransform"
                                                                           Storyboard.TargetProperty="TranslateX">
                                                <DiscreteDoubleKeyFrame KeyTime="0:0:0"
                                                                        Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.OpenPaneLength}" />
                                                <SplineDoubleKeyFrame KeyTime="0:0:0.35"
                                                                      KeySpline="0.1,0.9 0.2,1.0"
                                                                      Value="0" />
                                            </DoubleAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="LightDismissLayer"
                                                                           Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0"
                                                                        Value="Visible" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="LightDismissLayer"
                                                                           Storyboard.TargetProperty="Opacity">
                                                <DiscreteDoubleKeyFrame KeyTime="0:0:0"
                                                                        Value="0.0" />
                                                <SplineDoubleKeyFrame KeyTime="0:0:0.35"
                                                                      KeySpline="0.1,0.9 0.2,1.0"
                                                                      Value="1.0" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualTransition>
                                    <VisualTransition From="Closed"
                                                      To="OpenOverlayRight">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot"
                                                                           Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0"
                                                                        Value="Visible" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot"
                                                                           Storyboard.TargetProperty="HorizontalAlignment">
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0"
                                                                        Value="Right" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HCPaneBorder"
                                                                           Storyboard.TargetProperty="HorizontalAlignment">
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0"
                                                                        Value="Left" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HCPaneBorder"
                                                                           Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0"
                                                                        Value="Visible" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PaneTransform"
                                                                           Storyboard.TargetProperty="TranslateX">
                                                <DiscreteDoubleKeyFrame KeyTime="0:0:0"
                                                                        Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.OpenPaneLength}" />
                                                <SplineDoubleKeyFrame KeyTime="0:0:0.35"
                                                                      KeySpline="0.1,0.9 0.2,1.0"
                                                                      Value="0" />
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PaneClipRectangleTransform"
                                                                           Storyboard.TargetProperty="TranslateX">
                                                <DiscreteDoubleKeyFrame KeyTime="0:0:0"
                                                                        Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.NegativeOpenPaneLength}" />
                                                <SplineDoubleKeyFrame KeyTime="0:0:0.35"
                                                                      KeySpline="0.1,0.9 0.2,1.0"
                                                                      Value="0" />
                                            </DoubleAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="LightDismissLayer"
                                                                           Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0"
                                                                        Value="Visible" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="LightDismissLayer"
                                                                           Storyboard.TargetProperty="Opacity">
                                                <DiscreteDoubleKeyFrame KeyTime="0:0:0"
                                                                        Value="0.0" />
                                                <SplineDoubleKeyFrame KeyTime="0:0:0.35"
                                                                      KeySpline="0.1,0.9 0.2,1.0"
                                                                      Value="1.0" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualTransition>
                                    <VisualTransition From="ClosedCompactLeft"
                                                      To="OpenCompactOverlayLeft">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ColumnDefinition1"
                                                                           Storyboard.TargetProperty="Width">
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0"
                                                                        Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.CompactPaneGridLength, FallbackValue=0}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentRoot"
                                                                           Storyboard.TargetProperty="(Grid.Column)">
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0"
                                                                        Value="1" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentRoot"
                                                                           Storyboard.TargetProperty="(Grid.ColumnSpan)">
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0"
                                                                        Value="1" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot"
                                                                           Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0"
                                                                        Value="Visible" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HCPaneBorder"
                                                                           Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0"
                                                                        Value="Visible" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PaneClipRectangleTransform"
                                                                           Storyboard.TargetProperty="TranslateX">
                                                <DiscreteDoubleKeyFrame KeyTime="0:0:0"
                                                                        Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.NegativeOpenPaneLengthMinusCompactLength}" />
                                                <SplineDoubleKeyFrame KeyTime="0:0:0.35"
                                                                      KeySpline="0.1,0.9 0.2,1.0"
                                                                      Value="0" />
                                            </DoubleAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="LightDismissLayer"
                                                                           Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0"
                                                                        Value="Visible" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="LightDismissLayer"
                                                                           Storyboard.TargetProperty="Opacity">
                                                <DiscreteDoubleKeyFrame KeyTime="0:0:0"
                                                                        Value="0.0" />
                                                <SplineDoubleKeyFrame KeyTime="0:0:0.35"
                                                                      KeySpline="0.1,0.9 0.2,1.0"
                                                                      Value="1.0" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualTransition>
                                    <VisualTransition From="ClosedCompactRight"
                                                      To="OpenCompactOverlayRight">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ColumnDefinition1"
                                                                           Storyboard.TargetProperty="Width">
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0"
                                                                        Value="*" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ColumnDefinition2"
                                                                           Storyboard.TargetProperty="Width">
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0"
                                                                        Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.CompactPaneGridLength, FallbackValue=0}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentRoot"
                                                                           Storyboard.TargetProperty="(Grid.ColumnSpan)">
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0"
                                                                        Value="1" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot"
                                                                           Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0"
                                                                        Value="Visible" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot"
                                                                           Storyboard.TargetProperty="HorizontalAlignment">
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0"
                                                                        Value="Right" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HCPaneBorder"
                                                                           Storyboard.TargetProperty="HorizontalAlignment">
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0"
                                                                        Value="Left" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HCPaneBorder"
                                                                           Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0"
                                                                        Value="Visible" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PaneClipRectangleTransform"
                                                                           Storyboard.TargetProperty="TranslateX">
                                                <DiscreteDoubleKeyFrame KeyTime="0:0:0"
                                                                        Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.OpenPaneLengthMinusCompactLength}" />
                                                <SplineDoubleKeyFrame KeyTime="0:0:0.35"
                                                                      KeySpline="0.1,0.9 0.2,1.0"
                                                                      Value="0" />
                                            </DoubleAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="LightDismissLayer"
                                                                           Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0"
                                                                        Value="Visible" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="LightDismissLayer"
                                                                           Storyboard.TargetProperty="Opacity">
                                                <DiscreteDoubleKeyFrame KeyTime="0:0:0"
                                                                        Value="0.0" />
                                                <SplineDoubleKeyFrame KeyTime="0:0:0.35"
                                                                      KeySpline="0.1,0.9 0.2,1.0"
                                                                      Value="1.0" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualTransition>
                                    <VisualTransition From="OpenOverlayLeft"
                                                      To="Closed">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot"
                                                                           Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0"
                                                                        Value="Visible" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HCPaneBorder"
                                                                           Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0"
                                                                        Value="Visible" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PaneTransform"
                                                                           Storyboard.TargetProperty="TranslateX">
                                                <SplineDoubleKeyFrame KeyTime="0:0:0.12"
                                                                      KeySpline="0.1,0.9 0.2,1.0"
                                                                      Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.NegativeOpenPaneLength}" />
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PaneClipRectangleTransform"
                                                                           Storyboard.TargetProperty="TranslateX">
                                                <SplineDoubleKeyFrame KeyTime="0:0:0.12"
                                                                      KeySpline="0.1,0.9 0.2,1.0"
                                                                      Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.OpenPaneLength}" />
                                            </DoubleAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="LightDismissLayer"
                                                                           Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0"
                                                                        Value="Visible" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="LightDismissLayer"
                                                                           Storyboard.TargetProperty="Opacity">
                                                <DiscreteDoubleKeyFrame KeyTime="0:0:0"
                                                                        Value="1.0" />
                                                <SplineDoubleKeyFrame KeyTime="0:0:0.12"
                                                                      KeySpline="0.1,0.9 0.2,1.0"
                                                                      Value="0.0" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualTransition>
                                    <VisualTransition From="OpenOverlayRight"
                                                      To="Closed">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot"
                                                                           Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0"
                                                                        Value="Visible" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot"
                                                                           Storyboard.TargetProperty="HorizontalAlignment">
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0"
                                                                        Value="Right" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HCPaneBorder"
                                                                           Storyboard.TargetProperty="HorizontalAlignment">
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0"
                                                                        Value="Left" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HCPaneBorder"
                                                                           Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0"
                                                                        Value="Visible" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PaneTransform"
                                                                           Storyboard.TargetProperty="TranslateX">
                                                <SplineDoubleKeyFrame KeyTime="0:0:0.12"
                                                                      KeySpline="0.1,0.9 0.2,1.0"
                                                                      Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.OpenPaneLength}" />
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PaneClipRectangleTransform"
                                                                           Storyboard.TargetProperty="TranslateX">
                                                <SplineDoubleKeyFrame KeyTime="0:0:0.12"
                                                                      KeySpline="0.1,0.9 0.2,1.0"
                                                                      Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.NegativeOpenPaneLength}" />
                                            </DoubleAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="LightDismissLayer"
                                                                           Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0"
                                                                        Value="Visible" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="LightDismissLayer"
                                                                           Storyboard.TargetProperty="Opacity">
                                                <DiscreteDoubleKeyFrame KeyTime="0:0:0"
                                                                        Value="1.0" />
                                                <SplineDoubleKeyFrame KeyTime="0:0:0.12"
                                                                      KeySpline="0.1,0.9 0.2,1.0"
                                                                      Value="0.0" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualTransition>
                                    <VisualTransition From="OpenCompactOverlayLeft"
                                                      To="ClosedCompactLeft">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ColumnDefinition1"
                                                                           Storyboard.TargetProperty="Width">
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0"
                                                                        Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.CompactPaneGridLength, FallbackValue=0}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentRoot"
                                                                           Storyboard.TargetProperty="(Grid.Column)">
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0"
                                                                        Value="1" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentRoot"
                                                                           Storyboard.TargetProperty="(Grid.ColumnSpan)">
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0"
                                                                        Value="1" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot"
                                                                           Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0"
                                                                        Value="Visible" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HCPaneBorder"
                                                                           Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0"
                                                                        Value="Visible" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PaneClipRectangleTransform"
                                                                           Storyboard.TargetProperty="TranslateX">
                                                <DiscreteDoubleKeyFrame KeyTime="0:0:0"
                                                                        Value="0" />
                                                <SplineDoubleKeyFrame KeyTime="0:0:0.12"
                                                                      KeySpline="0.1,0.9 0.2,1.0"
                                                                      Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.NegativeOpenPaneLengthMinusCompactLength}" />
                                            </DoubleAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="LightDismissLayer"
                                                                           Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0"
                                                                        Value="Visible" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="LightDismissLayer"
                                                                           Storyboard.TargetProperty="Opacity">
                                                <DiscreteDoubleKeyFrame KeyTime="0:0:0"
                                                                        Value="1.0" />
                                                <SplineDoubleKeyFrame KeyTime="0:0:0.12"
                                                                      KeySpline="0.1,0.9 0.2,1.0"
                                                                      Value="0.0" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualTransition>
                                    <VisualTransition From="OpenCompactOverlayRight"
                                                      To="ClosedCompactRight">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ColumnDefinition1"
                                                                           Storyboard.TargetProperty="Width">
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0"
                                                                        Value="*" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ColumnDefinition2"
                                                                           Storyboard.TargetProperty="Width">
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0"
                                                                        Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.CompactPaneGridLength, FallbackValue=0}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentRoot"
                                                                           Storyboard.TargetProperty="(Grid.ColumnSpan)">
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0"
                                                                        Value="1" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot"
                                                                           Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0"
                                                                        Value="Visible" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot"
                                                                           Storyboard.TargetProperty="HorizontalAlignment">
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0"
                                                                        Value="Right" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HCPaneBorder"
                                                                           Storyboard.TargetProperty="HorizontalAlignment">
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0"
                                                                        Value="Left" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HCPaneBorder"
                                                                           Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0"
                                                                        Value="Visible" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PaneClipRectangleTransform"
                                                                           Storyboard.TargetProperty="TranslateX">
                                                <DiscreteDoubleKeyFrame KeyTime="0:0:0"
                                                                        Value="0" />
                                                <SplineDoubleKeyFrame KeyTime="0:0:0.12"
                                                                      KeySpline="0.1,0.9 0.2,1.0"
                                                                      Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.OpenPaneLengthMinusCompactLength}" />
                                            </DoubleAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="LightDismissLayer"
                                                                           Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0"
                                                                        Value="Visible" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="LightDismissLayer"
                                                                           Storyboard.TargetProperty="Opacity">
                                                <DiscreteDoubleKeyFrame KeyTime="0:0:0"
                                                                        Value="1.0" />
                                                <SplineDoubleKeyFrame KeyTime="0:0:0.12"
                                                                      KeySpline="0.1,0.9 0.2,1.0"
                                                                      Value="0.0" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualTransition>
                                    <VisualTransition From="OpenInlineLeft"
                                                      To="Closed">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot"
                                                                           Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="{ThemeResource SplitViewPaneAnimationCloseDuration}"
                                                                        Value="Collapsed" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HCPaneBorder"
                                                                           Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="{ThemeResource SplitViewPaneAnimationCloseDuration}"
                                                                        Value="Collapsed" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentRoot"
                                                                           Storyboard.TargetProperty="(Grid.ColumnSpan)">
                                                <DiscreteObjectKeyFrame KeyTime="0"
                                                                        Value="2" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentRoot"
                                                                           Storyboard.TargetProperty="(Grid.Column)">
                                                <DiscreteObjectKeyFrame KeyTime="0"
                                                                        Value="0" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot"
                                                                           Storyboard.TargetProperty="(Grid.ColumnSpan)">
                                                <DiscreteObjectKeyFrame KeyTime="{ThemeResource SplitViewPaneAnimationCloseDuration}"
                                                                        Value="2" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PaneClipRectangleTransform"
                                                                           Storyboard.TargetProperty="TranslateX">
                                                <SplineDoubleKeyFrame KeySpline="0.0,0.35 0.15,1.0"
                                                                      KeyTime="{ThemeResource SplitViewPaneAnimationCloseDuration}"
                                                                      Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.NegativeOpenPaneLengthMinusCompactLength}" />
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PaneTransform"
                                                                           Storyboard.TargetProperty="TranslateX">
                                                <SplineDoubleKeyFrame KeySpline="0.0,0.35 0.15,1.0"
                                                                      KeyTime="{ThemeResource SplitViewPaneAnimationCloseDuration}"
                                                                      Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.NegativeOpenPaneLength}" />
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ContentTransform"
                                                                           Storyboard.TargetProperty="TranslateX">
                                                <DiscreteDoubleKeyFrame KeyTime="0"
                                                                        Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.OpenPaneLength}" />
                                                <SplineDoubleKeyFrame KeySpline="0.0,0.35 0.15,1.0"
                                                                      KeyTime="{ThemeResource SplitViewPaneAnimationCloseDuration}"
                                                                      Value="0" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualTransition>
                                    <VisualTransition From="Closed"
                                                      To="OpenInlineLeft">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot"
                                                                           Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0"
                                                                        Value="Visible" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HCPaneBorder"
                                                                           Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0"
                                                                        Value="Visible" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentRoot"
                                                                           Storyboard.TargetProperty="(Grid.ColumnSpan)">
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0"
                                                                        Value="1" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentRoot"
                                                                           Storyboard.TargetProperty="(Grid.Column)">
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0"
                                                                        Value="1" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot"
                                                                           Storyboard.TargetProperty="(Grid.ColumnSpan)">
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0"
                                                                        Value="1" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PaneTransform"
                                                                           Storyboard.TargetProperty="TranslateX">
                                                <DiscreteDoubleKeyFrame KeyTime="0:0:0"
                                                                        Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.NegativeOpenPaneLength}" />
                                                <SplineDoubleKeyFrame KeySpline="0.0,0.35 0.15,1.0"
                                                                      KeyTime="{ThemeResource SplitViewPaneAnimationOpenDuration}"
                                                                      Value="0" />
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames FillBehavior="Stop"
                                                                           Storyboard.TargetName="ContentTransform"
                                                                           Storyboard.TargetProperty="TranslateX">
                                                <LinearDoubleKeyFrame KeyTime="0:0:0"
                                                                      Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.NegativeOpenPaneLength}" />
                                                <SplineDoubleKeyFrame KeySpline="0.0,0.35 0.15,1.0"
                                                                      KeyTime="{ThemeResource SplitViewPaneAnimationOpenPreDuration}"
                                                                      Value="0" />
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PaneClipRectangleTransform"
                                                                           Storyboard.TargetProperty="TranslateX">
                                                <DiscreteDoubleKeyFrame KeyTime="0:0:0"
                                                                        Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.NegativeOpenPaneLength}" />
                                                <SplineDoubleKeyFrame KeySpline="0.0,0.35 0.15,1.0"
                                                                      KeyTime="{ThemeResource SplitViewPaneAnimationOpenDuration}"
                                                                      Value="0" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualTransition>
                                    <VisualTransition From="ClosedCompactLeft"
                                                      To="OpenInlineLeft">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot"
                                                                           Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0"
                                                                        Value="Visible" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HCPaneBorder"
                                                                           Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0"
                                                                        Value="Visible" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentRoot"
                                                                           Storyboard.TargetProperty="(Grid.ColumnSpan)">
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0"
                                                                        Value="1" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentRoot"
                                                                           Storyboard.TargetProperty="(Grid.Column)">
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0"
                                                                        Value="1" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot"
                                                                           Storyboard.TargetProperty="(Grid.ColumnSpan)">
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0"
                                                                        Value="1" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames FillBehavior="Stop"
                                                                           Storyboard.TargetName="ContentTransform"
                                                                           Storyboard.TargetProperty="TranslateX">
                                                <LinearDoubleKeyFrame KeyTime="0:0:0"
                                                                      Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.NegativeOpenPaneLengthMinusCompactLength}" />
                                                <SplineDoubleKeyFrame KeySpline="0.0,0.35 0.15,1.0"
                                                                      KeyTime="{ThemeResource SplitViewPaneAnimationOpenPreDuration}"
                                                                      Value="0" />
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PaneClipRectangleTransform"
                                                                           Storyboard.TargetProperty="TranslateX">
                                                <DiscreteDoubleKeyFrame KeyTime="0:0:0"
                                                                        Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.NegativeOpenPaneLengthMinusCompactLength}" />
                                                <SplineDoubleKeyFrame KeySpline="0.0,0.35 0.15,1.0"
                                                                      KeyTime="{ThemeResource SplitViewPaneAnimationOpenDuration}"
                                                                      Value="0" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualTransition>
                                    <VisualTransition From="OpenInlineLeft"
                                                      To="ClosedCompactLeft">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ColumnDefinition1"
                                                                           Storyboard.TargetProperty="Width">
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0"
                                                                        Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.CompactPaneGridLength, FallbackValue=0}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentRoot"
                                                                           Storyboard.TargetProperty="(Grid.Column)">
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0"
                                                                        Value="1" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentRoot"
                                                                           Storyboard.TargetProperty="(Grid.ColumnSpan)">
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0"
                                                                        Value="1" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot"
                                                                           Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0"
                                                                        Value="Visible" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames FillBehavior="Stop"
                                                                           Storyboard.TargetName="ContentTransform"
                                                                           Storyboard.TargetProperty="TranslateX">
                                                <LinearDoubleKeyFrame KeyTime="0:0:0"
                                                                      Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.OpenPaneLengthMinusCompactLength}" />
                                                <SplineDoubleKeyFrame KeySpline="0.0,0.35 0.15,1.0"
                                                                      KeyTime="{ThemeResource SplitViewPaneAnimationOpenPreDuration}"
                                                                      Value="0" />
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PaneClipRectangleTransform"
                                                                           Storyboard.TargetProperty="TranslateX">
                                                <DiscreteDoubleKeyFrame KeyTime="0:0:0"
                                                                        Value="0" />
                                                <SplineDoubleKeyFrame KeySpline="0.0,0.35 0.15,1.0"
                                                                      KeyTime="{ThemeResource SplitViewPaneAnimationOpenDuration}"
                                                                      Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.NegativeOpenPaneLengthMinusCompactLength}" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualTransition>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Closed" />
                                <VisualState x:Name="ClosedCompactLeft">
                                    <VisualState.Setters>
                                        <Setter Target="ColumnDefinition1.Width" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.CompactPaneGridLength, FallbackValue=0}" />
                                        <Setter Target="ContentRoot.Grid.Column" Value="1" />
                                        <Setter Target="ContentRoot.Grid.ColumnSpan" Value="1" />
                                        <Setter Target="PaneRoot.Visibility" Value="Visible" />
                                        <Setter Target="PaneClipRectangleTransform.TranslateX" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.NegativeOpenPaneLengthMinusCompactLength}" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="ClosedCompactRight">
                                    <VisualState.Setters>
                                        <Setter Target="ColumnDefinition1.Width" Value="*" />
                                        <Setter Target="ColumnDefinition2.Width" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.CompactPaneGridLength, FallbackValue=0}" />
                                        <Setter Target="ContentRoot.Grid.ColumnSpan" Value="1" />
                                        <Setter Target="PaneRoot.Visibility" Value="Visible" />
                                        <Setter Target="PaneRoot.Grid.ColumnSpan" Value="2" />
                                        <Setter Target="PaneRoot.HorizontalAlignment" Value="Right" />
                                        <Setter Target="PaneClipRectangleTransform.TranslateX" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.OpenPaneLengthMinusCompactLength}" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="OpenOverlayLeft">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot"
                                                                       Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0"
                                                                    Value="Visible" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HCPaneBorder"
                                                                       Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0"
                                                                    Value="Visible" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="LightDismissLayer"
                                                                       Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0"
                                                                    Value="Visible" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="OpenOverlayRight">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot"
                                                                       Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0"
                                                                    Value="Visible" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot"
                                                                       Storyboard.TargetProperty="HorizontalAlignment">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0"
                                                                    Value="Right" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HCPaneBorder"
                                                                       Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0"
                                                                    Value="Visible" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HCPaneBorder"
                                                                       Storyboard.TargetProperty="HorizontalAlignment">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0"
                                                                    Value="Left" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="LightDismissLayer"
                                                                       Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0"
                                                                    Value="Visible" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="OpenInlineLeft">
                                    <VisualState.Setters>
                                        <Setter Target="PaneRoot.Visibility" Value="Visible" />
                                        <Setter Target="HCPaneBorder.Visibility" Value="Visible" />
                                        <Setter Target="ContentRoot.Grid.ColumnSpan" Value="1" />
                                        <Setter Target="ContentRoot.Grid.Column" Value="1" />
                                        <Setter Target="PaneRoot.Grid.ColumnSpan" Value="1" />
                                        <Setter Target="PaneTransform.TranslateX" Value="0" />
                                        <Setter Target="ContentTransform.TranslateX" Value="0" />
                                        <Setter Target="PaneClipRectangleTransform.TranslateX" Value="0" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="OpenInlineRight">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ColumnDefinition1"
                                                                       Storyboard.TargetProperty="Width">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0"
                                                                    Value="*" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ColumnDefinition2"
                                                                       Storyboard.TargetProperty="Width">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0"
                                                                    Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.OpenPaneGridLength, FallbackValue=0}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentRoot"
                                                                       Storyboard.TargetProperty="(Grid.ColumnSpan)">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0"
                                                                    Value="1" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot"
                                                                       Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0"
                                                                    Value="Visible" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot"
                                                                       Storyboard.TargetProperty="(Grid.Column)">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0"
                                                                    Value="1" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot"
                                                                       Storyboard.TargetProperty="(Grid.ColumnSpan)">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0"
                                                                    Value="1" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HCPaneBorder"
                                                                       Storyboard.TargetProperty="HorizontalAlignment">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0"
                                                                    Value="Left" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HCPaneBorder"
                                                                       Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0"
                                                                    Value="Visible" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="OpenCompactOverlayLeft">
                                    <VisualState.Setters>
                                        <Setter Target="ContentRoot.Grid.ColumnSpan" Value="1" />
                                        <Setter Target="ContentRoot.Grid.Column" Value="1" />
                                    </VisualState.Setters>

                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ColumnDefinition1"
                                                                       Storyboard.TargetProperty="Width">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0"
                                                                    Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.CompactPaneGridLength, FallbackValue=0}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot"
                                                                       Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0"
                                                                    Value="Visible" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HCPaneBorder"
                                                                       Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0"
                                                                    Value="Visible" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="LightDismissLayer"
                                                                       Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0"
                                                                    Value="Visible" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="OpenCompactOverlayRight">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ColumnDefinition1"
                                                                       Storyboard.TargetProperty="Width">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0"
                                                                    Value="*" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ColumnDefinition2"
                                                                       Storyboard.TargetProperty="Width">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0"
                                                                    Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.CompactPaneGridLength, FallbackValue=0}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentRoot"
                                                                       Storyboard.TargetProperty="(Grid.ColumnSpan)">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0"
                                                                    Value="1" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot"
                                                                       Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0"
                                                                    Value="Visible" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PaneRoot"
                                                                       Storyboard.TargetProperty="HorizontalAlignment">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0"
                                                                    Value="Right" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HCPaneBorder"
                                                                       Storyboard.TargetProperty="HorizontalAlignment">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0"
                                                                    Value="Left" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HCPaneBorder"
                                                                       Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0"
                                                                    Value="Visible" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="LightDismissLayer"
                                                                       Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0"
                                                                    Value="Visible" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="OverlayVisibilityStates">
                                <VisualState x:Name="OverlayNotVisible" />
                                <VisualState x:Name="OverlayVisible">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="LightDismissLayer"
                                                                       Storyboard.TargetProperty="Fill">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0"
                                                                    Value="{ThemeResource NavigationViewSplitViewLightDismissOverlayBackground}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <Grid.ColumnDefinitions>
                            <ColumnDefinition x:Name="ColumnDefinition1"
                                              Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.OpenPaneGridLength, FallbackValue=0}" />
                            <ColumnDefinition x:Name="ColumnDefinition2"
                                              Width="*" />
                        </Grid.ColumnDefinitions>
                        <!-- Pane Content Area -->
                        <Grid x:Name="PaneRoot"
                              BorderBrush="{TemplateBinding BorderBrush}"
                              BorderThickness="{TemplateBinding BorderThickness}"
                              Grid.ColumnSpan="2"
                              HorizontalAlignment="Left"
                              Visibility="Collapsed"
                              Background="{TemplateBinding PaneBackground}"
                              Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.OpenPaneLength}"
                              Canvas.ZIndex="1"
                              contract7Present:CornerRadius="{TemplateBinding CornerRadius}">
                            <contract7Present:Grid.BackgroundTransition>
                                <BrushTransition />
                            </contract7Present:Grid.BackgroundTransition>
                            <Grid.Clip>
                                <RectangleGeometry x:Name="PaneClipRectangle">
                                    <RectangleGeometry.Transform>
                                        <CompositeTransform x:Name="PaneClipRectangleTransform" />
                                    </RectangleGeometry.Transform>
                                </RectangleGeometry>
                            </Grid.Clip>
                            <Grid.RenderTransform>
                                <CompositeTransform x:Name="PaneTransform" />
                            </Grid.RenderTransform>
                            <Border Child="{TemplateBinding Pane}" />
                            <Rectangle x:Name="HCPaneBorder"
                                       x:DeferLoadStrategy="Lazy"
                                       Visibility="Collapsed"
                                       Fill="{ThemeResource NavigationViewDefaultPaneBorderBrush}"
                                       Width="1"
                                       HorizontalAlignment="Right" />
                        </Grid>

                        <!-- Content Area -->
                        <Grid x:Name="ContentRoot"
                              Grid.ColumnSpan="2">
                            <Grid.RenderTransform>
                                <CompositeTransform x:Name="ContentTransform" />
                            </Grid.RenderTransform>
                            <Border Child="{TemplateBinding Content}" />
                            <Rectangle x:Name="LightDismissLayer"
                                       Fill="Transparent"
                                       Visibility="Collapsed" />
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MaterialNavigationViewStyle"
           TargetType="local:NavigationView">
        <Setter Property="Background" Value="{ThemeResource NavigationViewBackground}" />

        <Setter Property="OpenPaneLength" Value="360" />
        <Setter Property="CompactPaneLength" Value="{ThemeResource NavigationViewCompactPaneLength}" />

        <Setter Property="PaneToggleButtonStyle" Value="{StaticResource MaterialNavigationViewIconTextButtonStyle}" />
        <Setter Property="IsTabStop" Value="False" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:NavigationView">
                    <Grid x:Name="RootGrid"
                          toolkit:VisibleBoundsPadding.PaddingMask="All"
                          Background="{TemplateBinding Background}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="DisplayModeGroup">
                                <VisualState x:Name="Compact">
                                    <VisualState.Setters>
                                        <Setter Target="NavigationViewBackButton.Margin" Value="{ThemeResource MaterialNavigationViewButtonMarginWhenStackedVertically}" />
                                        <Setter Target="NavigationViewCloseButton.Margin" Value="{ThemeResource MaterialNavigationViewButtonMarginWhenStackedVertically}" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="Expanded">
                                    <VisualState.Setters>
                                        <Setter Target="NavigationViewBackButton.Margin" Value="{ThemeResource MaterialNavigationViewButtonMarginWhenStackedVertically}" />
                                        <Setter Target="NavigationViewCloseButton.Margin" Value="{ThemeResource MaterialNavigationViewButtonMarginWhenStackedVertically}" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="Minimal">
                                    <VisualState.Setters>
                                        <Setter Target="HeaderContent.Margin" Value="{ThemeResource NavigationViewMinimalHeaderMargin}" />
                                        <Setter Target="ContentGrid.BorderThickness" Value="{ThemeResource NavigationViewMinimalContentGridBorderThickness}" />
                                        <Setter Target="ContentGrid.CornerRadius" Value="{ThemeResource NavigationViewMinimalContentGridCornerRadius}" />
                                        <Setter Target="ContentGrid.Margin" Value="{ThemeResource NavigationViewMinimalContentMargin}" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="MinimalWithBackButton">
                                    <VisualState.Setters>
                                        <Setter Target="HeaderContent.Margin" Value="{ThemeResource NavigationViewMinimalHeaderMargin}" />
                                        <Setter Target="ContentGrid.BorderThickness" Value="{ThemeResource NavigationViewMinimalContentGridBorderThickness}" />
                                        <Setter Target="ContentGrid.CornerRadius" Value="{ThemeResource NavigationViewMinimalContentGridCornerRadius}" />
                                        <Setter Target="ContentGrid.Margin" Value="{ThemeResource NavigationViewMinimalContentMargin}" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="TopNavigationMinimal">
                                    <VisualState.Setters>
                                        <Setter Target="ContentGrid.BorderThickness" Value="{ThemeResource TopNavigationViewContentGridBorderThickness}" />
                                        <Setter Target="ContentGrid.CornerRadius" Value="{ThemeResource TopNavigationViewContentGridCornerRadius}" />
                                        <Setter Target="ContentGrid.Margin" Value="{ThemeResource TopNavigationViewContentMargin}" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="TogglePaneGroup">
                                <VisualState x:Name="TogglePaneButtonCollapsed" />
                                <VisualState x:Name="TogglePaneButtonVisible">
                                    <VisualState.Setters>
                                        <!-- Might not need this setter when all the margins/paddings will be adequately set. -->
                                        <!-- This MinHeight setter is only here to ensure that AutoSuggestBox doesn't draw over ToggleButton. -->
                                        <Setter Target="PaneContentGridToggleButtonRow.MinHeight" Value="{ThemeResource NavigationViewPaneHeaderRowMinHeight}" />
                                        <Setter Target="PaneTitlePresenter.Margin" Value="{ThemeResource NavigationViewItemInnerHeaderMargin}" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="HeaderGroup">
                                <VisualState x:Name="HeaderVisible" />
                                <VisualState x:Name="HeaderCollapsed">
                                    <VisualState.Setters>
                                        <Setter Target="HeaderContent.Visibility" Value="Collapsed" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="AutoSuggestGroup">
                                <VisualState x:Name="AutoSuggestBoxVisible" />
                                <VisualState x:Name="AutoSuggestBoxCollapsed">
                                    <VisualState.Setters>
                                        <Setter Target="AutoSuggestArea.Visibility" Value="Collapsed" />
                                        <Setter Target="TopPaneAutoSuggestArea.Visibility" Value="Collapsed" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="PaneStateGroup">
                                <VisualState x:Name="NotClosedCompact" />
                                <VisualState x:Name="ClosedCompact">
                                    <VisualState.Setters>
                                        <Setter Target="PaneAutoSuggestBoxPresenter.Visibility" Value="Collapsed" />
                                        <Setter Target="PaneAutoSuggestButton.Visibility" Value="Visible" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="PaneStateListSizeGroup">
                                <VisualState x:Name="ListSizeFull" />
                                <VisualState x:Name="ListSizeCompact">
                                    <VisualState.Setters>
                                        <Setter Target="PaneContentGrid.Width" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CompactPaneLength}" />
                                        <Setter Target="ShadowCaster.Width" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CompactPaneLength}" />
                                        <Setter Target="PaneTitleTextBlock.Visibility" Value="Collapsed" />
                                        <Setter Target="PaneHeaderContentBorder.Visibility" Value="Collapsed" />
                                        <Setter Target="PaneCustomContentBorder.Visibility" Value="Collapsed" />
                                        <Setter Target="PaneCustomContentBorder.HorizontalAlignment" Value="Left" />
                                        <Setter Target="FooterContentBorder.HorizontalAlignment" Value="Left" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="PaneOverlayGroup">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition From="PaneNotOverlaying"
                                                      To="PaneOverlaying">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ShadowCasterTransform"
                                                                           Storyboard.TargetProperty="TranslateX">
                                                <DiscreteDoubleKeyFrame KeyTime="0"
                                                                        Value="{Binding ElementName=RootSplitView, Path=TemplateSettings.NegativeOpenPaneLengthMinusCompactLength}" />
                                                <SplineDoubleKeyFrame KeyTime="0:0:0.35"
                                                                      KeySpline="0.1,0.9 0.2,1.0"
                                                                      Value="0" />
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ShadowCaster"
                                                                           Storyboard.TargetProperty="Opacity">
                                                <LinearDoubleKeyFrame KeyTime="0:0:0.35"
                                                                      Value="1" />
                                            </DoubleAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ShadowCaster"
                                                                           Storyboard.TargetProperty="HorizontalAlignment">
                                                <DiscreteObjectKeyFrame KeyTime="0"
                                                                        Value="Left" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualTransition>
                                    <VisualTransition From="PaneOverlaying"
                                                      To="PaneNotOverlaying">
                                        <Storyboard x:Name="ShadowCasterEaseOutStoryboard">
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ShadowCasterTransform"
                                                                           Storyboard.TargetProperty="TranslateX">
                                                <DiscreteDoubleKeyFrame KeyTime="0"
                                                                        Value="0" />
                                                <SplineDoubleKeyFrame KeyTime="0:0:0.12"
                                                                      KeySpline="0.1,0.9 0.2,1.0"
                                                                      Value="{Binding ElementName=RootSplitView, Path=TemplateSettings.NegativeOpenPaneLengthMinusCompactLength}" />
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ShadowCaster"
                                                                           Storyboard.TargetProperty="Opacity">
                                                <LinearDoubleKeyFrame KeyTime="0:0:0.12"
                                                                      Value="0" />
                                            </DoubleAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ShadowCaster"
                                                                           Storyboard.TargetProperty="HorizontalAlignment">
                                                <DiscreteObjectKeyFrame KeyTime="0"
                                                                        Value="Left" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualTransition>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="PaneOverlaying" />
                                <VisualState x:Name="PaneNotOverlaying">
                                    <VisualState.Setters>
                                        <Setter Target="RootSplitView.BorderBrush" Value="Transparent" />
                                        <Setter Target="ShadowCaster.Opacity" Value="0" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="TitleBarVisibilityGroup">
                                <VisualState x:Name="TitleBarVisible" />
                                <VisualState x:Name="TitleBarCollapsed">
                                    <VisualState.Setters>
                                        <Setter Target="PaneContentGrid.Margin" Value="0,32,0,0" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="OverflowLabelGroup">
                                <VisualState x:Name="OverflowButtonWithLabel" />
                                <VisualState x:Name="OverflowButtonNoLabel">
                                    <VisualState.Setters>
                                        <Setter Target="TopNavOverflowButton.Style" Value="{ThemeResource NavigationViewOverflowButtonNoLabelStyleWhenPaneOnTop}" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="BackButtonGroup">
                                <VisualState x:Name="BackButtonVisible" />
                                <VisualState x:Name="BackButtonCollapsed">
                                    <VisualState.Setters>
                                        <Setter Target="BackButtonPlaceholderOnTopNav.Width" Value="0" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="PaneVisibilityGroup">
                                <VisualState x:Name="PaneVisible" />
                                <VisualState x:Name="PaneCollapsed">
                                    <VisualState.Setters>
                                        <!-- Note that RootSplitView.DisplayMode is set in code so we don't want to -->
                                        <!-- write it here and interfere. But these values work together to hide -->
                                        <!-- the left pane. -->
                                        <Setter Target="RootSplitView.CompactPaneLength" Value="0" />
                                        <Setter Target="ShadowCaster.Width" Value="0" />
                                        <Setter Target="PaneToggleButtonGrid.Visibility" Value="Collapsed" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="PaneSeparatorStates">
                                <VisualState x:Name="SeparatorCollapsed" />
                                <VisualState x:Name="SeparatorVisible">
                                    <VisualState.Setters>
                                        <Setter Target="VisualItemsSeparator.Visibility" Value="Visible" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <!-- Content layouts -->
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>

                            <!-- DisplayMode top -->
                            <StackPanel x:Name="TopNavArea"
                                        Background="{ThemeResource NavigationViewTopPaneBackground}"
                                        Grid.Row="0"
                                        HorizontalAlignment="Stretch"
                                        VerticalAlignment="Top"
                                        Canvas.ZIndex="1"
                                        contract4Present:XYFocusKeyboardNavigation="Enabled">

                                <Grid x:Name="TopNavTopPadding"
                                      Height="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.TopPadding}"
                                      Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.TopPaneVisibility}" />

                                <Grid x:Name="TopNavGrid"
                                      Height="{ThemeResource NavigationViewTopPaneHeight}"
                                      Margin="{ThemeResource TopNavigationViewTopNavGridMargin}"
                                      Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.TopPaneVisibility}"
                                      BorderBrush="{ThemeResource NavigationViewItemSeparatorForeground}">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition x:Name="BackButtonPlaceholderOnTopNav"
                                                          Width="{ThemeResource NavigationBackButtonWidth}" />
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="*"
                                                          MinWidth="{ThemeResource TopNavigationViewPaneCustomContentMinWidth}" />
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>

                                    <Grid x:Name="TopNavLeftPadding"
                                          Grid.Column="1"
                                          Width="0" />

                                    <ContentControl x:Name="PaneHeaderOnTopPane"
                                                    IsTabStop="False"
                                                    VerticalContentAlignment="Stretch"
                                                    HorizontalContentAlignment="Stretch"
                                                    Grid.Column="2" />

                                    <ContentControl x:Name="PaneTitleOnTopPane"
                                                    IsTabStop="False"
                                                    VerticalContentAlignment="Stretch"
                                                    HorizontalContentAlignment="Stretch"
                                                    Margin="{ThemeResource NavigationViewItemInnerHeaderMargin}"
                                                    Grid.Column="2" />

                                    <!-- Top nav ItemsRepeater -->
                                    <local:ItemsRepeaterScrollHost Grid.Column="3">
                                        <ScrollViewer HorizontalScrollMode="Disabled"
                                                      HorizontalScrollBarVisibility="Hidden"
                                                      VerticalScrollMode="Disabled"
                                                      VerticalScrollBarVisibility="Hidden">
                                            <local:ItemsRepeater AutomationProperties.LandmarkType="Navigation"
                                                                 AutomationProperties.Name="{TemplateBinding AutomationProperties.Name}"
                                                                 AutomationProperties.AccessibilityView="Content"
                                                                 x:Name="TopNavMenuItemsHost">
                                                <local:ItemsRepeater.Layout>
                                                    <local:StackLayout Orientation="Horizontal" />
                                                </local:ItemsRepeater.Layout>
                                            </local:ItemsRepeater>
                                        </ScrollViewer>
                                    </local:ItemsRepeaterScrollHost>

                                    <Button x:Name="TopNavOverflowButton"
                                            Grid.Column="4"
                                            Content="More"
                                            Margin="{ThemeResource TopNavigationViewOverflowButtonMargin}"
                                            Style="{StaticResource NavigationViewOverflowButtonStyleWhenPaneOnTop}"
                                            Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.OverflowButtonVisibility}">

                                        <Button.Flyout>
                                            <Flyout contract7NotPresent:Placement="Bottom"
                                                    contract7Present:Placement="BottomEdgeAlignedRight"
                                                    ElementSoundMode="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ElementSoundMode}">
                                                <Flyout.FlyoutPresenterStyle>
                                                    <Style TargetType="FlyoutPresenter">
                                                        <Setter Property="Padding" Value="{ThemeResource TopNavigationViewOverflowMenuPadding}" />
                                                        <!-- Set negative top margin to make the flyout align exactly with the button -->
                                                        <Setter Property="Margin" Value="0,-4,0,0" />
                                                        <Setter Property="ScrollViewer.HorizontalScrollMode" Value="Auto" />
                                                        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
                                                        <Setter Property="ScrollViewer.VerticalScrollMode" Value="Auto" />
                                                        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
                                                        <Setter Property="ScrollViewer.ZoomMode" Value="Disabled" />
                                                        <todo:contract7Present_Setter Property="CornerRadius"
                                                                                      Value="{ThemeResource OverlayCornerRadius}" />
                                                        <Setter Property="Template">
                                                            <Setter.Value>
                                                                <ControlTemplate TargetType="FlyoutPresenter">
                                                                    <ScrollViewer x:Name="ScrollViewer"
                                                                                  ZoomMode="{TemplateBinding ScrollViewer.ZoomMode}"
                                                                                  HorizontalScrollMode="{TemplateBinding ScrollViewer.HorizontalScrollMode}"
                                                                                  HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                                                                                  VerticalScrollMode="{TemplateBinding ScrollViewer.VerticalScrollMode}"
                                                                                  VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
                                                                                  AutomationProperties.AccessibilityView="Raw">
                                                                        <ContentPresenter x:Name="ContentPresenter"
                                                                                          Background="{TemplateBinding Background}"
                                                                                          BorderBrush="{TemplateBinding BorderBrush}"
                                                                                          BorderThickness="{TemplateBinding BorderThickness}"
                                                                                          Content="{TemplateBinding Content}"
                                                                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                                                                          ContentTransitions="{TemplateBinding ContentTransitions}"
                                                                                          Padding="{TemplateBinding Padding}"
                                                                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                                          contract7Present:CornerRadius="{TemplateBinding CornerRadius}"
                                                                                          contract7NotPresent:CornerRadius="{ThemeResource OverlayCornerRadius}" />
                                                                    </ScrollViewer>
                                                                </ControlTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Style>
                                                </Flyout.FlyoutPresenterStyle>
                                                <local:ItemsRepeaterScrollHost>
                                                    <ScrollViewer VerticalScrollBarVisibility="Auto">
                                                        <local:ItemsRepeater AutomationProperties.AccessibilityView="Content"
                                                                             x:Name="TopNavMenuItemsOverflowHost">
                                                            <local:ItemsRepeater.Layout>
                                                                <local:StackLayout />
                                                            </local:ItemsRepeater.Layout>
                                                        </local:ItemsRepeater>
                                                    </ScrollViewer>
                                                </local:ItemsRepeaterScrollHost>
                                            </Flyout>
                                        </Button.Flyout>
                                    </Button>

                                    <ContentControl x:Name="PaneCustomContentOnTopPane"
                                                    IsTabStop="False"
                                                    VerticalContentAlignment="Stretch"
                                                    HorizontalContentAlignment="Stretch"
                                                    Grid.Column="5" />

                                    <Grid x:Name="TopPaneAutoSuggestArea"
                                          Height="{ThemeResource NavigationViewTopPaneHeight}"
                                          Grid.Column="6">

                                        <ContentControl x:Name="TopPaneAutoSuggestBoxPresenter"
                                                        Margin="{ThemeResource TopNavigationViewAutoSuggestBoxMargin}"
                                                        MinWidth="216"
                                                        IsTabStop="False"
                                                        HorizontalContentAlignment="Stretch"
                                                        VerticalContentAlignment="Center" />
                                    </Grid>

                                    <ContentControl x:Name="PaneFooterOnTopPane"
                                                    IsTabStop="False"
                                                    VerticalContentAlignment="Stretch"
                                                    HorizontalContentAlignment="Stretch"
                                                    Grid.Column="7" />
                                    <!-- Top footer menu ItemsRepeater -->
                                    <local:ItemsRepeater Grid.Column="8"
                                                         AutomationProperties.LandmarkType="Navigation"
                                                         AutomationProperties.AccessibilityView="Content"
                                                         x:Name="TopFooterMenuItemsHost">
                                        <local:ItemsRepeater.Layout>
                                            <local:StackLayout Orientation="Horizontal" />
                                        </local:ItemsRepeater.Layout>
                                    </local:ItemsRepeater>

                                </Grid>
                                <Border x:Name="TopNavContentOverlayAreaGrid"
                                        Child="{TemplateBinding ContentOverlay}" />
                            </StackPanel>

                            <!-- Displaymode (compact/minimal/normal) left -->
                            <SplitView x:Name="RootSplitView"
                                       Grid.Row="1"
                                       CornerRadius="{ThemeResource MaterialNavigationViewSplitViewCornerRadius}"
                                       BorderBrush="{ThemeResource NavigationViewItemSeparatorForeground}"
                                       PaneBackground="{ThemeResource NavigationViewPaneBackground}"
                                       CompactPaneLength="{TemplateBinding CompactPaneLength}"
                                       OpenPaneLength="{TemplateBinding OpenPaneLength}"
                                       IsPaneOpen="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsPaneOpen, Mode=TwoWay}"
                                       DisplayMode="Inline"
                                       IsTabStop="False"
                                       win:Style="{StaticResource ResetDefaultSplitViewStyle}">

                                <SplitView.Pane>
                                    <Grid x:Name="PaneContentGrid"
                                          BorderBrush="{ThemeResource NavigationViewItemSeparatorForeground}"
                                          HorizontalAlignment="Left"
                                          Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.LeftPaneVisibility}">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="0" />
                                            <!-- above button margin + back button space -->
                                            <RowDefinition x:Name="PaneContentGridToggleButtonRow"
                                                           Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="0" />
                                            <!-- above list margin -->
                                            <RowDefinition x:Name="ItemsContainerRow"
                                                           Height="*" />
                                        </Grid.RowDefinitions>

                                        <Grid x:Name="ContentPaneTopPadding"
                                              Height="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.TopPadding}" />

                                        <Grid Grid.Row="2">
                                            <Grid.RowDefinitions>
                                                <RowDefinition x:Name="PaneHeaderContentBorderRow" />
                                            </Grid.RowDefinitions>

                                            <Grid.ColumnDefinitions>
                                                <!--
                                                    C0 and C1 width is injected from NavView
                                                    PaneHeaderCloseButtonColumn -> NavigationViewCloseButton.Width
                                                    PaneHeaderToggleButtonColumn -> res[PaneToggleButtonWidth] ?? 40
                                                -->
                                                <ColumnDefinition x:Name="PaneHeaderCloseButtonColumn" />
                                                <ColumnDefinition x:Name="PaneHeaderToggleButtonColumn" />
                                                <ColumnDefinition Width="*" />
                                            </Grid.ColumnDefinitions>

                                            <ContentControl x:Name="PaneHeaderContentBorder"
                                                            Grid.Column="2"
                                                            VerticalContentAlignment="Stretch"
                                                            HorizontalContentAlignment="Stretch"
                                                            IsTabStop="False" />
                                        </Grid>

                                        <Grid x:Name="AutoSuggestArea"
                                              Grid.Row="3"
                                              Height="{ThemeResource NavigationViewAutoSuggestAreaHeight}"
                                              Margin="0,0,0,8"
                                              VerticalAlignment="Center">

                                            <ContentControl x:Name="PaneAutoSuggestBoxPresenter"
                                                            Margin="{ThemeResource NavigationViewAutoSuggestBoxMargin}"
                                                            IsTabStop="False"
                                                            HorizontalContentAlignment="Stretch"
                                                            VerticalContentAlignment="Center" />

                                            <Button x:Name="PaneAutoSuggestButton"
                                                    Visibility="Collapsed"
                                                    Style="{ThemeResource NavigationViewPaneSearchButtonStyle}"
                                                    Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.SmallerPaneToggleButtonWidth}">
                                                <Button.Resources>
                                                    <ResourceDictionary>
                                                        <ResourceDictionary.ThemeDictionaries>
                                                            <ResourceDictionary x:Key="Default">
                                                                <StaticResource x:Key="ButtonBackgroundPointerOver" ResourceKey="NavigationViewItemBackgroundPointerOver" />
                                                                <StaticResource x:Key="ButtonBackgroundPressed" ResourceKey="NavigationViewItemBackgroundPressed" />
                                                                <StaticResource x:Key="ButtonBackgroundDisabled" ResourceKey="NavigationViewItemBackgroundDisabled" />
                                                                <StaticResource x:Key="ButtonForegroundPointerOver" ResourceKey="NavigationViewItemForegroundPointerOver" />
                                                                <StaticResource x:Key="ButtonForegroundPressed" ResourceKey="NavigationViewItemForegroundPressed" />
                                                                <StaticResource x:Key="ButtonForegroundDisabled" ResourceKey="NavigationViewItemForegroundDisabled" />
                                                                <StaticResource x:Key="ButtonBorderBrushPointerOver" ResourceKey="NavigationViewItemBorderBrushPointerOver" />
                                                                <StaticResource x:Key="ButtonBorderBrushPressed" ResourceKey="NavigationViewItemBorderBrushPressed" />
                                                                <StaticResource x:Key="ButtonBorderBrushDisabled" ResourceKey="NavigationViewItemBorderBrushDisabled" />
                                                            </ResourceDictionary>
                                                            <ResourceDictionary x:Key="Light">
                                                                <StaticResource x:Key="ButtonBackgroundPointerOver" ResourceKey="NavigationViewItemBackgroundPointerOver" />
                                                                <StaticResource x:Key="ButtonBackgroundPressed" ResourceKey="NavigationViewItemBackgroundPressed" />
                                                                <StaticResource x:Key="ButtonBackgroundDisabled" ResourceKey="NavigationViewItemBackgroundDisabled" />
                                                                <StaticResource x:Key="ButtonForegroundPointerOver" ResourceKey="NavigationViewItemForegroundPointerOver" />
                                                                <StaticResource x:Key="ButtonForegroundPressed" ResourceKey="NavigationViewItemForegroundPressed" />
                                                                <StaticResource x:Key="ButtonForegroundDisabled" ResourceKey="NavigationViewItemForegroundDisabled" />
                                                                <StaticResource x:Key="ButtonBorderBrushPointerOver" ResourceKey="NavigationViewItemBorderBrushPointerOver" />
                                                                <StaticResource x:Key="ButtonBorderBrushPressed" ResourceKey="NavigationViewItemBorderBrushPressed" />
                                                                <StaticResource x:Key="ButtonBorderBrushDisabled" ResourceKey="NavigationViewItemBorderBrushDisabled" />
                                                            </ResourceDictionary>
                                                        </ResourceDictionary.ThemeDictionaries>
                                                    </ResourceDictionary>
                                                </Button.Resources>
                                            </Button>
                                        </Grid>

                                        <ContentControl x:Name="PaneCustomContentBorder"
                                                        IsTabStop="False"
                                                        VerticalContentAlignment="Stretch"
                                                        HorizontalContentAlignment="Stretch"
                                                        Grid.Row="4" />

                                        <!-- "Non header" content -->
                                        <Grid x:Name="ItemsContainerGrid"
                                              Grid.Row="6">
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="*" />
                                                <!-- MenuItems -->
                                                <RowDefinition Height="Auto" />
                                                <!-- Separator if overflow -->
                                                <RowDefinition Height="Auto" />
                                                <!-- PaneFooter -->
                                                <RowDefinition Height="Auto" />
                                                <!-- FooterItems -->
                                            </Grid.RowDefinitions>

                                            <!-- MenuItems -->
                                            <local:ItemsRepeaterScrollHost HorizontalAlignment="Stretch"
                                                                           VerticalAlignment="Stretch">
                                                <ScrollViewer x:Name="MenuItemsScrollViewer"
                                                              TabNavigation="Local"
                                                              VerticalScrollBarVisibility="Auto">
                                                    <!-- Left nav ItemsRepeater -->
                                                    <local:ItemsRepeater x:Name="MenuItemsHost"
                                                                         AutomationProperties.Name="{TemplateBinding AutomationProperties.Name}"
                                                                         AutomationProperties.AccessibilityView="Content">
                                                        <local:ItemsRepeater.Layout>
                                                            <local:StackLayout />
                                                        </local:ItemsRepeater.Layout>
                                                    </local:ItemsRepeater>
                                                </ScrollViewer>
                                            </local:ItemsRepeaterScrollHost>

                                            <local:NavigationViewItemSeparator x:Name="VisualItemsSeparator"
                                                                               Grid.Row="1"
                                                                               Margin="0,0,0,2"
                                                                               Visibility="Collapsed"
                                                                               VerticalAlignment="Center"
                                                                               HorizontalAlignment="Stretch" />

                                            <!-- PaneFooter -->
                                            <ContentControl x:Name="FooterContentBorder"
                                                            IsTabStop="False"
                                                            VerticalContentAlignment="Stretch"
                                                            HorizontalContentAlignment="Stretch"
                                                            Margin="0,0,0,4"
                                                            Grid.Row="2" />

                                            <!-- FooterItems -->
                                            <local:ItemsRepeaterScrollHost Grid.Row="3">
                                                <ScrollViewer x:Name="FooterItemsScrollViewer"
                                                              VerticalScrollBarVisibility="Auto"
                                                              contract7Present:VerticalAnchorRatio="1">
                                                    <local:ItemsRepeater x:Name="FooterMenuItemsHost"
                                                                         AutomationProperties.AccessibilityView="Content">
                                                        <local:ItemsRepeater.Layout>
                                                            <local:StackLayout />
                                                        </local:ItemsRepeater.Layout>
                                                    </local:ItemsRepeater>
                                                </ScrollViewer>
                                            </local:ItemsRepeaterScrollHost>
                                        </Grid>
                                    </Grid>
                                </SplitView.Pane>

                                <SplitView.Content>
                                    <Grid x:Name="ContentGrid"
                                          BorderBrush="{ThemeResource NavigationViewBackground}"
                                          BorderThickness="{ThemeResource NavigationViewContentGridBorderThickness}"
                                          Margin="{ThemeResource NavigationViewContentMargin}"
                                          CornerRadius="{ThemeResource MaterialNavigationViewContentGridCornerRadius}">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="*" />
                                        </Grid.RowDefinitions>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="*" />
                                        </Grid.ColumnDefinitions>

                                        <Grid x:Name="ContentTopPadding"
                                              Grid.ColumnSpan="2"
                                              Height="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.TopPadding}"
                                              Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.LeftPaneVisibility}" />

                                        <Grid x:Name="ContentLeftPadding"
                                              Grid.Row="1" />

                                        <ContentControl x:Name="HeaderContent"
                                                        Grid.Row="1"
                                                        Grid.Column="1"
                                                        MinHeight="{ThemeResource PaneToggleButtonHeight}"
                                                        IsTabStop="False"
                                                        Content="{TemplateBinding Header}"
                                                        ContentTemplate="{TemplateBinding HeaderTemplate}"
                                                        VerticalContentAlignment="Stretch"
                                                        HorizontalContentAlignment="Stretch"
                                                        Style="{StaticResource NavigationViewTitleHeaderContentControlTextStyle}" />

                                        <ContentPresenter x:Name="ContentPresenter"
                                                          AutomationProperties.LandmarkType="Main"
                                                          Grid.Row="2"
                                                          Grid.ColumnSpan="2"
                                                          Content="{TemplateBinding Content}"
                                                          Margin="{ThemeResource NavigationViewContentPresenterMargin}" />
                                    </Grid>
                                </SplitView.Content>
                            </SplitView>

                            <Grid x:Name="ShadowCaster"
                                  Grid.RowSpan="2"
                                  Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.OpenPaneWidth}"
                                  HorizontalAlignment="Left">
                                <Grid.RenderTransform>
                                    <CompositeTransform x:Name="ShadowCasterTransform" />
                                </Grid.RenderTransform>
                            </Grid>
                        </Grid>

                        <!-- Button grid -->
                        <!--
                            TODO: Uno Specific: Canvas.ZIndex is not implemented, so the
                            button Grid is moved below the content SplitView in the template
                        -->
                        <Grid x:Name="PaneToggleButtonGrid"
                              HorizontalAlignment="Left"
                              VerticalAlignment="Top"
                              Canvas.ZIndex="100">

                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>

                            <Grid x:Name="TogglePaneTopPadding"
                                  Height="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.TopPadding}" />

                            <Grid x:Name="ButtonHolderGrid"
                                  Grid.Row="1">
                                <Button x:Name="NavigationViewBackButton"
                                        Content="&#xE72B;"
                                        IsEnabled="{TemplateBinding IsBackEnabled}"
                                        Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.BackButtonVisibility}"
                                        Style="{StaticResource MaterialNavigationViewIconButtonStyle}">
                                    <ToolTipService.ToolTip>
                                        <ToolTip x:Name="NavigationViewBackButtonToolTip" />
                                    </ToolTipService.ToolTip>
                                </Button>
                                <Button x:Name="NavigationViewCloseButton"
                                        Content="&#xE894;"
                                        Style="{StaticResource MaterialNavigationViewIconButtonStyle}">
                                    <ToolTipService.ToolTip>
                                        <ToolTip x:Name="NavigationViewCloseButtonToolTip" />
                                    </ToolTipService.ToolTip>
                                </Button>
                                <Button x:Name="TogglePaneButton"
                                        FocusVisualMargin="0"
                                        AutomationProperties.LandmarkType="Navigation"
                                        Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.PaneToggleButtonVisibility}"
                                        Style="{TemplateBinding PaneToggleButtonStyle}">
                                    <TextBlock x:Name="PaneTitleTextBlock"
                                               Margin="0,-2,0,0"
                                               Text="{TemplateBinding PaneTitle}"
                                               HorizontalAlignment="Stretch"
                                               VerticalAlignment="Center"
                                               Style="{StaticResource MaterialTitleMedium}" />
                                </Button>

                                <Grid x:Name="PaneTitleHolder"
                                      Height="56"
                                      Visibility="Collapsed">
                                    <ContentControl x:Name="PaneTitlePresenter"
                                                    Margin="{ThemeResource NavigationViewPaneTitlePresenterMargin}"
                                                    IsTabStop="False"
                                                    HorizontalContentAlignment="Stretch"
                                                    VerticalContentAlignment="Stretch" />
                                </Grid>
                            </Grid>
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MaterialNavigationViewIconButtonStyle"
           TargetType="Button">
        <Setter Property="Foreground" Value="{ThemeResource NavigationViewButtonForeground}" />
        <Setter Property="FontFamily" Value="{ThemeResource SymbolThemeFontFamily}" />
        <Setter Property="FontSize" Value="{ThemeResource MaterialNavigationViewButtonIconSymbolFontSize}" />

        <Setter Property="Background" Value="{ThemeResource NavigationViewButtonBackground}" />
        <Setter Property="CornerRadius" Value="{ThemeResource MaterialNavigationViewButtonCornerRadius}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Height" Value="{ThemeResource MaterialNavigationViewButtonWidth}" />
        <Setter Property="Width" Value="{ThemeResource MaterialNavigationViewButtonWidth}" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Top" />

        <Setter Property="UseSystemFocusVisuals" Value="{StaticResource UseSystemFocusVisuals}" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid x:Name="LayoutRoot"
                          Background="{TemplateBinding Background}"
                          BorderBrush="{TemplateBinding BorderBrush}"
                          BorderThickness="{TemplateBinding BorderThickness}"
                          CornerRadius="{TemplateBinding CornerRadius}">

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="PointerOver">
                                    <VisualState.Setters>
                                        <Setter Target="LayoutRoot.Background" Value="{ThemeResource NavigationViewButtonBackgroundPointerOver}" />
                                        <Setter Target="Icon.Foreground" Value="{ThemeResource NavigationViewButtonForegroundPointerOver}" />
                                        <todo:Setter Target="Icon.(local:AnimatedIcon.State)"
                                                     Value="PointerOver" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <VisualState.Setters>
                                        <Setter Target="LayoutRoot.Background" Value="{ThemeResource NavigationViewButtonBackgroundPressed}" />
                                        <Setter Target="Icon.Foreground" Value="{ThemeResource NavigationViewButtonForegroundPressed}" />
                                        <todo:Setter Target="Icon.(local:AnimatedIcon.State)"
                                                     Value="Pressed" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <VisualState.Setters>
                                        <Setter Target="LayoutRoot.Background" Value="{ThemeResource NavigationViewButtonBackgroundDisabled}" />
                                        <Setter Target="Icon.Foreground" Value="{ThemeResource NavigationViewButtonForegroundDisabled}" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <todo:local_AnimatedIcon x:Name="Icon"
                                                 Height="{ThemeResource MaterialNavigationViewButtonIconLength}"
                                                 Width="{ThemeResource MaterialNavigationViewButtonIconLength}"
                                                 local:AnimatedIcon.State="Normal"
                                                 MirroredWhenRightToLeft="True"
                                                 HorizontalAlignment="Center"
                                                 VerticalAlignment="Center"
                                                 AutomationProperties.AccessibilityView="Raw">
                            <!--
                                this style is used for both back and close button
                                yet, only Animated'Back'VisualSource exist...
                            -->
                            <animatedvisuals:AnimatedBackVisualSource />
                            <local:AnimatedIcon.FallbackIconSource>
                                <local:FontIconSource Glyph="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Content}"
                                                      FontSize="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FontSize}"
                                                      FontFamily="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FontFamily}"
                                                      MirroredWhenRightToLeft="True" />
                            </local:AnimatedIcon.FallbackIconSource>
                        </todo:local_AnimatedIcon>

                        <Viewbox x:Name="IconHost"
                                 Height="{ThemeResource MaterialNavigationViewButtonIconLength}"
                                 Width="{ThemeResource MaterialNavigationViewButtonIconLength}"
                                 HorizontalAlignment="Center"
                                 VerticalAlignment="Center"
                                 AutomationProperties.AccessibilityView="Raw">
                            <ContentPresenter x:Name="Icon"
                                              Content="{TemplateBinding Content}"
                                              Foreground="{TemplateBinding Foreground}"
                                              FontFamily="{StaticResource SymbolThemeFontFamily}"
                                              FontSize="{TemplateBinding FontSize}"
                                              AutomationProperties.AccessibilityView="Raw" />
                        </Viewbox>

                        <um:Ripple Feedback="{ThemeResource NavigationViewButtonRippleFeedback}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MaterialNavigationViewIconTextButtonStyle"
           TargetType="Button">
        <Setter Property="Foreground" Value="{ThemeResource NavigationViewButtonForeground}" />
        <Setter Property="FontSize" Value="{ThemeResource MaterialNavigationViewButtonIconSymbolFontSize}" />

        <Setter Property="Background" Value="{ThemeResource NavigationViewButtonBackground}" />
        <Setter Property="CornerRadius" Value="{ThemeResource MaterialNavigationViewButtonCornerRadius}" />
        <Setter Property="BorderThickness" Value="0" />
        <!-- note: a computed margin will be injected by the NV implementation for "layout placement". -->
        <!-- and, because of that, the default margin will be applied through Padding on LayoutRoot.Margin -->
        <Setter Property="Margin" Value="0" />
        <Setter Property="Padding" Value="12,0" />
        <Setter Property="MinHeight" Value="{ThemeResource MaterialNavigationViewButtonWidth}" />
        <Setter Property="MinWidth" Value="{ThemeResource MaterialNavigationViewButtonWidth}" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Top" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid x:Name="LayoutRoot"
                          Height="{TemplateBinding MinHeight}"
                          Margin="{TemplateBinding Padding}"
                          Background="{TemplateBinding Background}"
                          HorizontalAlignment="Stretch"
                          CornerRadius="{TemplateBinding CornerRadius}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="{ThemeResource PaneToggleButtonHeight}" />
                        </Grid.RowDefinitions>

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="PointerOver">
                                    <VisualState.Setters>
                                        <Setter Target="LayoutRoot.Background" Value="{ThemeResource NavigationViewButtonBackgroundPointerOver}" />
                                        <Setter Target="Icon.Foreground" Value="{ThemeResource NavigationViewButtonForegroundPointerOver}" />
                                        <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource NavigationViewButtonForegroundPointerOver}" />
                                        <todo:Setter Target="Icon.(local:AnimatedIcon.State)"
                                                     Value="PointerOver" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <VisualState.Setters>
                                        <Setter Target="LayoutRoot.Background" Value="{ThemeResource NavigationViewButtonBackgroundPressed}" />
                                        <Setter Target="Icon.Foreground" Value="{ThemeResource NavigationViewButtonForegroundPressed}" />
                                        <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource NavigationViewButtonForegroundPressed}" />
                                        <todo:Setter Target="Icon.(local:AnimatedIcon.State)"
                                                     Value="Pressed" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <VisualState.Setters>
                                        <Setter Target="LayoutRoot.Background" Value="{ThemeResource NavigationViewButtonBackgroundDisabled}" />
                                        <Setter Target="Icon.Foreground" Value="{ThemeResource NavigationViewButtonForegroundDisabled}" />
                                        <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource NavigationViewButtonForegroundDisabled}" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <Border Height="{TemplateBinding MinHeight}"
                                Width="{TemplateBinding MinWidth}">
                            <todo:local_AnimatedIcon x:Name="Icon"
                                                     Height="{ThemeResource MaterialNavigationViewButtonIconLength}"
                                                     Width="{ThemeResource MaterialNavigationViewButtonIconLength}"
                                                     Foreground="{TemplateBinding Foreground}"
                                                     HorizontalAlignment="Center"
                                                     VerticalAlignment="Center"
                                                     AutomationProperties.AccessibilityView="Raw"
                                                     local:AnimatedIcon.State="Normal">
                                <animatedvisuals:AnimatedGlobalNavigationButtonVisualSource />
                                <local:AnimatedIcon.FallbackIconSource>
                                    <local:FontIconSource Glyph="&#xE700;"
                                                          FontSize="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FontSize}" />
                                </local:AnimatedIcon.FallbackIconSource>
                            </todo:local_AnimatedIcon>
                            <Viewbox x:Name="IconHost"
                                     Height="{ThemeResource MaterialNavigationViewButtonIconLength}"
                                     Width="{ThemeResource MaterialNavigationViewButtonIconLength}"
                                     HorizontalAlignment="Center"
                                     VerticalAlignment="Center"
                                     AutomationProperties.AccessibilityView="Raw">
                                <TextBlock x:Name="Icon"
                                           Text="&#xE700;"
                                           Foreground="{TemplateBinding Foreground}"
                                           FontFamily="{StaticResource SymbolThemeFontFamily}"
                                           FontSize="{TemplateBinding FontSize}"
                                           AutomationProperties.AccessibilityView="Raw" />
                            </Viewbox>
                        </Border>

                        <ContentPresenter x:Name="ContentPresenter"
                                          Grid.Column="1"
                                          Content="{TemplateBinding Content}"
                                          Height="{TemplateBinding MinHeight}"
                                          FontSize="{TemplateBinding FontSize}"
                                          VerticalContentAlignment="Center" />

                        <um:Ripple Grid.ColumnSpan="2"
                                   Feedback="{ThemeResource NavigationViewButtonRippleFeedback}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="NavigationViewPaneSearchButtonStyle"
           TargetType="Button">
        <Setter Property="FontFamily" Value="{ThemeResource SymbolThemeFontFamily}" />
        <Setter Property="BorderThickness" Value="{ThemeResource NavigationViewToggleBorderThickness}" />
        <Setter Property="Background" Value="{ThemeResource NavigationViewItemBackground}" />
        <Setter Property="Foreground" Value="{ThemeResource NavigationViewItemForeground}" />
        <Setter Property="Content" Value="&#xE11A;" />
        <Setter Property="MinHeight" Value="36" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="FocusVisualMargin" Value="-4,0" />
        <todo:contract7Present_Setter Property="CornerRadius"
                                      Value="{ThemeResource ControlCornerRadius}" />
    </Style>

    <Style x:Key="NavigationViewOverflowButtonStyleWhenPaneOnTop"
           TargetType="Button">
        <Setter Property="Background" Value="{ThemeResource NavigationViewItemBackground}" />
        <Setter Property="Foreground" Value="{ThemeResource TopNavigationViewItemForeground}" />
        <Setter Property="BorderBrush" Value="{ThemeResource NavigationViewItemBorderBrush}" />
        <Setter Property="BorderThickness" Value="{ThemeResource NavigationViewItemBorderThickness}" />
        <Setter Property="Height" Value="{ThemeResource TopNavigationViewOverflowButtonHeight}" />
        <Setter Property="Width" Value="{ThemeResource TopNavigationViewOverflowButtonWidth}" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="UseSystemFocusVisuals" Value="True" />
        <Setter Property="FocusVisualMargin" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid x:Name="RootGrid"
                          Height="{TemplateBinding Height}"
                          Width="{TemplateBinding Width}"
                          Background="{TemplateBinding Background}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="PointerOver">
                                    <VisualState.Setters>
                                        <Setter Target="RootGrid.Background" Value="{ThemeResource TopNavigationViewItemBackgroundPointerOver}" />
                                        <Setter Target="PointerRectangle.Fill" Value="{ThemeResource NavigationViewItemBackgroundPointerOver}" />
                                        <Setter Target="Icon.Foreground" Value="{ThemeResource TopNavigationViewItemForegroundPointerOver}" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <VisualState.Setters>
                                        <Setter Target="RootGrid.Background" Value="{ThemeResource TopNavigationViewItemBackgroundPressed}" />
                                        <Setter Target="PointerRectangle.Fill" Value="{ThemeResource NavigationViewItemBackgroundPressed}" />
                                        <Setter Target="Icon.Foreground" Value="{ThemeResource TopNavigationViewItemForegroundPressed}" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <VisualState.Setters>
                                        <Setter Target="RootGrid.Background" Value="{ThemeResource TopNavigationViewItemBackgroundDisabled}" />
                                        <Setter Target="PointerRectangle.Fill" Value="{ThemeResource NavigationViewItemBackgroundDisabled}" />
                                        <Setter Target="Icon.Foreground" Value="{ThemeResource TopNavigationViewItemForegroundDisabled}" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <Rectangle x:Name="PointerRectangle"
                                   Fill="Transparent"
                                   Visibility="Collapsed" />

                        <FontIcon x:Name="Icon"
                                  VerticalAlignment="Center"
                                  HorizontalAlignment="Center"
                                  AutomationProperties.AccessibilityView="Raw"
                                  FontFamily="{ThemeResource SymbolThemeFontFamily}"
                                  FontSize="16"
                                  Glyph="&#xE10C;"
                                  Foreground="{TemplateBinding Foreground}"
                                  IsHitTestVisible="False" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="NavigationViewOverflowButtonNoLabelStyleWhenPaneOnTop"
           TargetType="Button">
        <Setter Property="Background" Value="{ThemeResource NavigationViewItemBackground}" />
        <Setter Property="Foreground" Value="{ThemeResource TopNavigationViewItemForeground}" />
        <Setter Property="BorderBrush" Value="{ThemeResource NavigationViewItemBorderBrush}" />
        <Setter Property="BorderThickness" Value="{ThemeResource NavigationViewItemBorderThickness}" />
        <Setter Property="Height" Value="{ThemeResource TopNavigationViewOverflowButtonHeight}" />
        <Setter Property="Width" Value="{ThemeResource TopNavigationViewOverflowButtonWidth}" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="UseSystemFocusVisuals" Value="True" />
        <Setter Property="FocusVisualMargin" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid x:Name="RootGrid"
                          Height="{TemplateBinding Height}"
                          Width="{TemplateBinding Width}"
                          Background="{TemplateBinding Background}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="PointerOver">
                                    <VisualState.Setters>
                                        <Setter Target="RootGrid.Background" Value="{ThemeResource TopNavigationViewItemBackgroundPointerOver}" />
                                        <Setter Target="PointerRectangle.Fill" Value="{ThemeResource NavigationViewItemBackgroundPointerOver}" />
                                        <Setter Target="Icon.Foreground" Value="{ThemeResource TopNavigationViewItemForegroundPointerOver}" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <VisualState.Setters>
                                        <Setter Target="RootGrid.Background" Value="{ThemeResource TopNavigationViewItemBackgroundPressed}" />
                                        <Setter Target="PointerRectangle.Fill" Value="{ThemeResource NavigationViewItemBackgroundPressed}" />
                                        <Setter Target="Icon.Foreground" Value="{ThemeResource TopNavigationViewItemForegroundPressed}" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <VisualState.Setters>
                                        <Setter Target="RootGrid.Background" Value="{ThemeResource TopNavigationViewItemBackgroundDisabled}" />
                                        <Setter Target="PointerRectangle.Fill" Value="{ThemeResource NavigationViewItemBackgroundDisabled}" />
                                        <Setter Target="Icon.Foreground" Value="{ThemeResource TopNavigationViewItemForegroundDisabled}" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <Rectangle x:Name="PointerRectangle"
                                   Fill="Transparent" />

                        <FontIcon x:Name="Icon"
                                  VerticalAlignment="Center"
                                  HorizontalAlignment="Center"
                                  AutomationProperties.AccessibilityView="Raw"
                                  FontFamily="{ThemeResource SymbolThemeFontFamily}"
                                  FontSize="20"
                                  Glyph="&#xE10C;"
                                  Foreground="{TemplateBinding Foreground}"
                                  IsHitTestVisible="False" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MaterialNavigationViewItemStyle"
           TargetType="local:NavigationViewItem">
        <Setter Property="Foreground" Value="{ThemeResource NavigationViewItemForeground}" />
        <Setter Property="Background" Value="{ThemeResource NavigationViewItemBackground}" />
        <Setter Property="BorderBrush" Value="{ThemeResource NavigationViewItemBorderBrush}" />
        <Setter Property="BorderThickness" Value="{ThemeResource NavigationViewItemBorderThickness}" />
        <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}" />
        <Setter Property="Margin" Value="{ThemeResource NavigationViewItemMargin}" />
        <Setter Property="UseSystemFocusVisuals" Value="True" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="TabNavigation" Value="Once" />
        <todo:contract7Present_Setter Property="CornerRadius"
                                      Value="{ThemeResource ControlCornerRadius}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:NavigationViewItem">
                    <Grid x:Name="NVIRootGrid">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="ItemOnNavigationViewListPositionStates">
                                <VisualState x:Name="OnLeftNavigation">
                                    <VisualState.Setters>
                                        <Setter Target="NavigationViewItemPresenter.Style" Value="{StaticResource MUX_NavigationViewItemPresenterStyleWhenOnLeftPane}" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="OnTopNavigationPrimary">
                                    <VisualState.Setters>
                                        <Setter Target="NavigationViewItemPresenter.Margin" Value="{ThemeResource TopNavigationViewItemMargin}" />
                                        <Setter Target="NavigationViewItemPresenter.Style" Value="{StaticResource MUX_NavigationViewItemPresenterStyleWhenOnTopPane}" />
                                        <todo:contract7NotPresent_Setter Target="ChildrenFlyout.Placement"
                                                                         Value="Bottom" />
                                        <todo:contract7Present_Setter Target="ChildrenFlyout.Placement"
                                                                      Value="BottomEdgeAlignedLeft" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="OnTopNavigationOverflow">
                                    <VisualState.Setters>
                                        <Setter Target="NavigationViewItemPresenter.Style" Value="{StaticResource MUX_NavigationViewItemPresenterStyleWhenOnTopPaneOverflow}" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <primitives:NavigationViewItemPresenter x:Name="NavigationViewItemPresenter"
                                                                Icon="{TemplateBinding Icon}"
                                                                todo:InfoBadge="{TemplateBinding InfoBadge}"
                                                                ContentTransitions="{TemplateBinding ContentTransitions}"
                                                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                                                Padding="{TemplateBinding Padding}"
                                                                Foreground="{TemplateBinding Foreground}"
                                                                Background="{TemplateBinding Background}"
                                                                BorderBrush="{TemplateBinding BorderBrush}"
                                                                BorderThickness="{TemplateBinding BorderThickness}"
                                                                UseSystemFocusVisuals="{TemplateBinding UseSystemFocusVisuals}"
                                                                VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                                                HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                                                VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                                                Content="{TemplateBinding Content}"
                                                                primitiveContract7Present:CornerRadius="{TemplateBinding CornerRadius}"
                                                                IsTabStop="false"
                                                                Control.IsTemplateFocusTarget="True" />
                        <local:ItemsRepeater Grid.Row="1"
                                             Visibility="Collapsed"
                                             x:Name="NavigationViewItemMenuItemsHost">
                            <local:ItemsRepeater.Layout>
                                <local:StackLayout Orientation="Vertical" />
                            </local:ItemsRepeater.Layout>
                        </local:ItemsRepeater>
                        <FlyoutBase.AttachedFlyout>
                            <Flyout x:Name="ChildrenFlyout"
                                    contract7NotPresent:Placement="Right"
                                    contract7Present:Placement="RightEdgeAlignedTop">
                                <Flyout.FlyoutPresenterStyle>
                                    <Style TargetType="FlyoutPresenter">
                                        <Setter Property="Padding" Value="{ThemeResource NavigationViewItemChildrenMenuFlyoutPadding}" />
                                        <!-- Set negative top margin to make the flyout align exactly with the button -->
                                        <Setter Property="Margin" Value="0,-4,0,0" />
                                        <Setter Property="ScrollViewer.HorizontalScrollMode" Value="Auto" />
                                        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
                                        <Setter Property="ScrollViewer.VerticalScrollMode" Value="Auto" />
                                        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
                                        <Setter Property="ScrollViewer.ZoomMode" Value="Disabled" />
                                        <todo:contract7Present_Setter Property="CornerRadius"
                                                                      Value="{ThemeResource OverlayCornerRadius}" />
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="FlyoutPresenter">
                                                    <ScrollViewer x:Name="ScrollViewer"
                                                                  ZoomMode="{TemplateBinding ScrollViewer.ZoomMode}"
                                                                  HorizontalScrollMode="{TemplateBinding ScrollViewer.HorizontalScrollMode}"
                                                                  HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                                                                  VerticalScrollMode="{TemplateBinding ScrollViewer.VerticalScrollMode}"
                                                                  VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
                                                                  AutomationProperties.AccessibilityView="Raw">
                                                        <ContentPresenter x:Name="ContentPresenter"
                                                                          Background="{TemplateBinding Background}"
                                                                          BorderBrush="{TemplateBinding BorderBrush}"
                                                                          BorderThickness="{TemplateBinding BorderThickness}"
                                                                          Content="{TemplateBinding Content}"
                                                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                                                          ContentTransitions="{TemplateBinding ContentTransitions}"
                                                                          Padding="{TemplateBinding Padding}"
                                                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                          contract7Present:CornerRadius="{TemplateBinding CornerRadius}"
                                                                          contract7NotPresent:CornerRadius="{ThemeResource OverlayCornerRadius}" />
                                                    </ScrollViewer>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </Flyout.FlyoutPresenterStyle>
                                <Grid x:Name="FlyoutRootGrid">
                                    <Grid x:Name="FlyoutContentGrid" />
                                </Grid>
                            </Flyout>
                        </FlyoutBase.AttachedFlyout>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MUX_NavigationViewSettingsItemStyleWhenOnTopPane"
           TargetType="local:NavigationViewItem">
        <Setter Property="Foreground" Value="{ThemeResource NavigationViewItemForeground}" />
        <Setter Property="Background" Value="{ThemeResource NavigationViewItemBackground}" />
        <Setter Property="BorderBrush" Value="{ThemeResource NavigationViewItemBorderBrush}" />
        <Setter Property="BorderThickness" Value="{ThemeResource NavigationViewItemBorderThickness}" />
        <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}" />
        <Setter Property="UseSystemFocusVisuals" Value="True" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <todo:contract7Present_Setter Property="CornerRadius"
                                      Value="{ThemeResource ControlCornerRadius}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:NavigationViewItem">
                    <Grid x:Name="LayoutRoot"
                          Background="{TemplateBinding Background}"
                          contract7Present:CornerRadius="{TemplateBinding CornerRadius}"
                          contract7NotPresent:CornerRadius="{ThemeResource ControlCornerRadius}"
                          Margin="{ThemeResource NavigationViewItemButtonMargin}"
                          Height="{ThemeResource TopNavigationViewSettingsButtonHeight}"
                          Width="{ThemeResource TopNavigationViewSettingsButtonHeight}"
                          Control.IsTemplateFocusTarget="True">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="PointerStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="PointerOver">
                                    <VisualState.Setters>
                                        <Setter Target="LayoutRoot.Background" Value="{ThemeResource TopNavigationViewItemBackgroundPointerOver}" />
                                        <Setter Target="PointerRectangle.Fill" Value="{ThemeResource NavigationViewItemBackgroundPointerOver}" />
                                        <Setter Target="Icon.Foreground" Value="{ThemeResource TopNavigationViewItemForegroundPointerOver}" />
                                        <todo:Setter Target="Icon.(local:AnimatedIcon.State)"
                                                     Value="PointerOver" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <VisualState.Setters>
                                        <Setter Target="LayoutRoot.Background" Value="{ThemeResource TopNavigationViewItemBackgroundPressed}" />
                                        <Setter Target="PointerRectangle.Fill" Value="{ThemeResource NavigationViewItemBackgroundPressed}" />
                                        <Setter Target="Icon.Foreground" Value="{ThemeResource TopNavigationViewItemForegroundPressed}" />
                                        <todo:Setter Target="Icon.(local:AnimatedIcon.State)"
                                                     Value="Pressed" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="Selected">
                                    <VisualState.Setters>
                                        <Setter Target="LayoutRoot.Background" Value="{ThemeResource TopNavigationViewItemBackgroundSelected}" />
                                        <Setter Target="PointerRectangle.Fill" Value="{ThemeResource NavigationViewItemBackgroundSelected}" />
                                        <Setter Target="Icon.Foreground" Value="{ThemeResource TopNavigationViewItemForegroundSelected}" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="PointerOverSelected">
                                    <VisualState.Setters>
                                        <Setter Target="LayoutRoot.Background" Value="{ThemeResource TopNavigationViewItemBackgroundSelectedPointerOver}" />
                                        <Setter Target="PointerRectangle.Fill" Value="{ThemeResource NavigationViewItemBackgroundSelectedPointerOver}" />
                                        <Setter Target="Icon.Foreground" Value="{ThemeResource TopNavigationViewItemForegroundPointerOver}" />
                                        <todo:Setter Target="Icon.(local:AnimatedIcon.State)"
                                                     Value="PointerOver" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="PressedSelected">
                                    <VisualState.Setters>
                                        <Setter Target="LayoutRoot.Background" Value="{ThemeResource TopNavigationViewItemBackgroundSelectedPressed}" />
                                        <Setter Target="PointerRectangle.Fill" Value="{ThemeResource NavigationViewItemBackgroundSelectedPressed}" />
                                        <Setter Target="Icon.Foreground" Value="{ThemeResource TopNavigationViewItemForegroundPressed}" />
                                        <todo:Setter Target="Icon.(local:AnimatedIcon.State)"
                                                     Value="Pressed" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="DisabledStates">
                                <VisualState x:Name="Enabled" />
                                <VisualState x:Name="Disabled">
                                    <VisualState.Setters>
                                        <Setter Target="LayoutRoot.Background" Value="{ThemeResource TopNavigationViewItemBackgroundDisabled}" />
                                        <Setter Target="PointerRectangle.Fill" Value="{ThemeResource NavigationViewItemBackgroundDisabled}" />
                                        <Setter Target="Icon.Foreground" Value="{ThemeResource TopNavigationViewItemForegroundDisabled}" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle x:Name="PointerRectangle"
                                   Fill="Transparent" />
                        <Grid x:Name="ContentGrid">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition x:Name="IconRow"
                                               Height="Auto" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <Viewbox x:Name="IconBox"
                                     Grid.Row="1"
                                     Grid.Column="1"
                                     Height="16"
                                     Margin="0"
                                     VerticalAlignment="Center"
                                     HorizontalAlignment="Center">
                                <ContentPresenter x:Name="Icon"
                                                  Content="{TemplateBinding Icon}"
                                                  Foreground="{TemplateBinding Foreground}"
                                                  todo:local_AnimatedIcon.State="Normal" />

                            </Viewbox>
                            <todo:ContentPresenter x:Name="InfoBadgePresenter"
                                                   Grid.Column="2"
                                                   VerticalAlignment="Center"
                                                   Content="{TemplateBinding InfoBadge}" />
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="primitives:NavigationViewItemPresenter" />
    <Style TargetType="primitives:NavigationViewItemPresenter"
           x:Key="MUX_NavigationViewItemPresenterStyleWhenOnLeftPane">
        <Setter Property="Foreground" Value="{ThemeResource NavigationViewItemForeground}" />
        <Setter Property="Background" Value="{ThemeResource NavigationViewItemBackground}" />
        <Setter Property="BorderBrush" Value="{ThemeResource NavigationViewItemBorderBrush}" />
        <Setter Property="BorderThickness" Value="{ThemeResource NavigationViewItemBorderThickness}" />
        <Setter Property="UseSystemFocusVisuals" Value="True" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <todo:contract7Present_Setter Property="CornerRadius"
                                      Value="{ThemeResource OverlayCornerRadius}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="primitives:NavigationViewItemPresenter">
                    <Grid x:Name="LayoutRoot"
                          CornerRadius="{ThemeResource MaterialNavigationViewItemCornerRadius}"
                          Background="{TemplateBinding Background}"
                          Height="{ThemeResource MaterialNavigationItemHeight}"
                          Margin="{ThemeResource MaterialNavigationItemLeftMargin}"
                          Control.IsTemplateFocusTarget="True">
                        <Grid.Resources>
                            <contract7NotPresent:Storyboard x:Name="ExpandCollapseRotateExpandedStoryboard">
                                <DoubleAnimation Storyboard.TargetName="ExpandCollapseChevronRotateTransform"
                                                 Storyboard.TargetProperty="Angle"
                                                 From="0.0"
                                                 To="180.0"
                                                 Duration="0:0:0.1" />
                            </contract7NotPresent:Storyboard>
                            <contract7NotPresent:Storyboard x:Name="ExpandCollapseRotateCollapsedStoryboard">
                                <DoubleAnimation Storyboard.TargetName="ExpandCollapseChevronRotateTransform"
                                                 Storyboard.TargetProperty="Angle"
                                                 From="180.0"
                                                 To="0.0"
                                                 Duration="0:0:0.1" />
                            </contract7NotPresent:Storyboard>
                        </Grid.Resources>

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="PointerStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="PointerOver">
                                    <VisualState.Setters>
                                        <Setter Target="PresenterContentRootGrid.Background" Value="{ThemeResource NavigationViewItemBackgroundPointerOver}" />

                                        <todo:Setter Target="LayoutRoot.Background"
                                                     Value="{ThemeResource NavigationViewItemBackgroundPointerOver}" />
                                        <todo:Setter Target="Icon.Foreground"
                                                     Value="{ThemeResource NavigationViewItemForegroundPointerOver}" />
                                        <todo:Setter Target="ContentPresenter.Foreground"
                                                     Value="{ThemeResource NavigationViewItemForegroundPointerOver}" />
                                        <todo:Setter Target="Icon.(local:AnimatedIcon.State)"
                                                     Value="PointerOver" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <VisualState.Setters>
                                        <Setter Target="PresenterContentRootGrid.Background" Value="{ThemeResource NavigationViewItemBackgroundPressed}" />

                                        <todo:Setter Target="LayoutRoot.Background"
                                                     Value="{ThemeResource NavigationViewItemBackgroundPressed}" />
                                        <todo:Setter Target="Icon.Foreground"
                                                     Value="{ThemeResource NavigationViewItemForegroundPressed}" />
                                        <todo:Setter Target="ContentPresenter.Foreground"
                                                     Value="{ThemeResource NavigationViewItemForegroundPressed}" />
                                        <todo:Setter Target="Icon.(local:AnimatedIcon.State)"
                                                     Value="Pressed" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="Selected">
                                    <VisualState.Setters>
                                        <Setter Target="SelectionFill.Background" Value="{ThemeResource NavigationViewItemBackgroundSelected}" />
                                        <todo:Setter Target="LayoutRoot.Background"
                                                     Value="{ThemeResource NavigationViewItemBackgroundSelected}" />
                                        <todo:Setter Target="Icon.Foreground"
                                                     Value="{ThemeResource NavigationViewItemForegroundSelected}" />
                                        <todo:Setter Target="ContentPresenter.Foreground"
                                                     Value="{ThemeResource NavigationViewItemForegroundSelected}" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="PointerOverSelected">
                                    <VisualState.Setters>
                                        <Setter Target="PresenterContentRootGrid.Background" Value="{ThemeResource NavigationViewItemBackgroundPointerOver}" />
                                        <Setter Target="SelectionFill.Background" Value="{ThemeResource NavigationViewItemBackgroundSelected}" />

                                        <todo:Setter Target="LayoutRoot.Background"
                                                     Value="{ThemeResource NavigationViewItemBackgroundSelectedPointerOver}" />
                                        <todo:Setter Target="Icon.Foreground"
                                                     Value="{ThemeResource NavigationViewItemForegroundSelectedPointerOver}" />
                                        <todo:Setter Target="ContentPresenter.Foreground"
                                                     Value="{ThemeResource NavigationViewItemForegroundSelectedPointerOver}" />
                                        <todo:Setter Target="Icon.(local:AnimatedIcon.State)"
                                                     Value="PointerOver" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="PressedSelected">
                                    <VisualState.Setters>
                                        <Setter Target="PresenterContentRootGrid.Background" Value="{ThemeResource NavigationViewItemBackgroundPressed}" />
                                        <Setter Target="SelectionFill.Background" Value="{ThemeResource NavigationViewItemBackgroundSelected}" />

                                        <todo:Setter Target="LayoutRoot.Background"
                                                     Value="{ThemeResource NavigationViewItemBackgroundSelectedPressed}" />
                                        <todo:Setter Target="Icon.Foreground"
                                                     Value="{ThemeResource NavigationViewItemForegroundSelectedPressed}" />
                                        <todo:Setter Target="ContentPresenter.Foreground"
                                                     Value="{ThemeResource NavigationViewItemForegroundSelectedPressed}" />
                                        <todo:Setter Target="Icon.(local:AnimatedIcon.State)"
                                                     Value="Pressed" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="DisabledStates">
                                <VisualState x:Name="Enabled" />
                                <VisualState x:Name="Disabled">
                                    <VisualState.Setters>
                                        <Setter Target="LayoutRoot.Background" Value="{ThemeResource NavigationViewItemBackgroundDisabled}" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="IconStates">
                                <VisualState x:Name="IconVisible" />
                                <VisualState x:Name="IconCollapsed">
                                    <VisualState.Setters>
                                        <Setter Target="IconColumn.Width" Value="0" />
                                        <Setter Target="IconBox.Visibility" Value="Collapsed" />
                                        <Setter Target="ContentPresenter.Margin" Value="{ThemeResource MaterialNavigationItemContentMarginWithoutIcon}" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                            <todo:VisualStateGroup x:Name="InfoBadgeStates">
                                <VisualState x:Name="InfoBadgeVisible" />
                                <VisualState x:Name="InfoBadgeCollapsed">
                                    <VisualState.Setters>
                                        <Setter Target="InfoBadgePresenter.Visibility" Value="Collapsed" />
                                    </VisualState.Setters>
                                </VisualState>
                            </todo:VisualStateGroup>
                            <todo:VisualStateGroup x:Name="ChevronStates">
                                <VisualState x:Name="ChevronHidden" />
                                <VisualState x:Name="ChevronVisibleOpen">
                                    <VisualState.Setters>
                                        <Setter Target="ExpandCollapseChevron.Visibility" Value="Visible" />
                                        <Setter Target="ExpandCollapseChevronIcon.Visibility" Value="Visible" />
                                        <todo:contract7NotPresent_Setter Target="ExpandCollapseChevronRotateTransform.Angle"
                                                                         Value="180" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="ChevronVisibleClosed">
                                    <VisualState.Setters>
                                        <Setter Target="ExpandCollapseChevron.Visibility" Value="Visible" />
                                        <Setter Target="ExpandCollapseChevronIcon.Visibility" Value="Visible" />
                                        <todo:contract7NotPresent_Setter Target="ExpandCollapseChevronRotateTransform.Angle"
                                                                         Value="0" />
                                    </VisualState.Setters>
                                </VisualState>
                            </todo:VisualStateGroup>
                            <todo:VisualStateGroup x:Name="PointerChevronStates">
                                <VisualState x:Name="NormalChevronHidden" />
                                <VisualState x:Name="NormalChevronVisibleOpen">
                                    <VisualState.Setters>
                                        <Setter Target="ExpandCollapseChevron.(local:AnimatedIcon.State)" Value="NormalOn" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="NormalChevronVisibleClosed">
                                    <VisualState.Setters>
                                        <Setter Target="ExpandCollapseChevron.(local:AnimatedIcon.State)" Value="NormalOff" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="PointerOverChevronHidden">
                                    <VisualState.Setters>
                                        <Setter Target="ExpandCollapseChevron.(local:AnimatedIcon.State)" Value="PointerOverOff" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="PointerOverChevronVisibleOpen">
                                    <VisualState.Setters>
                                        <Setter Target="ExpandCollapseChevron.(local:AnimatedIcon.State)" Value="PointerOverOn" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="PointerOverChevronVisibleClosed">
                                    <VisualState.Setters>
                                        <Setter Target="ExpandCollapseChevron.(local:AnimatedIcon.State)" Value="PointerOverOff" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="PressedChevronHidden">
                                    <VisualState.Setters>
                                        <Setter Target="ExpandCollapseChevron.(local:AnimatedIcon.State)" Value="PressedOff" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="PressedChevronVisibleOpen">
                                    <VisualState.Setters>
                                        <Setter Target="ExpandCollapseChevron.(local:AnimatedIcon.State)" Value="PressedOn" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="PressedChevronVisibleClosed">
                                    <VisualState.Setters>
                                        <Setter Target="ExpandCollapseChevron.(local:AnimatedIcon.State)" Value="PressedOff" />
                                    </VisualState.Setters>
                                </VisualState>
                            </todo:VisualStateGroup>
                            <VisualStateGroup x:Name="PaneAndTopLevelItemStates">
                                <VisualState x:Name="NotClosedCompactAndTopLevelItem" />
                                <VisualState x:Name="ClosedCompactAndTopLevelItem">
                                    <!-- Rail (Compact; left vertical) or Bar (Top; top horizontal) mode -->
                                    <VisualState.Setters>
                                        <Setter Target="ContentPresenter.Visibility" Value="Collapsed" />
                                        <todo:Setter Target="InfoBadgePresenter.(Grid.Column)"
                                                     Value="0" />
                                        <todo:Setter Target="InfoBadgePresenter.(Grid.ColumnSpan)"
                                                     Value="4" />
                                        <todo:Setter Target="InfoBadgePresenter.VerticalAlignment"
                                                     Value="Top" />
                                        <todo:Setter Target="InfoBadgePresenter.HorizontalAlignment"
                                                     Value="Right" />
                                        <todo:Setter Target="InfoBadgePresenter.Margin"
                                                     Value="0,2,2,0" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <!-- note: PresenterContentRootGrid has a scaling margin-left (other 3 are preserved) based on depth (See: NVI::UpdateItemIndentation) -->
                        <Grid x:Name="PresenterContentRootGrid"
                              CornerRadius="{ThemeResource MaterialNavigationViewItemCornerRadiusLeftOnly}">
                            <!--
                                Pointer relative visual are composed of 3 stacking layer: // material dont have of composite state brush...
                                - PresenterContentRootGrid.Background: (Pressed) ?? (PointerOver) ?? (*null*) // via VisualState
                                - SelectionFill.Background: (Selected) ?? (*null*) // via VisualState
                                - Ripple: (OnClick) // via Ripple
                            -->
                            <Border x:Name="SelectionFill" />

                            <!-- Wrap SelectionIndicator in a grid so that its offset is 0,0 - this enables the offset animation. -->
                            <todo:Grid HorizontalAlignment="Left"
                                       VerticalAlignment="Center">
                                <!--
                                    this SelectionIndicator is what "moves across" items
                                    the effect is composed of two parts: old_selection slide-away (toward selection) + new_selection slide-in (from previous)
                                    note: this can only move within the boundary of this NVIPresenter, it gets clipped outside of NVIP.
                                    attempting to use this for a full item doesnt work well (barely noticiable), it should be used with
                                    a small rectangle that can noticiably move within the NVIP. because of that, this is not used.
                                -->
                                <Rectangle x:Name="SelectionIndicator"
                                           Width="{ThemeResource NavigationViewSelectionIndicatorWidth}"
                                           Height="{ThemeResource NavigationViewSelectionIndicatorHeight}"
                                           Fill="{ThemeResource NavigationViewSelectionIndicatorForeground}"
                                           Opacity="0.0"
                                           contract7Present:RadiusX="{ThemeResource NavigationViewSelectionIndicatorRadius}"
                                           contract7Present:RadiusY="{ThemeResource NavigationViewSelectionIndicatorRadius}" />
                            </todo:Grid>

                            <Grid x:Name="ContentGrid"
                                  Padding="16">
                                <Grid.ColumnDefinitions>
                                    <!-- 0: Icon, 1: Content, 2: InfoBadge, 3: Chevron -->
                                    <ColumnDefinition x:Name="IconColumn"
                                                      Width="24" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>

                                <Border Height="{ThemeResource MaterialNavigationItemIconLength}"
                                        Width="{ThemeResource MaterialNavigationItemIconLength}"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center">
                                    <Viewbox x:Name="IconBox"
                                             Height="{ThemeResource NavigationViewItemOnLeftIconBoxHeight}"
                                             HorizontalAlignment="Center">
                                        <ContentPresenter x:Name="Icon"
                                                          Content="{TemplateBinding Icon}"
                                                          Foreground="{TemplateBinding Foreground}"
                                                          todo:local_AnimatedIcon.State="Normal" />
                                    </Viewbox>
                                </Border>

                                <ContentPresenter x:Name="ContentPresenter"
                                                  Grid.Column="1"
                                                  Margin="{ThemeResource MaterialNavigationItemContentMargin}"
                                                  ContentTransitions="{TemplateBinding ContentTransitions}"
                                                  ContentTemplate="{TemplateBinding ContentTemplate}"
                                                  Content="{TemplateBinding Content}"
                                                  Foreground="{TemplateBinding Foreground}"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                                  Padding="{TemplateBinding Padding}"
                                                  AutomationProperties.AccessibilityView="Raw" />

                                <todo:Grid x:Name="ExpandCollapseChevron"
                                           Grid.Column="3"
                                           Visibility="Collapsed"
                                           HorizontalAlignment="Right"
                                           Width="40"
                                           Margin="{ThemeResource NavigationViewItemExpandChevronMargin}"
                                           Background="Transparent"
                                           todo:local_AnimatedIcon.State="NormalOff">
                                    <todo:local_AnimatedIcon Width="12"
                                                             Height="12"
                                                             RenderTransformOrigin="0.5, 0.5"
                                                             x:Name="ExpandCollapseChevronIcon"
                                                             HorizontalAlignment="Center"
                                                             VerticalAlignment="Center"
                                                             Visibility="Collapsed"
                                                             AutomationProperties.AccessibilityView="Raw"
                                                             x:DeferLoadStrategy="Lazy">
                                        <animatedvisuals:AnimatedChevronUpDownSmallVisualSource />
                                        <local:AnimatedIcon.FallbackIconSource>
                                            <local:FontIconSource Foreground="{ThemeResource NavigationViewItemForeground}"
                                                                  FontSize="{ThemeResource NavigationViewItemExpandedGlyphFontSize}"
                                                                  Glyph="{ThemeResource NavigationViewItemExpandedGlyph}"
                                                                  FontFamily="{StaticResource SymbolThemeFontFamily}" />
                                        </local:AnimatedIcon.FallbackIconSource>
                                        <local:AnimatedIcon.RenderTransform>
                                            <contract7NotPresent:RotateTransform x:Name="ExpandCollapseChevronRotateTransform"
                                                                                 Angle="0" />
                                        </local:AnimatedIcon.RenderTransform>
                                    </todo:local_AnimatedIcon>
                                </todo:Grid>

                                <todo:ContentPresenter x:Name="InfoBadgePresenter"
                                                       Grid.Column="2"
                                                       VerticalAlignment="Center"
                                                       Content="{TemplateBinding InfoBadge}" />

                            </Grid>

                            <um:Ripple Feedback="{ThemeResource NavigationViewItemRippleFeedback}" />
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="primitives:NavigationViewItemPresenter"
           x:Key="MUX_NavigationViewItemPresenterStyleWhenOnTopPane">
        <Setter Property="Foreground" Value="{ThemeResource NavigationViewItemForeground}" />
        <Setter Property="Background" Value="{ThemeResource NavigationViewItemBackground}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="primitives:NavigationViewItemPresenter">
                    <Grid x:Name="LayoutRoot"
                          Background="{TemplateBinding Background}"
                          Control.IsTemplateFocusTarget="True"
                          contract7Present:CornerRadius="{TemplateBinding CornerRadius}"
                          contract7NotPresent:CornerRadius="{ThemeResource ControlCornerRadius}">
                        <Grid.Resources>
                            <contract7NotPresent:Storyboard x:Name="ExpandCollapseRotateExpandedStoryboard">
                                <DoubleAnimation Storyboard.TargetName="ExpandCollapseChevronRotateTransform"
                                                 Storyboard.TargetProperty="Angle"
                                                 From="0.0"
                                                 To="180.0"
                                                 Duration="0:0:0.1" />
                            </contract7NotPresent:Storyboard>
                            <contract7NotPresent:Storyboard x:Name="ExpandCollapseRotateCollapsedStoryboard">
                                <DoubleAnimation Storyboard.TargetName="ExpandCollapseChevronRotateTransform"
                                                 Storyboard.TargetProperty="Angle"
                                                 From="180.0"
                                                 To="0.0"
                                                 Duration="0:0:0.1" />
                            </contract7NotPresent:Storyboard>
                        </Grid.Resources>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="PointerStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="PointerOver">
                                    <VisualState.Setters>
                                        <Setter Target="LayoutRoot.Background" Value="{ThemeResource TopNavigationViewItemBackgroundPointerOver}" />
                                        <Setter Target="PointerRectangle.Fill" Value="{ThemeResource NavigationViewItemBackgroundPointerOver}" />
                                        <Setter Target="Icon.Foreground" Value="{ThemeResource TopNavigationViewItemForegroundPointerOver}" />
                                        <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource TopNavigationViewItemForegroundPointerOver}" />
                                        <todo:Setter Target="Icon.(local:AnimatedIcon.State)"
                                                     Value="PointerOver" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <VisualState.Setters>
                                        <Setter Target="LayoutRoot.Background" Value="{ThemeResource TopNavigationViewItemBackgroundPressed}" />
                                        <Setter Target="PointerRectangle.Fill" Value="{ThemeResource NavigationViewItemBackgroundPressed}" />
                                        <Setter Target="Icon.Foreground" Value="{ThemeResource TopNavigationViewItemForegroundPressed}" />
                                        <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource TopNavigationViewItemForegroundPressed}" />
                                        <todo:Setter Target="Icon.(local:AnimatedIcon.State)"
                                                     Value="Pressed" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="Selected">
                                    <VisualState.Setters>
                                        <Setter Target="LayoutRoot.Background" Value="{ThemeResource TopNavigationViewItemBackgroundSelected}" />
                                        <Setter Target="PointerRectangle.Fill" Value="{ThemeResource NavigationViewItemBackgroundSelected}" />
                                        <Setter Target="Icon.Foreground" Value="{ThemeResource TopNavigationViewItemForegroundSelected}" />
                                        <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource TopNavigationViewItemForegroundSelected}" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="PointerOverSelected">
                                    <VisualState.Setters>
                                        <Setter Target="LayoutRoot.Background" Value="{ThemeResource TopNavigationViewItemBackgroundSelectedPointerOver}" />
                                        <Setter Target="PointerRectangle.Fill" Value="{ThemeResource NavigationViewItemBackgroundSelectedPointerOver}" />
                                        <Setter Target="Icon.Foreground" Value="{ThemeResource TopNavigationViewItemForegroundSelectedPointerOver}" />
                                        <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource TopNavigationViewItemForegroundSelectedPointerOver}" />
                                        <todo:Setter Target="Icon.(local:AnimatedIcon.State)"
                                                     Value="PointerOver" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="PressedSelected">
                                    <VisualState.Setters>
                                        <Setter Target="LayoutRoot.Background" Value="{ThemeResource TopNavigationViewItemBackgroundSelectedPressed}" />
                                        <Setter Target="PointerRectangle.Fill" Value="{ThemeResource NavigationViewItemBackgroundSelectedPressed}" />
                                        <Setter Target="Icon.Foreground" Value="{ThemeResource TopNavigationViewItemForegroundSelectedPressed}" />
                                        <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource TopNavigationViewItemForegroundSelectedPressed}" />
                                        <todo:Setter Target="Icon.(local:AnimatedIcon.State)"
                                                     Value="Pressed" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="DisabledStates">
                                <VisualState x:Name="Enabled" />
                                <VisualState x:Name="Disabled">
                                    <VisualState.Setters>
                                        <Setter Target="Icon.Foreground" Value="{ThemeResource TopNavigationViewItemForegroundDisabled}" />
                                        <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource TopNavigationViewItemForegroundDisabled}" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="NavigationViewIconPositionStates">
                                <VisualState x:Name="IconOnLeft" />
                                <VisualState x:Name="IconOnly">
                                    <VisualState.Setters>
                                        <Setter Target="LayoutRoot.Width" Value="36" />
                                        <Setter Target="LayoutRoot.Height" Value="36" />
                                        <Setter Target="LayoutRoot.Margin" Value="2" />
                                        <Setter Target="IconBox.Margin" Value="10,0" />
                                        <Setter Target="ContentPresenter.Visibility" Value="Collapsed" />
                                        <Setter Target="SelectionIndicatorGrid.Margin" Value="0" />
                                        <Setter Target="ExpandCollapseChevron.Margin" Value="{ThemeResource TopNavigationViewItemIconOnlyExpandChevronMargin}" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="ContentOnly">
                                    <VisualState.Setters>
                                        <Setter Target="IconBox.Visibility" Value="Collapsed" />
                                        <Setter Target="ContentPresenter.Margin" Value="{ThemeResource TopNavigationViewItemContentOnlyContentPresenterMargin}" />
                                        <Setter Target="SelectionIndicatorGrid.Margin" Value="12,0,12,4" />
                                        <Setter Target="ExpandCollapseChevron.Margin" Value="{ThemeResource TopNavigationViewItemContentOnlyExpandChevronMargin}" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="InfoBadgeStates">
                                <VisualState x:Name="InfoBadgeVisible" />
                                <VisualState x:Name="InfoBadgeCollapsed">
                                    <VisualState.Setters>
                                        <todo:Setter Target="InfoBadgePresenter.Visibility"
                                                     Value="Collapsed" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ChevronStates">
                                <VisualState x:Name="ChevronHidden" />
                                <VisualState x:Name="ChevronVisibleOpen">
                                    <VisualState.Setters>
                                        <Setter Target="ExpandCollapseChevron.Visibility" Value="Visible" />
                                        <todo:contract7NotPresent_Setter Target="ExpandCollapseChevronRotateTransform.Angle"
                                                                         Value="180" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="ChevronVisibleClosed">
                                    <VisualState.Setters>
                                        <Setter Target="ExpandCollapseChevron.Visibility" Value="Visible" />
                                        <todo:contract7NotPresent_Setter Target="ExpandCollapseChevronRotateTransform.Angle"
                                                                         Value="0" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                            <todo:VisualStateGroup x:Name="PointerChevronStates">
                                <VisualState x:Name="NormalChevronHidden" />
                                <VisualState x:Name="NormalChevronVisibleOpen">
                                    <VisualState.Setters>
                                        <Setter Target="ExpandCollapseChevronIcon.(local:AnimatedIcon.State)" Value="NormalOn" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="NormalChevronVisibleClosed">
                                    <VisualState.Setters>
                                        <Setter Target="ExpandCollapseChevronIcon.(local:AnimatedIcon.State)" Value="NormalOff" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="PointerOverChevronHidden">
                                    <VisualState.Setters>
                                        <Setter Target="ExpandCollapseChevronIcon.(local:AnimatedIcon.State)" Value="PointerOverOff" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="PointerOverChevronVisibleOpen">
                                    <VisualState.Setters>
                                        <Setter Target="ExpandCollapseChevronIcon.(local:AnimatedIcon.State)" Value="PointerOverOn" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="PointerOverChevronVisibleClosed">
                                    <VisualState.Setters>
                                        <Setter Target="ExpandCollapseChevronIcon.(local:AnimatedIcon.State)" Value="PointerOverOff" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="PressedChevronHidden">
                                    <VisualState.Setters>
                                        <Setter Target="ExpandCollapseChevronIcon.(local:AnimatedIcon.State)" Value="PressedOff" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="PressedChevronVisibleOpen">
                                    <VisualState.Setters>
                                        <Setter Target="ExpandCollapseChevronIcon.(local:AnimatedIcon.State)" Value="PressedOn" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="PressedChevronVisibleClosed">
                                    <VisualState.Setters>
                                        <Setter Target="ExpandCollapseChevronIcon.(local:AnimatedIcon.State)" Value="PressedOff" />
                                    </VisualState.Setters>
                                </VisualState>
                            </todo:VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle x:Name="PointerRectangle"
                                   Fill="Transparent"
                                   Visibility="Collapsed" />
                        <Grid x:Name="ContentGrid">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Viewbox x:Name="IconBox"
                                     Height="16"
                                     Width="16"
                                     Margin="12,0,0,0"
                                     VerticalAlignment="Center"
                                     HorizontalAlignment="Center">
                                <ContentPresenter x:Name="Icon"
                                                  Content="{TemplateBinding Icon}"
                                                  Foreground="{TemplateBinding Foreground}"
                                                  todo:local_AnimatedIcon.State="Normal" />

                            </Viewbox>
                            <ContentPresenter x:Name="ContentPresenter"
                                              Grid.Column="1"
                                              Margin="{ThemeResource TopNavigationViewItemContentPresenterMargin}"
                                              TextWrapping="NoWrap"
                                              Foreground="{TemplateBinding Foreground}"
                                              ContentTransitions="{TemplateBinding ContentTransitions}"
                                              ContentTemplate="{TemplateBinding ContentTemplate}"
                                              Content="{TemplateBinding Content}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                              VerticalAlignment="Center"
                                              AutomationProperties.AccessibilityView="Raw" />
                            <Grid x:Name="ExpandCollapseChevron"
                                  Grid.Column="2"
                                  Visibility="Collapsed"
                                  HorizontalAlignment="Right"
                                  Width="40"
                                  Margin="{ThemeResource TopNavigationViewItemExpandChevronMargin}"
                                  Background="Transparent">
                                <todo:local_AnimatedIcon Width="12"
                                                         Height="12"
                                                         RenderTransformOrigin="0.5, 0.5"
                                                         x:Name="ExpandCollapseChevronIcon"
                                                         HorizontalAlignment="Center"
                                                         VerticalAlignment="Center"
                                                         AutomationProperties.AccessibilityView="Raw"
                                                         local:AnimatedIcon.State="NormalOff">
                                    <animatedvisuals:AnimatedChevronUpDownSmallVisualSource />
                                    <local:AnimatedIcon.FallbackIconSource>
                                        <local:FontIconSource Foreground="{ThemeResource NavigationViewItemForeground}"
                                                              FontSize="{ThemeResource NavigationViewItemExpandedGlyphFontSize}"
                                                              Glyph="{ThemeResource NavigationViewItemExpandedGlyph}"
                                                              FontFamily="{StaticResource SymbolThemeFontFamily}" />
                                    </local:AnimatedIcon.FallbackIconSource>
                                    <local:AnimatedIcon.RenderTransform>
                                        <contract7NotPresent:RotateTransform x:Name="ExpandCollapseChevronRotateTransform"
                                                                             Angle="0" />
                                    </local:AnimatedIcon.RenderTransform>
                                </todo:local_AnimatedIcon>
                            </Grid>
                            <todo:ContentPresenter x:Name="InfoBadgePresenter"
                                                   Grid.Column="3"
                                                   VerticalAlignment="Center"
                                                   HorizontalAlignment="Center"
                                                   Margin="-16,0,2,13"
                                                   Content="{TemplateBinding InfoBadge}" />

                        </Grid>
                        <Grid x:Name="SelectionIndicatorGrid"
                              Margin="16,0,16,4"
                              VerticalAlignment="Bottom"
                              HorizontalAlignment="Center">
                            <Rectangle x:Name="SelectionIndicator"
                                       Height="3"
                                       Width="16"
                                       Fill="{ThemeResource NavigationViewSelectionIndicatorForeground}"
                                       Opacity="0"
                                       contract7Present:RadiusX="2"
                                       contract7Present:RadiusY="2"
                                       contract7NotPresent:RadiusX="2"
                                       contract7NotPresent:RadiusY="2" />
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="primitives:NavigationViewItemPresenter"
           x:Key="MUX_NavigationViewItemPresenterStyleWhenOnTopPaneOverflow">
        <Setter Property="Foreground" Value="{ThemeResource NavigationViewItemForeground}" />
        <Setter Property="Background" Value="{ThemeResource NavigationViewItemBackground}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="primitives:NavigationViewItemPresenter">
                    <Grid x:Name="LayoutRoot"
                          Height="36"
                          Background="{TemplateBinding Background}"
                          Control.IsTemplateFocusTarget="True">
                        <Grid.Resources>
                            <contract7NotPresent:Storyboard x:Name="ExpandCollapseRotateExpandedStoryboard">
                                <DoubleAnimation Storyboard.TargetName="ExpandCollapseChevronRotateTransform"
                                                 Storyboard.TargetProperty="Angle"
                                                 From="0.0"
                                                 To="180.0"
                                                 Duration="0:0:0.1" />
                            </contract7NotPresent:Storyboard>
                            <contract7NotPresent:Storyboard x:Name="ExpandCollapseRotateCollapsedStoryboard">
                                <DoubleAnimation Storyboard.TargetName="ExpandCollapseChevronRotateTransform"
                                                 Storyboard.TargetProperty="Angle"
                                                 From="180.0"
                                                 To="0.0"
                                                 Duration="0:0:0.1" />
                            </contract7NotPresent:Storyboard>
                        </Grid.Resources>

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="PointerStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="PointerOver">
                                    <VisualState.Setters>
                                        <Setter Target="LayoutRoot.Background" Value="{ThemeResource NavigationViewItemBackgroundPointerOver}" />
                                        <Setter Target="Icon.Foreground" Value="{ThemeResource NavigationViewItemForegroundPointerOver}" />
                                        <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource NavigationViewItemForegroundPointerOver}" />
                                        <todo:Setter Target="Icon.(local:AnimatedIcon.State)"
                                                     Value="PointerOver" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <VisualState.Setters>
                                        <Setter Target="LayoutRoot.Background" Value="{ThemeResource NavigationViewItemBackgroundPressed}" />
                                        <Setter Target="Icon.Foreground" Value="{ThemeResource NavigationViewItemForegroundPressed}" />
                                        <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource NavigationViewItemForegroundPressed}" />
                                        <todo:Setter Target="Icon.(local:AnimatedIcon.State)"
                                                     Value="Pressed" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="Selected">
                                    <VisualState.Setters>
                                        <Setter Target="LayoutRoot.Background" Value="{ThemeResource NavigationViewItemBackgroundSelected}" />
                                        <Setter Target="Icon.Foreground" Value="{ThemeResource NavigationViewItemForegroundSelected}" />
                                        <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource NavigationViewItemForegroundSelected}" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="PointerOverSelected">
                                    <VisualState.Setters>
                                        <Setter Target="LayoutRoot.Background" Value="{ThemeResource NavigationViewItemBackgroundSelectedPointerOver}" />
                                        <Setter Target="Icon.Foreground" Value="{ThemeResource NavigationViewItemForegroundPointerOver}" />
                                        <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource NavigationViewItemForegroundPointerOver}" />
                                        <todo:Setter Target="Icon.(local:AnimatedIcon.State)"
                                                     Value="PointerOver" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="PressedSelected">
                                    <VisualState.Setters>
                                        <Setter Target="LayoutRoot.Background" Value="{ThemeResource NavigationViewItemBackgroundSelectedPressed}" />
                                        <Setter Target="Icon.Foreground" Value="{ThemeResource NavigationViewItemForegroundPressed}" />
                                        <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource NavigationViewItemForegroundPressed}" />
                                        <todo:Setter Target="Icon.(local:AnimatedIcon.State)"
                                                     Value="Pressed" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="DisabledStates">
                                <VisualState x:Name="Enabled" />
                                <VisualState x:Name="Disabled">
                                    <VisualState.Setters>
                                        <Setter Target="Icon.Foreground" Value="{ThemeResource TopNavigationViewItemForegroundDisabled}" />
                                        <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource TopNavigationViewItemForegroundDisabled}" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="NavigationViewIconPositionStates">
                                <VisualState x:Name="IconOnLeft" />
                                <VisualState x:Name="IconOnly" />
                                <VisualState x:Name="ContentOnly">
                                    <VisualState.Setters>
                                        <Setter Target="IconBox.Visibility" Value="Collapsed" />
                                        <Setter Target="ContentPresenter.Margin" Value="{ThemeResource TopNavigationViewItemOnOverflowNoIconContentPresenterMargin}" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                            <todo:VisualStateGroup x:Name="InfoBadgeStates">
                                <VisualState x:Name="InfoBadgeVisible" />
                                <VisualState x:Name="InfoBadgeCollapsed">
                                    <VisualState.Setters>
                                        <Setter Target="InfoBadgePresenter.Visibility" Value="Collapsed" />
                                    </VisualState.Setters>
                                </VisualState>
                            </todo:VisualStateGroup>
                            <VisualStateGroup x:Name="ChevronStates">
                                <VisualState x:Name="ChevronHidden" />
                                <VisualState x:Name="ChevronVisibleOpen">
                                    <VisualState.Setters>
                                        <Setter Target="ExpandCollapseChevron.Visibility" Value="Visible" />
                                        <todo:contract7NotPresent_Setter Target="ExpandCollapseChevronRotateTransform.Angle"
                                                                         Value="180" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="ChevronVisibleClosed">
                                    <VisualState.Setters>
                                        <Setter Target="ExpandCollapseChevron.Visibility" Value="Visible" />
                                        <todo:contract7NotPresent_Setter Target="ExpandCollapseChevronRotateTransform.Angle"
                                                                         Value="0" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                            <todo:VisualStateGroup x:Name="PointerChevronStates">
                                <VisualState x:Name="NormalChevronHidden" />
                                <VisualState x:Name="NormalChevronVisibleOpen">
                                    <VisualState.Setters>
                                        <Setter Target="ExpandCollapseChevronIcon.(local:AnimatedIcon.State)" Value="NormalOn" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="NormalChevronVisibleClosed">
                                    <VisualState.Setters>
                                        <Setter Target="ExpandCollapseChevronIcon.(local:AnimatedIcon.State)" Value="NormalOff" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="PointerOverChevronHidden">
                                    <VisualState.Setters>
                                        <Setter Target="ExpandCollapseChevronIcon.(local:AnimatedIcon.State)" Value="PointerOverOff" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="PointerOverChevronVisibleOpen">
                                    <VisualState.Setters>
                                        <Setter Target="ExpandCollapseChevronIcon.(local:AnimatedIcon.State)" Value="PointerOverOn" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="PointerOverChevronVisibleClosed">
                                    <VisualState.Setters>
                                        <Setter Target="ExpandCollapseChevronIcon.(local:AnimatedIcon.State)" Value="PointerOverOff" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="PressedChevronHidden">
                                    <VisualState.Setters>
                                        <Setter Target="ExpandCollapseChevronIcon.(local:AnimatedIcon.State)" Value="PressedOff" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="PressedChevronVisibleOpen">
                                    <VisualState.Setters>
                                        <Setter Target="ExpandCollapseChevronIcon.(local:AnimatedIcon.State)" Value="PressedOn" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="PressedChevronVisibleClosed">
                                    <VisualState.Setters>
                                        <Setter Target="ExpandCollapseChevronIcon.(local:AnimatedIcon.State)" Value="PressedOff" />
                                    </VisualState.Setters>
                                </VisualState>
                            </todo:VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid x:Name="PresenterContentRootGrid">
                            <!-- Wrap SelectionIndicator in a grid so that its offset is 0,0 - this enables the offset animation. -->
                            <Grid Margin="4,0,0,0"
                                  HorizontalAlignment="Left"
                                  VerticalAlignment="Center">
                                <Rectangle x:Name="SelectionIndicator"
                                           Width="2"
                                           Height="24"
                                           Fill="{ThemeResource NavigationViewSelectionIndicatorForeground}"
                                           Opacity="0.0"
                                           contract7Present:RadiusX="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource TopLeftCornerRadiusDoubleValueConverter}}"
                                           contract7Present:RadiusY="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BottomRightCornerRadiusDoubleValueConverter}}"
                                           contract7NotPresent:RadiusX="{Binding Source={ThemeResource ControlCornerRadius}, Converter={StaticResource TopLeftCornerRadiusDoubleValueConverter}}"
                                           contract7NotPresent:RadiusY="{Binding Source={ThemeResource ControlCornerRadius}, Converter={StaticResource BottomRightCornerRadiusDoubleValueConverter}}" />
                            </Grid>
                            <Grid x:Name="ContentGrid"
                                  Margin="0,0,14,0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <Viewbox x:Name="IconBox"
                                         Height="16"
                                         Width="16"
                                         Margin="16,0,0,0"
                                         VerticalAlignment="Center"
                                         HorizontalAlignment="Center">
                                    <ContentPresenter x:Name="Icon"
                                                      Content="{TemplateBinding Icon}"
                                                      Foreground="{TemplateBinding Foreground}"
                                                      todo:local_AnimatedIcon.State="Normal" />

                                </Viewbox>
                                <ContentPresenter x:Name="ContentPresenter"
                                                  Grid.Column="1"
                                                  Margin="{ThemeResource TopNavigationViewItemOnOverflowContentPresenterMargin}"
                                                  Foreground="{TemplateBinding Foreground}"
                                                  TextWrapping="NoWrap"
                                                  ContentTransitions="{TemplateBinding ContentTransitions}"
                                                  ContentTemplate="{TemplateBinding ContentTemplate}"
                                                  Content="{TemplateBinding Content}"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                                  VerticalAlignment="Center"
                                                  AutomationProperties.AccessibilityView="Raw" />
                                <Grid x:Name="ExpandCollapseChevron"
                                      Grid.Column="3"
                                      Visibility="Collapsed"
                                      HorizontalAlignment="Right"
                                      Width="40"
                                      Margin="{ThemeResource TopNavigationViewItemOnOverflowExpandChevronMargin}"
                                      Padding="{ThemeResource TopNavigationViewItemOnOverflowExpandChevronPadding}"
                                      Background="Transparent">
                                    <todo:local_AnimatedIcon Width="12"
                                                             Height="12"
                                                             RenderTransformOrigin="0.5, 0.5"
                                                             x:Name="ExpandCollapseChevronIcon"
                                                             HorizontalAlignment="Center"
                                                             VerticalAlignment="Center"
                                                             AutomationProperties.AccessibilityView="Raw"
                                                             local:AnimatedIcon.State="NormalOff">
                                        <animatedvisuals:AnimatedChevronUpDownSmallVisualSource />
                                        <local:AnimatedIcon.FallbackIconSource>
                                            <local:FontIconSource Foreground="{ThemeResource NavigationViewItemForeground}"
                                                                  FontSize="{ThemeResource NavigationViewItemExpandedGlyphFontSize}"
                                                                  Glyph="{ThemeResource NavigationViewItemExpandedGlyph}"
                                                                  FontFamily="{StaticResource SymbolThemeFontFamily}" />
                                        </local:AnimatedIcon.FallbackIconSource>
                                        <local:AnimatedIcon.RenderTransform>
                                            <contract7NotPresent:RotateTransform x:Name="ExpandCollapseChevronRotateTransform"
                                                                                 Angle="0" />
                                        </local:AnimatedIcon.RenderTransform>
                                    </todo:local_AnimatedIcon>
                                </Grid>

                                <todo:ContentPresenter x:Name="InfoBadgePresenter"
                                                       Grid.Column="2"
                                                       VerticalAlignment="Center"
                                                       Content="{TemplateBinding InfoBadge}" />

                            </Grid>
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="local:NavigationViewItemHeader">
        <Setter Property="Foreground" Value="{ThemeResource NavigationViewItemHeaderForeground}" />
        <Setter Property="IsEnabled" Value="False" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="MinHeight" Value="0" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="AutomationProperties.AccessibilityView" Value="Raw" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:NavigationViewItemHeader">
                    <Grid x:Name="NavigationViewItemHeaderRootGrid">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="PaneStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition From="HeaderTextCollapsed"
                                                      To="HeaderTextVisible">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="InnerHeaderGrid"
                                                                           Storyboard.TargetProperty="Height">
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0"
                                                                        Value="40" />
                                            </ObjectAnimationUsingKeyFrames>

                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HeaderText"
                                                                           Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0"
                                                                        Value="Visible" />
                                            </ObjectAnimationUsingKeyFrames>

                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="HeaderText"
                                                                           Storyboard.TargetProperty="Opacity">
                                                <LinearDoubleKeyFrame KeyTime="0:0:0"
                                                                      Value="0.0" />
                                                <LinearDoubleKeyFrame KeyTime="0:0:0.1"
                                                                      Value="0.0" />
                                                <SplineDoubleKeyFrame KeyTime="0:0:0.2"
                                                                      KeySpline="0.0,0.35 0.15,1.0"
                                                                      Value="1.0" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualTransition>

                                    <VisualTransition From="HeaderTextVisible"
                                                      To="HeaderTextCollapsed">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="InnerHeaderGrid"
                                                                           Storyboard.TargetProperty="Height">
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0"
                                                                        Value="0" />
                                            </ObjectAnimationUsingKeyFrames>

                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HeaderText"
                                                                           Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0.2"
                                                                        Value="Collapsed" />
                                            </ObjectAnimationUsingKeyFrames>

                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="HeaderText"
                                                                           Storyboard.TargetProperty="Opacity">
                                                <LinearDoubleKeyFrame KeyTime="0:0:0"
                                                                      Value="1.0" />
                                                <SplineDoubleKeyFrame KeyTime="0:0:0.1"
                                                                      KeySpline="0.0,0.35 0.15,1.0"
                                                                      Value="0.0" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualTransition>
                                </VisualStateGroup.Transitions>

                                <VisualState x:Name="HeaderTextVisible" />
                                <VisualState x:Name="HeaderTextCollapsed">
                                    <VisualState.Setters>
                                        <Setter Target="HeaderText.Visibility" Value="Collapsed" />
                                        <Setter Target="InnerHeaderGrid.Height" Value="0" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>

                            <VisualStateGroup x:Name="DisplayModeStates">
                                <VisualState x:Name="LeftMode" />
                                <VisualState x:Name="TopMode">
                                    <VisualState.Setters>
                                        <Setter Target="InnerHeaderGrid.Margin" Value="{ThemeResource TopNavigationViewItemInnerHeaderMargin}" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <Grid x:Name="InnerHeaderGrid"
                              Height="40"
                              HorizontalAlignment="Left"
                              Margin="{ThemeResource NavigationViewItemInnerHeaderMargin}">
                            <TextBlock x:Name="HeaderText"
                                       VerticalAlignment="Center"
                                       Margin="0,-1,0,-1"
                                       Style="{StaticResource NavigationViewItemHeaderTextStyle}"
                                       Text="{TemplateBinding Content}"
                                       TextWrapping="NoWrap" />
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="local:NavigationViewItemSeparator">
        <Setter Property="IsEnabled" Value="False" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="MinHeight" Value="0" />
        <Setter Property="AutomationProperties.AccessibilityView" Value="Raw" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid x:Name="NavigationViewItemSeparatorRootGrid">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="NavigationSeparatorLineStates">
                                <VisualState x:Name="HorizontalLine" />
                                <VisualState x:Name="HorizontalLineCompact">
                                    <VisualState.Setters>
                                        <Setter Target="SeparatorLine.Margin" Value="{ThemeResource NavigationViewCompactItemSeparatorMargin}" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="VerticalLine">
                                    <VisualState.Setters>
                                        <Setter Target="SeparatorLine.Height" Value="24" />
                                        <Setter Target="SeparatorLine.Width" Value="{ThemeResource TopNavigationViewItemSeparatorWidth}" />
                                        <Setter Target="SeparatorLine.Margin" Value="{ThemeResource TopNavigationViewItemSeparatorMargin}" />
                                        <Setter Target="SeparatorLine.VerticalAlignment" Value="Center" />
                                        <Setter Target="SeparatorLine.Fill" Value="{ThemeResource TopNavigationViewItemSeparatorForeground}" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle x:Name="SeparatorLine"
                                   Height="{ThemeResource NavigationViewItemSeparatorHeight}"
                                   Fill="{ThemeResource NavigationViewItemSeparatorForeground}"
                                   Margin="{ThemeResource NavigationViewItemSeparatorMargin}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="NavigationViewItemHeaderTextStyle"
           TargetType="TextBlock"
           BasedOn="{StaticResource BaseTextBlockStyle}">
        <Setter Property="FontSize" Value="14" />
        <Setter Property="FontWeight" Value="SemiBold" />
        <Setter Property="OpticalMarginAlignment" Value="TrimSideBearings" />
        <Setter Property="TextWrapping" Value="NoWrap" />
    </Style>
    <Style x:Key="NavigationViewTitleHeaderContentControlTextStyle"
           TargetType="ContentControl">
        <Setter Property="FontWeight" Value="SemiBold" />
        <Setter Property="FontSize" Value="28" />
        <Setter Property="FontFamily" Value="XamlAutoFontFamily" />
        <Setter Property="Margin" Value="{ThemeResource NavigationViewHeaderMargin}" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
    </Style>

    <Style x:Key="MaterialDefaultNavigationViewStyle"
           TargetType="local:NavigationView"
           BasedOn="{StaticResource MaterialNavigationViewStyle}" />

    <Style x:Key="MaterialDefaultNavigationViewItemStyle"
           TargetType="local:NavigationViewItem"
           BasedOn="{StaticResource MaterialNavigationViewItemStyle}" />
</ResourceDictionary>

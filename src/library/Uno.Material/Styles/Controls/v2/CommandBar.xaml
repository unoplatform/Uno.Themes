<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
					xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
					xmlns:um="using:Uno.Material"
					xmlns:toolkit="using:Uno.UI.Toolkit"
					xmlns:win="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					xmlns:android="http://uno.ui/android"
					xmlns:ios="http://uno.ui/ios"
					xmlns:uuc="using:Uno.UI.Controls"
					mc:Ignorable="android ios">

	<!-- Define Material properties for CommandBar -->
	<x:Double x:Key="MaterialCommandBarElevation">4</x:Double>
	<x:Double x:Key="MaterialCommandBarHeight">48</x:Double>

	<Style x:Key="MaterialAppBarButtonStyle"
		   TargetType="AppBarButton">
		<Setter Property="Background" Value="{ThemeResource AppBarButtonBackground}" />
		<Setter Property="Foreground" Value="{ThemeResource AppBarButtonForeground}" />
		<Setter Property="BorderBrush" Value="{ThemeResource AppBarButtonBorderBrush}" />
		<Setter Property="HorizontalAlignment" Value="Left" />
		<Setter Property="VerticalAlignment" Value="Top" />
		<Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}" />
		<Setter Property="FontWeight" Value="Normal" />
		<Setter Property="Width" Value="68" />
		<Setter Property="UseSystemFocusVisuals" Value="{StaticResource UseSystemFocusVisuals}" />
		<Setter Property="FocusVisualMargin" Value="-3" />
		<Setter Property="AllowFocusOnInteraction" Value="False" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="AppBarButton">
					<um:Ripple Feedback="{TemplateBinding Foreground}"
							   FeedbackOpacity="{StaticResource PressedOpacity}"
							   MinWidth="{TemplateBinding MinWidth}"
							   MaxWidth="{TemplateBinding MaxWidth}">
						<Grid x:Name="Root"
							  Background="Transparent">
							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="CommonStates">
									<VisualState x:Name="Normal" />

									<VisualState x:Name="PointerOver">
										<VisualState.Setters>
											<Setter Target="AppBarButtonInnerBorder.Background" Value="{ThemeResource AppBarButtonBackgroundPointerOver}" />
											<Setter Target="AppBarButtonInnerBorder.BorderBrush" Value="{ThemeResource AppBarButtonBorderBrushPointerOver}" />
											<Setter Target="Content.Foreground" Value="{ThemeResource AppBarButtonForegroundPointerOver}" />
										</VisualState.Setters>
									</VisualState>

									<VisualState x:Name="Pressed">
										<VisualState.Setters>
											<Setter Target="AppBarButtonInnerBorder.Background" Value="{ThemeResource AppBarButtonBackgroundPressed}" />
											<Setter Target="AppBarButtonInnerBorder.BorderBrush" Value="{ThemeResource AppBarButtonBorderBrushPressed}" />
											<Setter Target="Content.Foreground" Value="{ThemeResource AppBarButtonForegroundPressed}" />
										</VisualState.Setters>
									</VisualState>

									<VisualState x:Name="Disabled">
										<VisualState.Setters>
											<Setter Target="AppBarButtonInnerBorder.Background" Value="{ThemeResource AppBarButtonBackgroundDisabled}" />
											<Setter Target="AppBarButtonInnerBorder.BorderBrush" Value="{ThemeResource AppBarButtonBorderBrushDisabled}" />
											<Setter Target="Content.Foreground" Value="{ThemeResource AppBarButtonForegroundDisabled}" />
										</VisualState.Setters>
									</VisualState>
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>

							<Border x:Name="AppBarButtonInnerBorder"
									Margin="{ThemeResource AppBarButtonInnerBorderMargin}"
									Background="{TemplateBinding Background}"
									BorderBrush="{TemplateBinding BorderBrush}"
									BorderThickness="{TemplateBinding BorderThickness}"
									Control.IsTemplateFocusTarget="True" />

							<Grid x:Name="ContentRoot"
								  MinHeight="{ThemeResource AppBarThemeMinHeight}">

								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="*" />
									<ColumnDefinition Width="Auto" />
									<ColumnDefinition Width="Auto" />
								</Grid.ColumnDefinitions>

								<Grid.RowDefinitions>
									<RowDefinition Height="*" />
								</Grid.RowDefinitions>
								<!-- UNO WORKAROUND: The ViewBox center should be horizontal Stretch but the Grid aligns the content left -->
								<Viewbox x:Name="ContentViewbox"
										 Height="{ThemeResource AppBarButtonContentHeight}"
										 Width="{ThemeResource AppBarButtonContentHeight}"
										 VerticalAlignment="Center"
										 HorizontalAlignment="Center"
										 AutomationProperties.AccessibilityView="Raw">
									<ContentPresenter x:Name="Content"
													  Content="{TemplateBinding Icon}"
													  Foreground="{TemplateBinding Foreground}" />
								</Viewbox>
							</Grid>
						</Grid>
					</um:Ripple>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- Define the base style for Material CommandBar -->
	<Style x:Key="MaterialBaseCommandBarStyle"
		   TargetType="CommandBar">
		<Setter Property="Background" Value="{ThemeResource SurfaceBrush}" />
		<Setter Property="Foreground" Value="{ThemeResource OnSurfaceBrush}" />
		<Setter Property="HorizontalAlignment" Value="Stretch" />
		<Setter Property="VerticalAlignment" Value="Top" />
		<Setter Property="HorizontalContentAlignment" Value="Left" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
	</Style>
	<!-- Define the main Material CommandBar Style -->
	<Style x:Key="MaterialCommandBarStyle"
		   TargetType="CommandBar"
		   BasedOn="{StaticResource MaterialBaseCommandBarStyle}" />
	<!-- Define default styles for AppBarButton and CommandBar -->
	<Style x:Key="MaterialDefaultAppBarButtonStyle"
		   TargetType="AppBarButton"
		   BasedOn="{StaticResource MaterialAppBarButtonStyle}" />
	<Style x:Key="MaterialDefaultCommandBarStyle"
		   TargetType="CommandBar"
		   BasedOn="{StaticResource MaterialCommandBarStyle}" />
</ResourceDictionary>

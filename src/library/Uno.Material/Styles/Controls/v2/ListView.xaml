<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	xmlns:win="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:xamarin="http://uno.ui/xamarin"
	mc:Ignorable="xamarin">


	<Style x:Key="MaterialListViewItemStyle" TargetType="ListViewItem">
		<Setter Property="FontFamily" Value="{ThemeResource TitleMediumFontFamily}" />
		<Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}" />
		<Setter Property="Background" Value="{ThemeResource ListViewItemBackground}" />
		<Setter Property="Foreground" Value="{ThemeResource ListViewItemForeground}" />
		<Setter Property="TabNavigation" Value="Local" />
		<Setter Property="IsHoldingEnabled" Value="True" />
		<Setter Property="HorizontalContentAlignment" Value="Stretch" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="MinWidth" Value="{ThemeResource ListViewItemMinWidth}" />
		<Setter Property="MinHeight" Value="{ThemeResource ListViewItemMinHeight}" />
		<Setter Property="AllowDrop" Value="False" />
		<Setter Property="UseSystemFocusVisuals" Value="True" />
		<Setter Property="FocusVisualMargin" Value="0" />
		<Setter Property="Padding" Value="0" />
		<Setter Property="FocusVisualPrimaryBrush" Value="{ThemeResource ListViewItemFocusVisualPrimaryBrush}" />
		<Setter Property="FocusVisualPrimaryThickness" Value="2" />
		<Setter Property="FocusVisualSecondaryBrush" Value="{ThemeResource ListViewItemFocusVisualSecondaryBrush}" />
		<Setter Property="FocusVisualSecondaryThickness" Value="1" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ListViewItem">
					<Grid x:Name="ContentBorder"
						  Background="{TemplateBinding Background}"
						  BorderBrush="{TemplateBinding BorderBrush}"
						  BorderThickness="{TemplateBinding BorderThickness}"
						  CornerRadius="{TemplateBinding CornerRadius}">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal">
									<Storyboard>
										<win:PointerUpThemeAnimation Storyboard.TargetName="ContentPresenter" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="PointerOver">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="BorderBackground"
														 Storyboard.TargetProperty="Opacity"
														 Duration="0"
														 To="1" />
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderBackground"
																	   Storyboard.TargetProperty="Fill">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource PrimaryHoverBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
																	   Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<win:PointerUpThemeAnimation Storyboard.TargetName="ContentPresenter" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Pressed">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="BorderBackground"
														 Storyboard.TargetProperty="Opacity"
														 Duration="0"
														 To="1" />
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderBackground"
																	   Storyboard.TargetProperty="Fill">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource PrimaryPressedBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
																	   Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<win:PointerDownThemeAnimation TargetName="ContentPresenter" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Selected">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="MultiSelectCheck"
														 Storyboard.TargetProperty="Opacity"
														 Duration="0:0:0"
														 To="1" />
										<DoubleAnimation Storyboard.TargetName="BorderBackground"
														 Storyboard.TargetProperty="Opacity"
														 Duration="0"
														 To="1" />
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderBackground"
																	   Storyboard.TargetProperty="Fill">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource PrimarySelectedBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
																	   Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<win:PointerUpThemeAnimation Storyboard.TargetName="ContentPresenter" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="PointerOverSelected">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="MultiSelectCheck"
														 Storyboard.TargetProperty="Opacity"
														 Duration="0:0:0"
														 To="1" />
										<DoubleAnimation Storyboard.TargetName="BorderBackground"
														 Storyboard.TargetProperty="Opacity"
														 Duration="0"
														 To="1" />
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderBackground"
																	   Storyboard.TargetProperty="Fill">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource PrimaryPressedBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
																	   Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<win:PointerUpThemeAnimation Storyboard.TargetName="ContentPresenter" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="PressedSelected">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="MultiSelectCheck"
														 Storyboard.TargetProperty="Opacity"
														 Duration="0:0:0"
														 To="1" />
										<DoubleAnimation Storyboard.TargetName="BorderBackground"
														 Storyboard.TargetProperty="Opacity"
														 Duration="0"
														 To="1" />
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderBackground"
																	   Storyboard.TargetProperty="Fill">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource PrimaryPressedBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
																	   Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}" />
										</ObjectAnimationUsingKeyFrames>
										<win:PointerDownThemeAnimation TargetName="ContentPresenter" />
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="DisabledStates">
								<VisualState x:Name="Enabled" />
								<VisualState x:Name="Disabled">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="ContentBorder"
														 Storyboard.TargetProperty="Opacity"
														 Duration="0"
														 To="{ThemeResource ListViewItemDisabledThemeOpacity}" />
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="MultiSelectStates">
								<VisualState x:Name="MultiSelectDisabled">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="MultiSelectCheckBoxTransform"
																	   Storyboard.TargetProperty="X">
											<EasingDoubleKeyFrame KeyTime="0:0:0"
																  Value="0" />
											<SplineDoubleKeyFrame KeyTime="0:0:0.333"
																  Value="-32"
																  KeySpline="0.1,0.9,0.2,1" />
										</DoubleAnimationUsingKeyFrames>
										<win:DoubleAnimationUsingKeyFrames Storyboard.TargetName="MultiSelectClipTransform"
																		   Storyboard.TargetProperty="X">
											<EasingDoubleKeyFrame KeyTime="0:0:0"
																  Value="0" />
											<SplineDoubleKeyFrame KeyTime="0:0:0.333"
																  Value="32"
																  KeySpline="0.1,0.9,0.2,1" />
										</win:DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenterTranslateTransform"
																	   Storyboard.TargetProperty="X">
											<EasingDoubleKeyFrame KeyTime="0:0:0"
																  Value="32" />
											<SplineDoubleKeyFrame KeyTime="0:0:0.333"
																  Value="0"
																  KeySpline="0.1,0.9,0.2,1" />
										</DoubleAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="MultiSelectSquare"
																	   Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="Visible" />
											<DiscreteObjectKeyFrame KeyTime="0:0:0.333"
																	Value="Collapsed" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="MultiSelectEnabled">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="MultiSelectCheckBoxTransform"
																	   Storyboard.TargetProperty="X">
											<EasingDoubleKeyFrame KeyTime="0:0:0"
																  Value="-32" />
											<SplineDoubleKeyFrame KeyTime="0:0:0.333"
																  Value="0"
																  KeySpline="0.1,0.9,0.2,1" />
										</DoubleAnimationUsingKeyFrames>
										<win:DoubleAnimationUsingKeyFrames Storyboard.TargetName="MultiSelectClipTransform"
																		   Storyboard.TargetProperty="X">
											<EasingDoubleKeyFrame KeyTime="0:0:0"
																  Value="32" />
											<SplineDoubleKeyFrame KeyTime="0:0:0.333"
																  Value="0"
																  KeySpline="0.1,0.9,0.2,1" />
										</win:DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenterTranslateTransform"
																	   Storyboard.TargetProperty="X">
											<EasingDoubleKeyFrame KeyTime="0:0:0"
																  Value="-32" />
											<SplineDoubleKeyFrame KeyTime="0:0:0.333"
																  Value="0"
																  KeySpline="0.1,0.9,0.2,1" />
										</DoubleAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="MultiSelectSquare"
																	   Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="Visible" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="MultiSelectCheck"
																	   Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="Visible" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenterGrid"
																	   Storyboard.TargetProperty="Margin">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="32,0,0,0" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="DataVirtualizationStates">
								<VisualState x:Name="DataAvailable" />
								<VisualState x:Name="DataPlaceholder">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="PlaceholderTextBlock"
																	   Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="Visible" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="PlaceholderRect"
																	   Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0"
																	Value="Visible" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="ReorderHintStates">
								<VisualState x:Name="NoReorderHint" />
								<VisualState x:Name="BottomReorderHint">
									<Storyboard>
										<win:DragOverThemeAnimation TargetName="ContentBorder"
																	ToOffset="{ThemeResource ListViewItemReorderHintThemeOffset}"
																	Direction="Bottom" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="TopReorderHint">
									<Storyboard>
										<win:DragOverThemeAnimation TargetName="ContentBorder"
																	ToOffset="{ThemeResource ListViewItemReorderHintThemeOffset}"
																	Direction="Top" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="RightReorderHint">
									<Storyboard>
										<win:DragOverThemeAnimation TargetName="ContentBorder"
																	ToOffset="{ThemeResource ListViewItemReorderHintThemeOffset}"
																	Direction="Right" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="LeftReorderHint">
									<Storyboard>
										<win:DragOverThemeAnimation TargetName="ContentBorder"
																	ToOffset="{ThemeResource ListViewItemReorderHintThemeOffset}"
																	Direction="Left" />
									</Storyboard>
								</VisualState>
								<VisualStateGroup.Transitions>
									<VisualTransition To="NoReorderHint"
													  GeneratedDuration="0:0:0.2" />
								</VisualStateGroup.Transitions>
							</VisualStateGroup>
							<VisualStateGroup x:Name="DragStates">
								<VisualState x:Name="NotDragging" />
								<VisualState x:Name="Dragging">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="ContentBorder"
														 Storyboard.TargetProperty="Opacity"
														 Duration="0"
														 To="{ThemeResource ListViewItemDragThemeOpacity}" />
										<win:DragItemThemeAnimation TargetName="ContentBorder" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="DraggingTarget">
									<Storyboard>
										<win:DropTargetItemThemeAnimation TargetName="ContentBorder" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="MultipleDraggingPrimary">
									<Storyboard>
										<!-- These two Opacity animations are required - the FadeInThemeAnimations
										 on the same elements animate an internal Opacity. -->
										<DoubleAnimation Storyboard.TargetName="MultiArrangeOverlayBackground"
														 Storyboard.TargetProperty="Opacity"
														 Duration="0"
														 To="1" />
										<DoubleAnimation Storyboard.TargetName="MultiArrangeOverlayText"
														 Storyboard.TargetProperty="Opacity"
														 Duration="0"
														 To="1" />
										<DoubleAnimation Storyboard.TargetName="ContentBorder"
														 Storyboard.TargetProperty="Opacity"
														 Duration="0"
														 To="{ThemeResource ListViewItemDragThemeOpacity}" />
										<win:FadeInThemeAnimation TargetName="MultiArrangeOverlayBackground" />
										<win:FadeInThemeAnimation TargetName="MultiArrangeOverlayText" />
										<win:DragItemThemeAnimation TargetName="ContentBorder" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="MultipleDraggingSecondary">
									<Storyboard>
										<win:FadeOutThemeAnimation TargetName="ContentBorder" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="DraggedPlaceholder">
									<Storyboard>
										<win:FadeOutThemeAnimation TargetName="ContentBorder" />
									</Storyboard>
								</VisualState>
								<VisualStateGroup.Transitions>
									<VisualTransition To="NotDragging"
													  GeneratedDuration="0:0:0.2" />
								</VisualStateGroup.Transitions>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Rectangle x:Name="BorderBackground"
								   IsHitTestVisible="False"
								   Fill="{ThemeResource SystemControlHighlightListAccentLowBrush}"
								   Opacity="0"
								   Control.IsTemplateFocusTarget="True" />
						<Grid x:Name="ContentPresenterGrid"
							  Background="Transparent"
							  Margin="0,0,0,0">
							<Grid.RenderTransform>
								<TranslateTransform x:Name="ContentPresenterTranslateTransform" />
							</Grid.RenderTransform>
							<ContentPresenter x:Name="ContentPresenter"
											  ContentTransitions="{TemplateBinding ContentTransitions}"
											  ContentTemplate="{TemplateBinding ContentTemplate}"
											  xamarin:ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
											  Content="{TemplateBinding Content}"
											  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
											  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
											  Margin="{TemplateBinding Padding}" />
						</Grid>
						<!-- The 'Xg' text simulates the amount of space one line of text will occupy.
						  In the DataPlaceholder state, the Content is not loaded yet so we
						  approximate the size of the item using placeholder text. -->
						<TextBlock x:Name="PlaceholderTextBlock"
								   Opacity="0"
								   Text="Xg"
								   Foreground="{x:Null}"
								   Margin="{TemplateBinding Padding}"
								   IsHitTestVisible="False"
								   AutomationProperties.AccessibilityView="Raw" />
						<Rectangle x:Name="PlaceholderRect"
								   Visibility="Collapsed"
								   Fill="{ThemeResource ListViewItemPlaceholderBackgroundThemeBrush}" />
						<Rectangle x:Name="MultiArrangeOverlayBackground"
								   IsHitTestVisible="False"
								   Opacity="0"
								   Fill="{ThemeResource ListViewItemDragBackgroundThemeBrush}"
								   Grid.ColumnSpan="2" />
						<Border x:Name="MultiSelectSquare"
								BorderBrush="{ThemeResource SystemControlForegroundBaseMediumHighBrush}"
								BorderThickness="2"
								Width="20"
								Height="20"
								Margin="12,0,0,0"
								VerticalAlignment="Center"
								HorizontalAlignment="Left"
								Visibility="Collapsed">
							<Border.Clip>
								<RectangleGeometry Rect="0,0,20,20">
									<win:RectangleGeometry.Transform>
										<TranslateTransform x:Name="MultiSelectClipTransform" />
									</win:RectangleGeometry.Transform>
								</RectangleGeometry>
							</Border.Clip>
							<Border.RenderTransform>
								<TranslateTransform x:Name="MultiSelectCheckBoxTransform" />
							</Border.RenderTransform>
							<FontIcon x:Name="MultiSelectCheck"
									  FontFamily="{ThemeResource SymbolThemeFontFamily}"
									  Glyph="&#xE73E;"
									  FontSize="16"
									  Foreground="{ThemeResource SystemControlForegroundBaseMediumHighBrush}"
									  Visibility="Collapsed"
									  Opacity="0" />
						</Border>
						<TextBlock x:Name="MultiArrangeOverlayText"
								   Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.DragItemsCount}"
								   Foreground="{ThemeResource ListViewItemDragForegroundThemeBrush}"
								   FontFamily="{ThemeResource TitleMediumFontFamily}"
								   FontSize="26.667"
								   IsHitTestVisible="False"
								   Opacity="0"
								   TextWrapping="Wrap"
								   TextTrimming="WordEllipsis"
								   Margin="18,9,0,0"
								   AutomationProperties.AccessibilityView="Raw"
								   Grid.ColumnSpan="2" />
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="MaterialListViewStyle"
		   TargetType="ListView">
		<Setter Property="ItemContainerStyle"
				Value="{StaticResource MaterialListViewItemStyle}"/>

	</Style>

	<Style x:Key="MaterialDefaultListViewItemStyle"
		   TargetType="ListViewItem"
		   BasedOn="{StaticResource MaterialListViewItemStyle}" />

	<Style x:Key="MaterialDefaultListViewStyle"
		   TargetType="ListView"
		   BasedOn="{StaticResource MaterialListViewStyle}" />
</ResourceDictionary>

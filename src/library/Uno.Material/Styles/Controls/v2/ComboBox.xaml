<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
					xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
					xmlns:toolkit="using:Uno.UI.Toolkit"
					xmlns:um="using:Uno.Material"
					xmlns:xamarin="http://uno.ui/xamarin"
					mc:Ignorable="xamarin">

	<!--  Converters  -->
	<um:FromNullToValueConverter x:Key="NullToScaleConverter"
								 NotNullValue="0.7"
								 NullValue="1" />

	<um:FromNullToValueConverter x:Key="NullToPlaceholderTranslateYConverter"
								 NotNullValue="-11"
								 NullValue="0" />

	<um:FromNullToValueConverter x:Key="NullToContentTranslateYConverter"
								 NotNullValue="5"
								 NullValue="0" />

	<um:FromNullToValueConverter x:Key="NullToPlaceholderThemeBrushConverter"
								 NotNullValue="{StaticResource MaterialComboBoxPlaceholderFocusedThemeBrush}"
								 NullValue="{StaticResource MaterialComboBoxPlaceholderForegroundThemeBrush}" />

	<!-- ComboBoxItem Brushes -->
	<StaticResource x:Key="MaterialComboBoxItemForegroundThemeBrush"
					ResourceKey="OnSurfaceBrush" />

	<StaticResource x:Key="MaterialComboBoxItemSelectedBackgroundThemeBrush"
					ResourceKey="PrimarySelectedBrush" />

	<StaticResource x:Key="MaterialComboBoxItemSelectedPointerOverBackgroundThemeBrush"
					ResourceKey="OnSurfaceVariantHoverBrush" />

	<StaticResource x:Key="MaterialComboBoxItemPointerOverBackgroundThemeBrush"
					ResourceKey="OnSurfaceVariantHoverBrush" />


	<!-- ComboBox Brushes -->
	<StaticResource x:Key="MaterialComboBoxBackgroundColorBrush"
					ResourceKey="SystemControlTransparentBrush" />

	<StaticResource x:Key="MaterialComboBoxBorderBrush"
					ResourceKey="OnSurfaceLowBrush" />

	<StaticResource x:Key="MaterialComboBoxFocusedBorderBrush"
					ResourceKey="OnBackgroundBrush" />

	<StaticResource x:Key="MaterialComboBoxOpenedBorderBrush"
					ResourceKey="PrimaryBrush" />

	<StaticResource x:Key="MaterialComboBoxLeadingIconForegroundThemeBrush"
					ResourceKey="OnSurfaceBrush" />

	<StaticResource x:Key="MaterialComboBoxArrowForegroundThemeBrush"
					ResourceKey="OnSurfaceBrush" />

	<StaticResource x:Key="MaterialComboBoxOpenedArrowForegroundThemeBrush"
					ResourceKey="PrimaryBrush" />

	<StaticResource x:Key="MaterialComboBoxForegroundThemeBrush"
					ResourceKey="OnSurfaceBrush" />

	<StaticResource x:Key="MaterialComboBoxPlaceholderFocusedThemeBrush"
					ResourceKey="PrimaryBrush" />

	<StaticResource x:Key="MaterialComboBoxPlaceholderForegroundThemeBrush"
					ResourceKey="OnSurfaceLowBrush" />

	<!--  CornerRadius  -->
	<CornerRadius x:Key="MaterialComboBoxCornerRadius">4</CornerRadius>

	<!--  Path Data  -->
	<x:String x:Key="UpArrowPathData">M0 0L-5 -5L-10 0H0Z</x:String>
	<x:String x:Key="DownArrowPathData">M0 0L5 5L10 0H0Z</x:String>

	<Thickness x:Key="MaterialComboBoxBorderThickness">1</Thickness>
	<Thickness x:Key="MaterialComboBoxOpenedBorderThickness">2</Thickness>
	<Thickness x:Key="MaterialComboBoxPadding">16,0</Thickness>


	<!--  Style  -->
	<Style x:Key="MaterialComboBoxItemStyle"
		   TargetType="ComboBoxItem">

		<Setter Property="Background"
				Value="Transparent" />
		<Setter Property="Foreground"
				Value="{ThemeResource MaterialComboBoxItemForegroundThemeBrush}" />

		<!-- Start: Body Large Typo -->
		<Setter Property="FontFamily"
				Value="{ThemeResource MaterialMediumFontFamily}" />
		<Setter Property="FontWeight"
				Value="{ThemeResource BodyLargeFontWeight}" />
		<Setter Property="FontSize"
				Value="{ThemeResource BodyLargeFontSize}" />
		<Setter Property="CharacterSpacing"
				Value="{ThemeResource BodyLargeCharacterSpacing}" />
		<!-- End: Body Large Typo -->

		<Setter Property="VerticalContentAlignment"
				Value="Center" />
		<Setter Property="HorizontalContentAlignment"
				Value="Stretch" />
		<Setter Property="Padding"
				Value="16,0" />
		<Setter Property="Height"
				Value="50" />

		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ComboBoxItem">
					<Grid x:Name="RootGrid"
						  Background="{TemplateBinding Background}">

						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal" />

								<VisualState x:Name="PointerOver">
									<VisualState.Setters>
										<Setter Target="PressedOverlay.Background"
												Value="{ThemeResource MaterialComboBoxItemPointerOverBackgroundThemeBrush}" />
									</VisualState.Setters>
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="PressedOverlay"
														 Storyboard.TargetProperty="Opacity"
														 To="1"
														 Duration="{StaticResource MaterialAnimationDuration}">
											<DoubleAnimation.EasingFunction>
												<CubicEase EasingMode="EaseIn" />
											</DoubleAnimation.EasingFunction>
										</DoubleAnimation>
									</Storyboard>
								</VisualState>

								<VisualState x:Name="Pressed">
									<VisualState.Setters>
										<Setter Target="PressedOverlay.Background"
												Value="{ThemeResource MaterialComboBoxItemPointerOverBackgroundThemeBrush}" />
									</VisualState.Setters>
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="PressedOverlay"
														 Storyboard.TargetProperty="Opacity"
														 To="1"
														 Duration="{StaticResource MaterialAnimationDuration}">
											<DoubleAnimation.EasingFunction>
												<CubicEase EasingMode="EaseIn" />
											</DoubleAnimation.EasingFunction>
										</DoubleAnimation>
									</Storyboard>
								</VisualState>

								<VisualState x:Name="Disabled">
									<VisualState.Setters>
										<Setter Target="ContentPresenter.Opacity"
												Value="1" />
									</VisualState.Setters>
								</VisualState>

								<VisualState x:Name="Selected">
									<VisualState.Setters>
										<Setter Target="PressedOverlay.Background"
												Value="{ThemeResource MaterialComboBoxItemSelectedBackgroundThemeBrush}" />
									</VisualState.Setters>
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="PressedOverlay"
														 Storyboard.TargetProperty="Opacity"
														 To="1"
														 Duration="{StaticResource MaterialAnimationDuration}">
											<DoubleAnimation.EasingFunction>
												<CubicEase EasingMode="EaseIn" />
											</DoubleAnimation.EasingFunction>
										</DoubleAnimation>
									</Storyboard>
								</VisualState>

								<VisualState x:Name="SelectedPointerOver">
									<VisualState.Setters>
										<Setter Target="PressedOverlay.Background"
												Value="{ThemeResource MaterialComboBoxItemSelectedPointerOverBackgroundThemeBrush}" />
									</VisualState.Setters>
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="PressedOverlay"
														 Storyboard.TargetProperty="Opacity"
														 To="1"
														 Duration="{StaticResource MaterialAnimationDuration}">
											<DoubleAnimation.EasingFunction>
												<CubicEase EasingMode="EaseIn" />
											</DoubleAnimation.EasingFunction>
										</DoubleAnimation>
									</Storyboard>
								</VisualState>

								<VisualState x:Name="SelectedDisabled">
									<VisualState.Setters>
										<Setter Target="ContentPresenter.Opacity"
												Value="1" />
									</VisualState.Setters>
								</VisualState>

								<VisualState x:Name="SelectedPressed">
									<VisualState.Setters>
										<Setter Target="PressedOverlay.Background"
												Value="{ThemeResource MaterialComboBoxItemSelectedBackgroundThemeBrush}" />
									</VisualState.Setters>
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="PressedOverlay"
														 Storyboard.TargetProperty="Opacity"
														 To="1"
														 Duration="{StaticResource MaterialAnimationDuration}">
											<DoubleAnimation.EasingFunction>
												<CubicEase EasingMode="EaseIn" />
											</DoubleAnimation.EasingFunction>
										</DoubleAnimation>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>

						<!--  Pressed Overlay  -->
						<Grid x:Name="PressedOverlay"
							  HorizontalAlignment="Stretch"
							  VerticalAlignment="Stretch"
							  Background="{ThemeResource MaterialComboBoxItemSelectedBackgroundThemeBrush}"
							  IsHitTestVisible="False"
							  Opacity="0" />

						<!--  ContentPresenter  -->
						<ContentPresenter x:Name="ContentPresenter"
										  Padding="{TemplateBinding Padding}"
										  Content="{TemplateBinding Content}"
										  ContentTemplate="{TemplateBinding ContentTemplate}"
										  ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
										  ContentTransitions="{TemplateBinding ContentTransitions}"
										  VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
										  HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" />
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="MaterialComboBoxStyle"
		   TargetType="ComboBox">

		<Setter Property="Foreground"
				Value="{ThemeResource MaterialComboBoxForegroundThemeBrush}" />
		<Setter Property="Background"
				Value="{ThemeResource MaterialComboBoxBackgroundColorBrush}" />
		<Setter Property="BorderBrush"
				Value="{ThemeResource MaterialComboBoxBorderBrush}" />
		<Setter Property="BorderThickness"
				Value="{StaticResource MaterialComboBoxBorderThickness}" />
		<Setter Property="Padding"
				Value="{StaticResource MaterialComboBoxPadding}" />

		<!-- Start: Body Large Typo -->
		<Setter Property="FontFamily"
				Value="{ThemeResource MaterialMediumFontFamily}" />
		<Setter Property="FontWeight"
				Value="{ThemeResource BodyLargeFontWeight}" />
		<Setter Property="FontSize"
				Value="{ThemeResource BodyLargeFontSize}" />
		<Setter Property="CharacterSpacing"
				Value="{ThemeResource BodyLargeCharacterSpacing}" />
		<!-- End: Body Large Typo -->

		<Setter Property="MinHeight"
				Value="56" />
		<Setter Property="TabNavigation"
				Value="Once" />
		<Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
				Value="Disabled" />
		<Setter Property="ScrollViewer.VerticalScrollBarVisibility"
				Value="Auto" />
		<Setter Property="ScrollViewer.HorizontalScrollMode"
				Value="Disabled" />
		<Setter Property="ScrollViewer.VerticalScrollMode"
				Value="Auto" />
		<Setter Property="ScrollViewer.IsVerticalRailEnabled"
				Value="True" />
		<Setter Property="ScrollViewer.IsDeferredScrollingEnabled"
				Value="False" />
		<Setter Property="ScrollViewer.BringIntoViewOnFocusChange"
				Value="True" />
		<Setter Property="HorizontalContentAlignment"
				Value="Stretch" />
		<Setter Property="HorizontalAlignment"
				Value="Stretch" />
		<Setter Property="ItemContainerStyle"
				Value="{StaticResource MaterialComboBoxItemStyle}" />
		<xamarin:Setter Property="uno:ComboBox.DropDownPreferredPlacement"
						Value="Below" />

		<!--  Workaround for WinUI issue: https://github.com/microsoft/microsoft-ui-xaml/issues/6388  -->
		<Setter Property="um:ControlExtensions.Icon"
				Value="{x:Null}" />

		<Setter Property="ItemsPanel">
			<Setter.Value>
				<ItemsPanelTemplate>
					<CarouselPanel />
				</ItemsPanelTemplate>
			</Setter.Value>
		</Setter>

		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ComboBox">
					<Grid x:Name="RootGrid"
						  HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
						  Background="{TemplateBinding Background}"
						  BorderBrush="{TemplateBinding BorderBrush}"
						  BorderThickness="{TemplateBinding BorderThickness}"
						  CornerRadius="{StaticResource MaterialComboBoxCornerRadius}">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal" />
								<VisualState x:Name="PointerOver" />
								<VisualState x:Name="Pressed" />

								<VisualState x:Name="Disabled">
									<VisualState.Setters>
										<Setter Target="DropDownGlyph_Down.Fill"
												Value="{ThemeResource OnSurfaceLowBrush}" />
										<Setter Target="PlaceholderElement.Foreground"
												Value="{ThemeResource OnSurfaceLowBrush}" />
										<Setter Target="ContentPresenter.Foreground"
												Value="{ThemeResource OnSurfaceLowBrush}" />
										<Setter Target="IconPresenter.Foreground"
												Value="{ThemeResource OnSurfaceLowBrush}" />
									</VisualState.Setters>
								</VisualState>
							</VisualStateGroup>

							<VisualStateGroup x:Name="DropDownStates">

								<VisualState x:Name="Opened">
									<VisualState.Setters>
										<Setter Target="RootGrid.BorderBrush"
												Value="{ThemeResource MaterialComboBoxOpenedBorderBrush}" />
										<Setter Target="RootGrid.BorderThickness"
												Value="{StaticResource MaterialComboBoxOpenedBorderThickness}" />
										<Setter Target="DropDownGlyph_Up.Fill"
												Value="{ThemeResource MaterialComboBoxOpenedArrowForegroundThemeBrush}" />
										<Setter Target="DropDownGlyph_Down.Visibility"
												Value="Collapsed" />
										<Setter Target="DropDownGlyph_Up.Visibility"
												Value="Visible" />
									</VisualState.Setters>
									<Storyboard>

										<SplitOpenThemeAnimation ClosedLength="{Binding TemplateSettings.DropDownClosedHeight, RelativeSource={RelativeSource Mode=TemplatedParent}}"
																 ClosedTargetName="ContentPresenter"
																 ContentTargetName="ScrollViewer"
																 ContentTranslationOffset="0"
																 OffsetFromCenter="{Binding TemplateSettings.DropDownOffset, RelativeSource={RelativeSource Mode=TemplatedParent}}"
																 OpenedLength="{Binding TemplateSettings.DropDownOpenedHeight, RelativeSource={RelativeSource Mode=TemplatedParent}}"
																 OpenedTargetName="PopupBorder" />
									</Storyboard>
								</VisualState>

								<VisualState x:Name="Closed">
									<VisualState.Setters>
										<Setter Target="RootGrid.BorderBrush"
												Value="{ThemeResource MaterialComboBoxBorderBrush}" />
										<Setter Target="RootGrid.BorderThickness"
												Value="{StaticResource MaterialComboBoxBorderThickness}" />
										<Setter Target="DropDownGlyph_Down.Visibility"
												Value="Visible" />
										<Setter Target="DropDownGlyph_Up.Visibility"
												Value="Collapsed" />
									</VisualState.Setters>
									<Storyboard>
										<SplitCloseThemeAnimation ClosedLength="{Binding TemplateSettings.DropDownClosedHeight, RelativeSource={RelativeSource Mode=TemplatedParent}}"
																  ClosedTargetName="ContentPresenter"
																  ContentTargetName="ScrollViewer"
																  ContentTranslationDirection="{Binding TemplateSettings.SelectedItemDirection, RelativeSource={RelativeSource Mode=TemplatedParent}}"
																  ContentTranslationOffset="40"
																  OffsetFromCenter="{Binding TemplateSettings.DropDownOffset, RelativeSource={RelativeSource Mode=TemplatedParent}}"
																  OpenedLength="{Binding TemplateSettings.DropDownOpenedHeight, RelativeSource={RelativeSource Mode=TemplatedParent}}"
																  OpenedTargetName="PopupBorder" />
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>

						<Grid x:Name="ComboBoxContent"
							  Padding="{TemplateBinding Padding}">
							<Grid.Resources>
								<!--  Resources added here in order to manage the ContentPresenter TranslateY depending if there is a PlaceholderText or not  -->
								<CompositeTransform x:Key="ContentPresenter_CompositeTransformWithPlaceholder"
													TranslateY="{Binding SelectedItem, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource NullToContentTranslateYConverter}, TargetNullValue=0, FallbackValue=0}" />

								<CompositeTransform x:Key="ContentPresenter_CompositeTransformWithoutPlaceholder"
													TranslateY="0" />

								<um:FromEmptyStringToValueConverter x:Key="EmptyToCompositeTransformConverter"
																	NotNullOrEmptyValue="{StaticResource ContentPresenter_CompositeTransformWithPlaceholder}"
																	NullOrEmptyValue="{StaticResource ContentPresenter_CompositeTransformWithoutPlaceholder}" />
							</Grid.Resources>

							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto" />
								<ColumnDefinition Width="*" />
								<ColumnDefinition Width="Auto" />
							</Grid.ColumnDefinitions>

							<!--  Leading Icon  -->
							<ContentPresenter x:Name="IconPresenter"
											  Width="20"
											  Margin="2,0,18,0"
											  HorizontalAlignment="Center"
											  VerticalAlignment="Center"
											  Foreground="{ThemeResource MaterialComboBoxLeadingIconForegroundThemeBrush}"
											  Content="{Binding Path=(um:ControlExtensions.Icon), RelativeSource={RelativeSource TemplatedParent}}"
											  Visibility="{Binding Path=(um:ControlExtensions.Icon), RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource MaterialNullToCollapsedConverter}, FallbackValue=Collapsed, TargetNullValue=Collapsed}" />

							<!--  ContentPresenter  -->
							<ContentPresenter x:Name="ContentPresenter"
											  Grid.Column="1"
											  MaxLines="1"
											  VerticalAlignment="Center"
											  RenderTransform="{Binding PlaceholderText, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource EmptyToCompositeTransformConverter}, TargetNullValue={StaticResource ContentPresenter_CompositeTransformWithoutPlaceholder}, FallbackValue={StaticResource ContentPresenter_CompositeTransformWithoutPlaceholder}}" />

							<!--  PlaceholderElement  -->
							<TextBlock x:Name="PlaceholderElement"
									   Grid.Column="1"
									   VerticalAlignment="Center"
									   Foreground="{Binding SelectedItem, RelativeSource={RelativeSource TemplatedParent}, Converter={ThemeResource NullToPlaceholderThemeBrushConverter}, TargetNullValue={StaticResource MaterialComboBoxPlaceholderForegroundThemeBrush}, FallbackValue={StaticResource MaterialComboBoxPlaceholderForegroundThemeBrush}}"
									   IsHitTestVisible="False"
									   MaxLines="1"
									   RenderTransformOrigin="0,0.5"
									   Style="{StaticResource BodyLarge}"
									   Text="{TemplateBinding PlaceholderText}">
								<TextBlock.RenderTransform>
									<CompositeTransform x:Name="PlaceholderElement_CompositeTransform"
														ScaleX="{Binding SelectedItem, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource NullToScaleConverter}, TargetNullValue=1, FallbackValue=1}"
														ScaleY="{Binding SelectedItem, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource NullToScaleConverter}, TargetNullValue=1, FallbackValue=1}"
														TranslateY="{Binding SelectedItem, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource NullToPlaceholderTranslateYConverter}, TargetNullValue=0, FallbackValue=0}" />
								</TextBlock.RenderTransform>
							</TextBlock>

							<!--  Down  -->
							<Path x:Name="DropDownGlyph_Down"
								  Grid.Column="2"
								  Width="10"
								  Height="5"
								  Margin="7,0"
								  HorizontalAlignment="Center"
								  VerticalAlignment="Center"
								  Data="{StaticResource DownArrowPathData}"
								  Fill="{ThemeResource MaterialComboBoxArrowForegroundThemeBrush}"
								  Stretch="Uniform" />

							<!--  Up  -->
							<Path x:Name="DropDownGlyph_Up"
								  Grid.Column="2"
								  Width="10"
								  Height="5"
								  Margin="7,0"
								  HorizontalAlignment="Center"
								  VerticalAlignment="Center"
								  Data="{StaticResource UpArrowPathData}"
								  Fill="{ThemeResource MaterialComboBoxArrowForegroundThemeBrush}"
								  Stretch="Uniform"
								  Visibility="Collapsed" />
						</Grid>

						<!--  Popup  -->
						<Popup x:Name="Popup">
							<Border x:Name="PopupBorder"
									CornerRadius="{StaticResource MaterialComboBoxCornerRadius}"
									Background="{ThemeResource SurfaceBrush}">

								<!--  Workaround for Issue #213 where android PopupBorder doesn't get redrawn properly, adds Background, CornerRadius and Border to ScrollViewer  -->
								<ScrollViewer x:Name="ScrollViewer"
											  MinWidth="{ThemeResource ComboBoxPopupThemeMinWidth}"
											  AutomationProperties.AccessibilityView="Raw"
											  BringIntoViewOnFocusChange="{TemplateBinding ScrollViewer.BringIntoViewOnFocusChange}"
											  CornerRadius="{StaticResource MaterialComboBoxCornerRadius}"
											  HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
											  HorizontalScrollMode="{TemplateBinding ScrollViewer.HorizontalScrollMode}"
											  IsDeferredScrollingEnabled="{TemplateBinding ScrollViewer.IsDeferredScrollingEnabled}"
											  IsHorizontalRailEnabled="{TemplateBinding ScrollViewer.IsHorizontalRailEnabled}"
											  IsVerticalRailEnabled="{TemplateBinding ScrollViewer.IsVerticalRailEnabled}"
											  VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
											  VerticalScrollMode="{TemplateBinding ScrollViewer.VerticalScrollMode}"
											  VerticalSnapPointsAlignment="Near"
											  VerticalSnapPointsType="OptionalSingle"
											  ZoomMode="Disabled">
									<ItemsPresenter />
								</ScrollViewer>
							</Border>
						</Popup>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
</ResourceDictionary>

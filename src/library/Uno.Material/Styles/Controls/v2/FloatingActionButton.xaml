<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:toolkit="using:Uno.UI.Toolkit"
                    xmlns:um="using:Uno.Material"
                    mc:Ignorable="d">

	<!--#region Default FAB Brushes-->
	<StaticResource x:Key="MaterialFabForeground"
	                ResourceKey="OnPrimaryContainerBrush" />
	<StaticResource x:Key="MaterialFabBackground"
	                ResourceKey="PrimaryContainerBrush" />
	<StaticResource x:Key="MaterialFabDisabledBackground"
	                ResourceKey="SystemControlTransparentBrush" />
	<StaticResource x:Key="MaterialFabDisabledForeground"
	                ResourceKey="OnSurfaceDisabledBrush" />
	<StaticResource x:Key="MaterialFabPointerOverStateOverlay"
	                ResourceKey="OnPrimaryContainerHoverBrush" />
	<StaticResource x:Key="MaterialFabFocusedStateOverlay"
	                ResourceKey="OnPrimaryContainerFocusedBrush" />
	<StaticResource x:Key="MaterialFabPressedStateOverlay"
	                ResourceKey="OnPrimaryContainerPressedBrush" />
	<StaticResource x:Key="MaterialFabDisabledStateOverlay"
	                ResourceKey="OnSurfaceDisabledLowBrush" />
	<!--#endregion-->

	<!--#region Surface FAB Brushes-->
	<StaticResource x:Key="MaterialSurfaceFabForeground"
	                ResourceKey="PrimaryBrush" />
	<StaticResource x:Key="MaterialSurfaceFabBackground"
	                ResourceKey="SurfaceBrush" />
	<StaticResource x:Key="MaterialSurfaceFabDisabledForeground"
	                ResourceKey="OnSurfaceDisabledBrush" />
	<StaticResource x:Key="MaterialSurfaceFabPointerOverStateOverlay"
	                ResourceKey="PrimaryHoverBrush" />
	<StaticResource x:Key="MaterialSurfaceFabFocusedStateOverlay"
	                ResourceKey="PrimaryFocusedBrush" />
	<StaticResource x:Key="MaterialSurfaceFabPressedStateOverlay"
	                ResourceKey="PrimaryPressedBrush" />
	<StaticResource x:Key="MaterialSurfaceFabDisabledBackground"
	                ResourceKey="SystemControlTransparentBrush" />
	<StaticResource x:Key="MaterialSurfaceFabDisabledStateOverlay"
	                ResourceKey="OnSurfaceDisabledLowBrush" />
	<!--#endregion-->

	<!--#region Secondary FAB Brushes-->
	<StaticResource x:Key="MaterialSecondaryFabForeground"
	                ResourceKey="OnSecondaryContainerBrush" />
	<StaticResource x:Key="MaterialSecondaryFabBackground"
	                ResourceKey="SecondaryContainerBrush" />

	<StaticResource x:Key="MaterialSecondaryFabDisabledBackground"
	                ResourceKey="SystemControlTransparentBrush" />
	<StaticResource x:Key="MaterialSecondaryFabDisabledForeground"
	                ResourceKey="OnSurfaceDisabledBrush" />
	<StaticResource x:Key="MaterialSecondaryFabPointerOverStateOverlay"
	                ResourceKey="OnSecondaryContainerHoverBrush" />
	<StaticResource x:Key="MaterialSecondaryFabFocusedStateOverlay"
	                ResourceKey="OnSecondaryContainerFocusedBrush" />
	<StaticResource x:Key="MaterialSecondaryFabPressedStateOverlay"
	                ResourceKey="OnSecondaryContainerPressedBrush" />
	<StaticResource x:Key="MaterialSecondaryFabDisabledStateOverlay"
	                ResourceKey="OnSurfaceDisabledLowBrush" />
	<!--#endregion-->

	<!--#region Tertiary FAB Brushes-->
	<StaticResource x:Key="MaterialTertiaryFabForeground"
	                ResourceKey="OnTertiaryContainerBrush" />
	<StaticResource x:Key="MaterialTertiaryFabBackground"
	                ResourceKey="TertiaryContainerBrush" />

	<StaticResource x:Key="MaterialTertiaryFabDisabledBackground"
	                ResourceKey="SystemControlTransparentBrush" />
	<StaticResource x:Key="MaterialTertiaryFabDisabledForeground"
	                ResourceKey="OnSurfaceDisabledBrush" />
	<StaticResource x:Key="MaterialTertiaryFabPointerOverStateOverlay"
	                ResourceKey="OnTertiaryContainerHoverBrush" />
	<StaticResource x:Key="MaterialTertiaryFabFocusedStateOverlay"
	                ResourceKey="OnTertiaryContainerFocusedBrush" />
	<StaticResource x:Key="MaterialTertiaryFabPressedStateOverlay"
	                ResourceKey="OnTertiaryContainerFocusedBrush" />
	<StaticResource x:Key="MaterialTertiaryFabDisabledStateOverlay"
	                ResourceKey="OnSurfaceDisabledLowBrush" />
	<!--#endregion-->

	<!--#region Default FAB Resources-->
	<Thickness x:Key="MaterialFabPadding">20</Thickness>
	<x:Double x:Key="MaterialFabContentWidthOrHeight">16</x:Double>
	<CornerRadius x:Key="MaterialFabCornerRadius">16</CornerRadius>
	<!--#endregion-->

	<!--#region Small FAB Resources-->
	<Thickness x:Key="MaterialSmallFabPadding">12</Thickness>
	<x:Double x:Key="MaterialSmallFabContentWidthOrHeight">16</x:Double>
	<CornerRadius x:Key="MaterialSmallFabCornerRadius">12</CornerRadius>

	<!--#endregion-->

	<!--#region Large FAB Resources-->
	<Thickness x:Key="MaterialLargeFabPadding">36</Thickness>
	<x:Double x:Key="MaterialLargeFabContentWidthOrHeight">24</x:Double>
	<CornerRadius x:Key="MaterialLargeFabCornerRadius">28</CornerRadius>
	<!--#endregion-->

	<x:Double x:Key="MaterialFabIconTextPadding">12</x:Double>


	<!--#region Default Color Variants-->
	<Style x:Key="MaterialFabStyle"
	       TargetType="Button">
		<Setter Property="Background"
		        Value="{StaticResource MaterialFabBackground}" />
		<Setter Property="Foreground"
		        Value="{StaticResource MaterialFabForeground}" />
		<Setter Property="FontFamily"
		        Value="{ThemeResource MaterialMediumFontFamily}" />
		<Setter Property="FontSize"
		        Value="{ThemeResource LabelLargeFontSize}" />
		<Setter Property="FontWeight"
		        Value="{ThemeResource LabelLargeFontWeight}" />
		<Setter Property="HorizontalContentAlignment"
		        Value="Center" />
		<Setter Property="VerticalContentAlignment"
		        Value="Center" />
		<Setter Property="CornerRadius"
		        Value="{StaticResource MaterialFabCornerRadius}" />
		<Setter Property="Padding"
		        Value="{StaticResource MaterialFabPadding}" />

		<!--  Workaround for WinUI issue: https://github.com/microsoft/microsoft-ui-xaml/issues/6388  -->
		<Setter Property="um:ControlExtensions.Icon"
		        Value="{x:Null}" />
		<Setter Property="um:ControlExtensions.IconHeight"
		        Value="{StaticResource MaterialFabContentWidthOrHeight}" />
		<Setter Property="um:ControlExtensions.IconWidth"
		        Value="{StaticResource MaterialFabContentWidthOrHeight}" />

		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Button">
					<Grid>
						<toolkit:ElevatedView x:Name="ElevatedView"
						                      Margin="0,0,6,6"
						                      Background="Transparent"
						                      CornerRadius="{TemplateBinding CornerRadius}"
						                      Elevation="6">
							<um:Ripple x:Name="Ripple"
							           CornerRadius="{TemplateBinding CornerRadius}"
							           Feedback="{TemplateBinding Foreground}"
							           FeedbackOpacity="{StaticResource PressedOpacity}">

								<Grid x:Name="Root"
									  BorderBrush="{TemplateBinding BorderBrush}"
									  BorderThickness="{TemplateBinding BorderThickness}"
						              CornerRadius="{TemplateBinding CornerRadius}"
								      Background="{TemplateBinding Background}">
									<StackPanel x:Name="ContentPanel"
									            Padding="{TemplateBinding Padding}"
									            Orientation="Horizontal">

										<!--  Icon  -->
										<Viewbox Width="{Binding Path=(um:ControlExtensions.IconWidth), RelativeSource={RelativeSource TemplatedParent}}"
										         Height="{Binding Path=(um:ControlExtensions.IconHeight), RelativeSource={RelativeSource TemplatedParent}}"
										         HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
										         VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
										         Visibility="{Binding Path=(um:ControlExtensions.Icon), RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource MaterialNullToCollapsedConverter}, FallbackValue=Collapsed, TargetNullValue=Collapsed}">
											<ContentPresenter x:Name="IconPresenter"
											                  Content="{Binding Path=(um:ControlExtensions.Icon), RelativeSource={RelativeSource TemplatedParent}}"
											                  Foreground="{Binding Path=Foreground, RelativeSource={RelativeSource TemplatedParent}}" />
										</Viewbox>

										<!--  Icon/Content spacing  -->
										<Border Visibility="{Binding Path=Content, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource MaterialEmptyToCollapsed}, FallbackValue=Collapsed, TargetNullValue=Collapsed}">
											<Border Width="{StaticResource MaterialFabIconTextPadding}"
											        Visibility="{Binding Path=(um:ControlExtensions.Icon), RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource MaterialNullToCollapsedConverter}, FallbackValue=Collapsed, TargetNullValue=Collapsed}" />
										</Border>

										<!--  Content  -->
										<ContentPresenter x:Name="ContentPresenter"
										                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
										                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
										                  Content="{TemplateBinding Content}"
										                  ContentTemplate="{TemplateBinding ContentTemplate}"
										                  ContentTransitions="{TemplateBinding ContentTransitions}"
										                  FontFamily="{TemplateBinding FontFamily}"
										                  FontWeight="{TemplateBinding FontWeight}"
										                  FontSize="{TemplateBinding FontSize}" />
									</StackPanel>

									<Border x:Name="StateOverlay" />
								</Grid>
							</um:Ripple>
						</toolkit:ElevatedView>

						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">

								<VisualState x:Name="Normal" />

								<VisualState x:Name="PointerOver">
									<VisualState.Setters>
										<Setter Target="StateOverlay.Background"
										        Value="{StaticResource MaterialFabPointerOverStateOverlay}" />
									</VisualState.Setters>
								</VisualState>
								<VisualState x:Name="Pressed">
									<VisualState.Setters>
										<Setter Target="StateOverlay.Background"
										        Value="{StaticResource MaterialFabPressedStateOverlay}" />
									</VisualState.Setters>
								</VisualState>
								<VisualState x:Name="Disabled">
									<VisualState.Setters>
										<Setter Target="IconPresenter.Foreground"
										        Value="{StaticResource MaterialFabDisabledForeground}" />
										<Setter Target="ContentPresenter.Foreground"
										        Value="{StaticResource MaterialFabDisabledForeground}" />
										<Setter Target="Root.Background"
										        Value="{StaticResource MaterialFabDisabledBackground}" />
										<Setter Target="StateOverlay.Background"
										        Value="{StaticResource MaterialFabDisabledStateOverlay}" />
									</VisualState.Setters>
								</VisualState>
							</VisualStateGroup>

							<VisualStateGroup x:Name="FocusStates">

								<VisualState x:Name="Focused">
									<VisualState.Setters>
										<Setter Target="StateOverlay.Background"
										        Value="{StaticResource MaterialFabFocusedStateOverlay}" />
									</VisualState.Setters>
								</VisualState>

								<VisualState x:Name="PointerFocused" />

								<VisualState x:Name="Unfocused" />
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="MaterialSurfaceFabStyle"
	       BasedOn="{StaticResource MaterialFabStyle}"
	       TargetType="Button">

		<Setter Property="Background"
		        Value="{StaticResource MaterialSurfaceFabBackground}" />
		<Setter Property="Foreground"
		        Value="{ThemeResource MaterialSurfaceFabForeground}" />
		<Setter Property="FontFamily"
		        Value="{ThemeResource MaterialMediumFontFamily}" />
		<Setter Property="HorizontalContentAlignment"
		        Value="Center" />
		<Setter Property="VerticalContentAlignment"
		        Value="Center" />
		<Setter Property="CornerRadius"
		        Value="{StaticResource MaterialFabCornerRadius}" />
		<Setter Property="Padding"
		        Value="{StaticResource MaterialFabPadding}" />

		<!--  Workaround for WinUI issue: https://github.com/microsoft/microsoft-ui-xaml/issues/6388  -->
		<Setter Property="um:ControlExtensions.Icon"
		        Value="{x:Null}" />
		<Setter Property="um:ControlExtensions.IconHeight"
		        Value="{StaticResource MaterialFabContentWidthOrHeight}" />
		<Setter Property="um:ControlExtensions.IconWidth"
		        Value="{StaticResource MaterialFabContentWidthOrHeight}" />

		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Button">
					<Grid>
						<toolkit:ElevatedView x:Name="ElevatedView"
						                      Margin="0,0,6,6"
						                      Background="Transparent"
						                      CornerRadius="{TemplateBinding CornerRadius}"
						                      Elevation="6">
							<um:Ripple x:Name="Ripple"
							           CornerRadius="{TemplateBinding CornerRadius}"
							           Feedback="{TemplateBinding Foreground}"
							           FeedbackOpacity="{StaticResource PressedOpacity}">

								<Grid x:Name="Root"
								      BorderBrush="{TemplateBinding BorderBrush}"
								      BorderThickness="{TemplateBinding BorderThickness}"
								      CornerRadius="{TemplateBinding CornerRadius}"
								      Background="{TemplateBinding Background}">
									<StackPanel x:Name="ContentPanel"
									            Padding="{TemplateBinding Padding}"
									            Orientation="Horizontal">

										<!--  Icon  -->
										<Viewbox Width="{Binding Path=(um:ControlExtensions.IconWidth), RelativeSource={RelativeSource TemplatedParent}}"
										         Height="{Binding Path=(um:ControlExtensions.IconHeight), RelativeSource={RelativeSource TemplatedParent}}"
										         HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
										         VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
										         Visibility="{Binding Path=(um:ControlExtensions.Icon), RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource MaterialNullToCollapsedConverter}, FallbackValue=Collapsed, TargetNullValue=Collapsed}">
											<ContentPresenter x:Name="IconPresenter"
											                  Content="{Binding Path=(um:ControlExtensions.Icon), RelativeSource={RelativeSource TemplatedParent}}"
											                  Foreground="{Binding Path=Foreground, RelativeSource={RelativeSource TemplatedParent}}" />
										</Viewbox>

										<!--  Icon/Content spacing  -->
										<Border Visibility="{Binding Path=Content, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource MaterialEmptyToCollapsed}, FallbackValue=Collapsed, TargetNullValue=Collapsed}">
											<Border Width="{StaticResource MaterialFabIconTextPadding}"
											        Visibility="{Binding Path=(um:ControlExtensions.Icon), RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource MaterialNullToCollapsedConverter}, FallbackValue=Collapsed, TargetNullValue=Collapsed}" />
										</Border>

										<!--  Content  -->
										<ContentPresenter x:Name="ContentPresenter"
										                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
										                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
										                  Content="{TemplateBinding Content}"
										                  ContentTemplate="{TemplateBinding ContentTemplate}"
										                  ContentTransitions="{TemplateBinding ContentTransitions}"
										                  FontFamily="{TemplateBinding FontFamily}"
														  FontWeight="{TemplateBinding FontWeight}"
										                  FontSize="{TemplateBinding FontSize}" />
									</StackPanel>

									<Border x:Name="StateOverlay" />
								</Grid>
							</um:Ripple>
						</toolkit:ElevatedView>

						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">

								<VisualState x:Name="Normal" />

								<VisualState x:Name="PointerOver">
									<VisualState.Setters>
										<Setter Target="StateOverlay.Background"
										        Value="{StaticResource MaterialSurfaceFabPointerOverStateOverlay}" />
									</VisualState.Setters>
								</VisualState>
								<VisualState x:Name="Pressed">
									<VisualState.Setters>
										<Setter Target="StateOverlay.Background"
										        Value="{StaticResource MaterialSurfaceFabPressedStateOverlay}" />
									</VisualState.Setters>
								</VisualState>
								<VisualState x:Name="Disabled">
									<VisualState.Setters>
										<Setter Target="IconPresenter.Foreground"
										        Value="{StaticResource MaterialSurfaceFabDisabledForeground}" />
										<Setter Target="ContentPresenter.Foreground"
										        Value="{StaticResource MaterialSurfaceFabDisabledForeground}" />
										<Setter Target="Root.Background"
										        Value="{StaticResource MaterialSurfaceFabDisabledBackground}" />
										<Setter Target="StateOverlay.Background"
										        Value="{StaticResource MaterialSurfaceFabDisabledStateOverlay}" />
									</VisualState.Setters>
								</VisualState>
							</VisualStateGroup>

							<VisualStateGroup x:Name="FocusStates">

								<VisualState x:Name="Focused">
									<VisualState.Setters>
										<Setter Target="StateOverlay.Background"
										        Value="{StaticResource MaterialSurfaceFabFocusedStateOverlay}" />
									</VisualState.Setters>
								</VisualState>

								<VisualState x:Name="PointerFocused" />

								<VisualState x:Name="Unfocused" />
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="MaterialSecondaryFabStyle"
	       BasedOn="{StaticResource MaterialFabStyle}"
	       TargetType="Button">

		<Setter Property="Background"
		        Value="{StaticResource MaterialSecondaryFabBackground}" />
		<Setter Property="Foreground"
		        Value="{StaticResource MaterialSecondaryFabForeground}" />
		<Setter Property="FontFamily"
		        Value="{ThemeResource MaterialMediumFontFamily}" />
		<Setter Property="HorizontalContentAlignment"
		        Value="Center" />
		<Setter Property="VerticalContentAlignment"
		        Value="Center" />
		<Setter Property="CornerRadius"
		        Value="{StaticResource MaterialFabCornerRadius}" />
		<Setter Property="Padding"
		        Value="{StaticResource MaterialFabPadding}" />

		<!--  Workaround for WinUI issue: https://github.com/microsoft/microsoft-ui-xaml/issues/6388  -->
		<Setter Property="um:ControlExtensions.Icon"
		        Value="{x:Null}" />
		<Setter Property="um:ControlExtensions.IconHeight"
		        Value="{StaticResource MaterialFabContentWidthOrHeight}" />
		<Setter Property="um:ControlExtensions.IconWidth"
		        Value="{StaticResource MaterialFabContentWidthOrHeight}" />

		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Button">
					<Grid>
						<toolkit:ElevatedView x:Name="ElevatedView"
						                      Margin="0,0,6,6"
						                      Background="Transparent"
						                      CornerRadius="{TemplateBinding CornerRadius}"
						                      Elevation="6">
							<um:Ripple x:Name="Ripple"
							           CornerRadius="{TemplateBinding CornerRadius}"
							           Feedback="{TemplateBinding Foreground}"
							           FeedbackOpacity="{StaticResource PressedOpacity}">

								<Grid x:Name="Root"
								      BorderBrush="{TemplateBinding BorderBrush}"
								      BorderThickness="{TemplateBinding BorderThickness}"
								      CornerRadius="{TemplateBinding CornerRadius}"
								      Background="{TemplateBinding Background}">
									<StackPanel x:Name="ContentPanel"
									            Padding="{TemplateBinding Padding}"
									            Orientation="Horizontal">

										<!--  Icon  -->
										<Viewbox Width="{Binding Path=(um:ControlExtensions.IconWidth), RelativeSource={RelativeSource TemplatedParent}}"
										         Height="{Binding Path=(um:ControlExtensions.IconHeight), RelativeSource={RelativeSource TemplatedParent}}"
										         HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
										         VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
										         Visibility="{Binding Path=(um:ControlExtensions.Icon), RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource MaterialNullToCollapsedConverter}, FallbackValue=Collapsed, TargetNullValue=Collapsed}">
											<ContentPresenter x:Name="IconPresenter"
											                  Content="{Binding Path=(um:ControlExtensions.Icon), RelativeSource={RelativeSource TemplatedParent}}"
											                  Foreground="{Binding Path=Foreground, RelativeSource={RelativeSource TemplatedParent}}" />
										</Viewbox>

										<!--  Icon/Content spacing  -->
										<Border Visibility="{Binding Path=Content, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource MaterialEmptyToCollapsed}, FallbackValue=Collapsed, TargetNullValue=Collapsed}">
											<Border Width="{StaticResource MaterialFabIconTextPadding}"
											        Visibility="{Binding Path=(um:ControlExtensions.Icon), RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource MaterialNullToCollapsedConverter}, FallbackValue=Collapsed, TargetNullValue=Collapsed}" />
										</Border>

										<!--  Content  -->
										<ContentPresenter x:Name="ContentPresenter"
										                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
										                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
										                  Content="{TemplateBinding Content}"
										                  ContentTemplate="{TemplateBinding ContentTemplate}"
										                  ContentTransitions="{TemplateBinding ContentTransitions}"
										                  FontFamily="{TemplateBinding FontFamily}"
														  FontWeight="{TemplateBinding FontWeight}"
										                  FontSize="{TemplateBinding FontSize}" />
									</StackPanel>

									<Border x:Name="StateOverlay" />
								</Grid>
							</um:Ripple>
						</toolkit:ElevatedView>

						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">

								<VisualState x:Name="Normal" />

								<VisualState x:Name="PointerOver">
									<VisualState.Setters>
										<Setter Target="StateOverlay.Background"
										        Value="{StaticResource MaterialSecondaryFabPointerOverStateOverlay}" />
									</VisualState.Setters>
								</VisualState>
								<VisualState x:Name="Pressed">
									<VisualState.Setters>
										<Setter Target="StateOverlay.Background"
										        Value="{StaticResource MaterialSecondaryFabPressedStateOverlay}" />
									</VisualState.Setters>
								</VisualState>
								<VisualState x:Name="Disabled">
									<VisualState.Setters>
										<Setter Target="IconPresenter.Foreground"
										        Value="{StaticResource MaterialSecondaryFabDisabledForeground}" />
										<Setter Target="ContentPresenter.Foreground"
										        Value="{StaticResource MaterialSecondaryFabDisabledForeground}" />
										<Setter Target="Root.Background"
										        Value="{StaticResource MaterialSecondaryFabDisabledBackground}" />
										<Setter Target="StateOverlay.Background"
										        Value="{StaticResource MaterialSecondaryFabDisabledStateOverlay}" />
									</VisualState.Setters>
								</VisualState>
							</VisualStateGroup>

							<VisualStateGroup x:Name="FocusStates">

								<VisualState x:Name="Focused">
									<VisualState.Setters>
										<Setter Target="StateOverlay.Background"
										        Value="{StaticResource MaterialSecondaryFabFocusedStateOverlay}" />
									</VisualState.Setters>
								</VisualState>

								<VisualState x:Name="PointerFocused" />

								<VisualState x:Name="Unfocused" />
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="MaterialTertiaryFabStyle"
	       BasedOn="{StaticResource MaterialFabStyle}"
	       TargetType="Button">

		<Setter Property="Background"
		        Value="{StaticResource MaterialTertiaryFabBackground}" />
		<Setter Property="Foreground"
		        Value="{StaticResource MaterialTertiaryFabForeground}" />
		<Setter Property="FontFamily"
		        Value="{ThemeResource MaterialMediumFontFamily}" />
		<Setter Property="HorizontalContentAlignment"
		        Value="Center" />
		<Setter Property="VerticalContentAlignment"
		        Value="Center" />
		<Setter Property="CornerRadius"
		        Value="{StaticResource MaterialFabCornerRadius}" />
		<Setter Property="Padding"
		        Value="{StaticResource MaterialFabPadding}" />

		<!--  Workaround for WinUI issue: https://github.com/microsoft/microsoft-ui-xaml/issues/6388  -->
		<Setter Property="um:ControlExtensions.Icon"
		        Value="{x:Null}" />
		<Setter Property="um:ControlExtensions.IconHeight"
		        Value="{StaticResource MaterialFabContentWidthOrHeight}" />
		<Setter Property="um:ControlExtensions.IconWidth"
		        Value="{StaticResource MaterialFabContentWidthOrHeight}" />

		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Button">
					<Grid>
						<toolkit:ElevatedView x:Name="ElevatedView"
						                      Margin="0,0,6,6"
						                      Background="Transparent"
						                      CornerRadius="{TemplateBinding CornerRadius}"
						                      Elevation="6">
							<um:Ripple x:Name="Ripple"
							           CornerRadius="{TemplateBinding CornerRadius}"
							           Feedback="{TemplateBinding Foreground}"
							           FeedbackOpacity="{StaticResource PressedOpacity}">

								<Grid x:Name="Root"
								      BorderBrush="{TemplateBinding BorderBrush}"
								      BorderThickness="{TemplateBinding BorderThickness}"
								      CornerRadius="{TemplateBinding CornerRadius}"
								      Background="{TemplateBinding Background}">
									<StackPanel x:Name="ContentPanel"
									            Padding="{TemplateBinding Padding}"
									            Orientation="Horizontal">

										<!--  Icon  -->
										<Viewbox Width="{Binding Path=(um:ControlExtensions.IconWidth), RelativeSource={RelativeSource TemplatedParent}}"
										         Height="{Binding Path=(um:ControlExtensions.IconHeight), RelativeSource={RelativeSource TemplatedParent}}"
										         HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
										         VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
										         Visibility="{Binding Path=(um:ControlExtensions.Icon), RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource MaterialNullToCollapsedConverter}, FallbackValue=Collapsed, TargetNullValue=Collapsed}">
											<ContentPresenter x:Name="IconPresenter"
											                  Content="{Binding Path=(um:ControlExtensions.Icon), RelativeSource={RelativeSource TemplatedParent}}"
											                  Foreground="{Binding Path=Foreground, RelativeSource={RelativeSource TemplatedParent}}" />
										</Viewbox>

										<!--  Icon/Content spacing  -->
										<Border Visibility="{Binding Path=Content, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource MaterialEmptyToCollapsed}, FallbackValue=Collapsed, TargetNullValue=Collapsed}">
											<Border Width="{StaticResource MaterialFabIconTextPadding}"
											        Visibility="{Binding Path=(um:ControlExtensions.Icon), RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource MaterialNullToCollapsedConverter}, FallbackValue=Collapsed, TargetNullValue=Collapsed}" />
										</Border>

										<!--  Content  -->
										<ContentPresenter x:Name="ContentPresenter"
										                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
										                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
										                  Content="{TemplateBinding Content}"
										                  ContentTemplate="{TemplateBinding ContentTemplate}"
										                  ContentTransitions="{TemplateBinding ContentTransitions}"
										                  FontFamily="{TemplateBinding FontFamily}"
														  FontWeight="{TemplateBinding FontWeight}"
										                  FontSize="{TemplateBinding FontSize}" />
									</StackPanel>

									<Border x:Name="StateOverlay" />
								</Grid>
							</um:Ripple>
						</toolkit:ElevatedView>

						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">

								<VisualState x:Name="Normal" />

								<VisualState x:Name="PointerOver">
									<VisualState.Setters>
										<Setter Target="StateOverlay.Background"
										        Value="{StaticResource MaterialTertiaryFabPointerOverStateOverlay}" />
									</VisualState.Setters>
								</VisualState>
								<VisualState x:Name="Pressed">
									<VisualState.Setters>
										<Setter Target="StateOverlay.Background"
										        Value="{StaticResource MaterialTertiaryFabPressedStateOverlay}" />
									</VisualState.Setters>
								</VisualState>
								<VisualState x:Name="Disabled">
									<VisualState.Setters>
										<Setter Target="IconPresenter.Foreground"
										        Value="{StaticResource MaterialTertiaryFabDisabledForeground}" />
										<Setter Target="ContentPresenter.Foreground"
										        Value="{StaticResource MaterialTertiaryFabDisabledForeground}" />
										<Setter Target="Root.Background"
										        Value="{StaticResource MaterialTertiaryFabDisabledBackground}" />
										<Setter Target="StateOverlay.Background"
										        Value="{StaticResource MaterialTertiaryFabDisabledStateOverlay}" />
									</VisualState.Setters>
								</VisualState>
							</VisualStateGroup>

							<VisualStateGroup x:Name="FocusStates">

								<VisualState x:Name="Focused">
									<VisualState.Setters>
										<Setter Target="StateOverlay.Background"
										        Value="{StaticResource MaterialTertiaryFabFocusedStateOverlay}" />
									</VisualState.Setters>
								</VisualState>

								<VisualState x:Name="PointerFocused" />

								<VisualState x:Name="Unfocused" />
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<!--#endregion-->

	<!--#region Small Color Variants-->

	<Style x:Key="MaterialSmallFabStyle"
	       BasedOn="{StaticResource MaterialFabStyle}"
	       TargetType="Button">
		<Setter Property="CornerRadius"
		        Value="{StaticResource MaterialSmallFabCornerRadius}" />
		<Setter Property="Padding"
		        Value="{StaticResource MaterialSmallFabPadding}" />
		<Setter Property="um:ControlExtensions.IconHeight"
		        Value="{StaticResource MaterialSmallFabContentWidthOrHeight}" />
		<Setter Property="um:ControlExtensions.IconWidth"
		        Value="{StaticResource MaterialSmallFabContentWidthOrHeight}" />
	</Style>

	<Style x:Key="MaterialSurfaceSmallFabStyle"
	       BasedOn="{StaticResource MaterialSurfaceFabStyle}"
	       TargetType="Button">
		<Setter Property="CornerRadius"
		        Value="{StaticResource MaterialSmallFabCornerRadius}" />
		<Setter Property="Padding"
		        Value="{StaticResource MaterialSmallFabPadding}" />
		<Setter Property="um:ControlExtensions.IconHeight"
		        Value="{StaticResource MaterialSmallFabContentWidthOrHeight}" />
		<Setter Property="um:ControlExtensions.IconWidth"
		        Value="{StaticResource MaterialSmallFabContentWidthOrHeight}" />
	</Style>

	<Style x:Key="MaterialSecondarySmallFabStyle"
	       BasedOn="{StaticResource MaterialSecondaryFabStyle}"
	       TargetType="Button">
		<Setter Property="CornerRadius"
		        Value="{StaticResource MaterialSmallFabCornerRadius}" />
		<Setter Property="Padding"
		        Value="{StaticResource MaterialSmallFabPadding}" />
		<Setter Property="um:ControlExtensions.IconHeight"
		        Value="{StaticResource MaterialSmallFabContentWidthOrHeight}" />
		<Setter Property="um:ControlExtensions.IconWidth"
		        Value="{StaticResource MaterialSmallFabContentWidthOrHeight}" />
	</Style>

	<Style x:Key="MaterialTertiarySmallFabStyle"
	       BasedOn="{StaticResource MaterialTertiaryFabStyle}"
	       TargetType="Button">
		<Setter Property="CornerRadius"
		        Value="{StaticResource MaterialSmallFabCornerRadius}" />
		<Setter Property="Padding"
		        Value="{StaticResource MaterialSmallFabPadding}" />
		<Setter Property="um:ControlExtensions.IconHeight"
		        Value="{StaticResource MaterialSmallFabContentWidthOrHeight}" />
		<Setter Property="um:ControlExtensions.IconWidth"
		        Value="{StaticResource MaterialSmallFabContentWidthOrHeight}" />
	</Style>
	<!--#endregion-->

	<!--#region Large Color Variants-->
	<Style x:Key="MaterialLargeFabStyle"
	       BasedOn="{StaticResource MaterialFabStyle}"
	       TargetType="Button">
		<Setter Property="CornerRadius"
		        Value="{StaticResource MaterialLargeFabCornerRadius}" />
		<Setter Property="Padding"
		        Value="{StaticResource MaterialLargeFabPadding}" />
		<Setter Property="um:ControlExtensions.IconHeight"
		        Value="{StaticResource MaterialLargeFabContentWidthOrHeight}" />
		<Setter Property="um:ControlExtensions.IconWidth"
		        Value="{StaticResource MaterialLargeFabContentWidthOrHeight}" />
	</Style>

	<Style x:Key="MaterialSurfaceLargeFabStyle"
	       BasedOn="{StaticResource MaterialSurfaceFabStyle}"
	       TargetType="Button">
		<Setter Property="CornerRadius"
		        Value="{StaticResource MaterialLargeFabCornerRadius}" />
		<Setter Property="Padding"
		        Value="{StaticResource MaterialLargeFabPadding}" />
		<Setter Property="um:ControlExtensions.IconHeight"
		        Value="{StaticResource MaterialLargeFabContentWidthOrHeight}" />
		<Setter Property="um:ControlExtensions.IconWidth"
		        Value="{StaticResource MaterialLargeFabContentWidthOrHeight}" />
	</Style>
	<Style x:Key="MaterialSecondaryLargeFabStyle"
	       BasedOn="{StaticResource MaterialSecondaryFabStyle}"
	       TargetType="Button">
		<Setter Property="CornerRadius"
		        Value="{StaticResource MaterialLargeFabCornerRadius}" />
		<Setter Property="Padding"
		        Value="{StaticResource MaterialLargeFabPadding}" />
		<Setter Property="um:ControlExtensions.IconHeight"
		        Value="{StaticResource MaterialLargeFabContentWidthOrHeight}" />
		<Setter Property="um:ControlExtensions.IconWidth"
		        Value="{StaticResource MaterialLargeFabContentWidthOrHeight}" />
	</Style>
	<Style x:Key="MaterialTertiaryLargeFabStyle"
	       BasedOn="{StaticResource MaterialTertiaryFabStyle}"
	       TargetType="Button">
		<Setter Property="CornerRadius"
		        Value="{StaticResource MaterialLargeFabCornerRadius}" />
		<Setter Property="Padding"
		        Value="{StaticResource MaterialLargeFabPadding}" />
		<Setter Property="um:ControlExtensions.IconHeight"
		        Value="{StaticResource MaterialLargeFabContentWidthOrHeight}" />
		<Setter Property="um:ControlExtensions.IconWidth"
		        Value="{StaticResource MaterialLargeFabContentWidthOrHeight}" />
	</Style>
	<!--#endregion-->
</ResourceDictionary>

<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
					xmlns:ios="http://uno.ui/ios"
					xmlns:macos="http://uno.ui/macos"
					xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
					xmlns:not_macos="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					xmlns:um="using:Uno.Material"
					xmlns:ut="using:Uno.Themes"
					mc:Ignorable="ios macos">

	<!--
		NOTE:
		Expected PasswordBox behavior:
		We are going a different route than the Official Material M2/M3 Google samples & the Material doc regarding the fact that the Placeholder will always be visible.
		(cf. specs discussions here https://github.com/unoplatform/Uno.Themes/issues/974)

		- Without Header/Placeholder: Simple PasswordBox

		- With placeholder but no header: The placeholder will be displayed where the text is supposed to be until text is inputed

		- With header but no placeholder: The header will be displayed where the text is supposed to be and will move up when focused

		- Whith header and placeholder: The header will be displayed at the top and the placeholder will be displayed where the text is supposed to be until text is inputed
	-->

	<!-- Converters -->
	<um:FromTextBoxEmptyStringToValueConverter x:Key="PlaceholderContentCompositeTransformTranslateY"
											   HeaderAndPlaceholderValue="8"
											   HeaderOnlyValue="0"
											   HeaderOnlyWithTextValue="8"
											   PlaceholderOnlyValue="0"
											   NoHeaderAndNoPlaceholderValue="0" />

	<um:FromTextBoxEmptyStringToValueConverter x:Key="FocusedPlaceholderContentCompositeTransformTranslateY"
											   HeaderAndPlaceholderValue="8"
											   HeaderOnlyValue="8"
											   HeaderOnlyWithTextValue="8"
											   PlaceholderOnlyValue="0"
											   NoHeaderAndNoPlaceholderValue="0" />

	<um:FromTextBoxEmptyStringToValueConverter x:Key="HeaderCompositeTransformTranslateY"
											   HeaderAndPlaceholderValue="-11"
											   HeaderOnlyValue="0"
											   HeaderOnlyWithTextValue="-11"
											   PlaceholderOnlyValue="0"
											   NoHeaderAndNoPlaceholderValue="0" />

	<um:FromTextBoxEmptyStringToValueConverter x:Key="HeaderCompositeTransformScales"
											   HeaderAndPlaceholderValue="0.7"
											   HeaderOnlyValue="1"
											   HeaderOnlyWithTextValue="0.7"
											   PlaceholderOnlyValue="1"
											   NoHeaderAndNoPlaceholderValue="1" />

	<ResourceDictionary.ThemeDictionaries>
		<ResourceDictionary x:Key="Default">
			<!--#region Glyph-->
			<x:String x:Key="PasswordBoxRevealGlyphPathData">M11 0.5C6 0.5 1.73 3.61 0 8C1.73 12.39 6 15.5 11 15.5C16 15.5 20.27 12.39 22 8C20.27 3.61 16 0.5 11 0.5ZM11 13C8.24 13 6 10.76 6 8C6 5.24 8.24 3 11 3C13.76 3 16 5.24 16 8C16 10.76 13.76 13 11 13ZM11 5C9.34 5 8 6.34 8 8C8 9.66 9.34 11 11 11C12.66 11 14 9.66 14 8C14 6.34 12.66 5 11 5Z</x:String>
			<!--#endregion-->

			<!--#region MaterialRevealButtonStyle-->
			<StaticResource x:Key="PasswordBoxRevealButtonForeground" ResourceKey="OnSurfaceVariantBrush" />
			<!--#endregion-->

			<!--#region Leading Icon Brushes-->
			<StaticResource x:Key="PasswordBoxLeadingIconForeground" ResourceKey="OnSurfaceVariantBrush" />
			<StaticResource x:Key="PasswordBoxLeadingIconForegroundDisabled" ResourceKey="OnSurfaceLowBrush" />
			<!--#endregion-->

			<!--#region MaterialFilledPasswordBoxStyle-->
			<StaticResource x:Key="FilledPasswordBoxBackground" ResourceKey="SurfaceVariantBrush" />
			<StaticResource x:Key="FilledPasswordBoxBackgroundPointerOver" ResourceKey="OnSurfaceVariantHoverBrush" />
			<StaticResource x:Key="FilledPasswordBoxBackgroundFocused" ResourceKey="SurfaceVariantBrush" />
			<StaticResource x:Key="FilledPasswordBoxBackgroundDisabled" ResourceKey="OnSurfaceDisabledBrush" />

			<StaticResource x:Key="FilledPasswordBoxBorderBrush" ResourceKey="OnSurfaceVariantBrush" />
			<StaticResource x:Key="FilledPasswordBoxBorderBrushPointerOver" ResourceKey="OnSurfaceBrush" />
			<StaticResource x:Key="FilledPasswordBoxBorderBrushFocused" ResourceKey="PrimaryBrush" />
			<StaticResource x:Key="FilledPasswordBoxBorderBrushDisabled" ResourceKey="OnSurfaceDisabledBrush" />

			<StaticResource x:Key="FilledPasswordBoxForeground" ResourceKey="OnSurfaceBrush" />
			<StaticResource x:Key="FilledPasswordBoxForegroundPointerOver" ResourceKey="OnSurfaceBrush" />
			<StaticResource x:Key="FilledPasswordBoxForegroundFocused" ResourceKey="OnSurfaceBrush" />
			<!-- In this case the opacity is not applied to the brush directly - known issue for ContentElement -->
			<StaticResource x:Key="FilledPasswordBoxForegroundDisabled" ResourceKey="OnSurfaceBrush" />
			<StaticResource x:Key="FilledPasswordBoxForegroundOpacityDisabled" ResourceKey="LowOpacity" />

			<StaticResource x:Key="FilledPasswordBoxPlaceholderForeground" ResourceKey="OnSurfaceVariantBrush" />
			<StaticResource x:Key="FilledPasswordBoxPlaceholderForegroundPointerOver" ResourceKey="OnSurfaceVariantBrush" />
			<StaticResource x:Key="FilledPasswordBoxPlaceholderForegroundFocused" ResourceKey="OnSurfaceBrush" />
			<StaticResource x:Key="FilledPasswordBoxPlaceholderForegroundDisabled" ResourceKey="OnSurfaceLowBrush" />

			<StaticResource x:Key="FilledPasswordBoxHeaderForeground" ResourceKey="OnSurfaceVariantBrush" />
			<StaticResource x:Key="FilledPasswordBoxHeaderForegroundPointerOver" ResourceKey="OnSurfaceVariantBrush" />
			<StaticResource x:Key="FilledPasswordBoxHeaderForegroundFocused" ResourceKey="PrimaryBrush" />
			<StaticResource x:Key="FilledPasswordBoxHeaderForegroundDisabled" ResourceKey="OnSurfaceLowBrush" />

			<StaticResource x:Key="FilledPasswordBoxRevealButtonForeground" ResourceKey="OnSurfaceVariantBrush" />
			<!--#endregion-->

			<!--#region FilledPasswordBoxTypo-->
			<StaticResource x:Key="FilledPasswordBoxFontFamily" ResourceKey="BodyLargeFontFamily" />
			<StaticResource x:Key="FilledPasswordBoxFontWeight" ResourceKey="BodyLargeFontWeight" />
			<StaticResource x:Key="FilledPasswordBoxFontSize" ResourceKey="BodyLargeFontSize" />
			<StaticResource x:Key="FilledPasswordBoxCharacterSpacing" ResourceKey="BodyLargeCharacterSpacing" />
			<!--#endregion-->

			<!--#region MaterialOutlinedPasswordBoxStyle-->
			<StaticResource x:Key="OutlinedPasswordBoxBackground" ResourceKey="SystemControlTransparentBrush" />
			<StaticResource x:Key="OutlinedPasswordBoxBackgroundPointerOver" ResourceKey="SystemControlTransparentBrush" />
			<StaticResource x:Key="OutlinedPasswordBoxBackgroundFocused" ResourceKey="SystemControlTransparentBrush" />
			<StaticResource x:Key="OutlinedPasswordBoxBackgroundDisabled" ResourceKey="SystemControlTransparentBrush" />

			<StaticResource x:Key="OutlinedPasswordBoxBorderBrush" ResourceKey="OutlineBrush" />
			<StaticResource x:Key="OutlinedPasswordBoxBorderBrushPointerOver" ResourceKey="OnSurfaceBrush" />
			<StaticResource x:Key="OutlinedPasswordBoxBorderBrushFocused" ResourceKey="PrimaryBrush" />
			<StaticResource x:Key="OutlinedPasswordBoxBorderBrushDisabled" ResourceKey="OnSurfaceDisabledBrush" />

			<StaticResource x:Key="OutlinedPasswordBoxForeground" ResourceKey="OnSurfaceBrush" />
			<StaticResource x:Key="OutlinedPasswordBoxForegroundPointerOver" ResourceKey="OnSurfaceBrush" />
			<StaticResource x:Key="OutlinedPasswordBoxForegroundFocused" ResourceKey="OnSurfaceBrush" />
			<!-- In this case the opacity is not applied to the brush directly - known issue for ContentElement -->
			<StaticResource x:Key="OutlinedPasswordBoxForegroundDisabled" ResourceKey="OnSurfaceBrush" />
			<StaticResource x:Key="OutlinedPasswordBoxForegroundOpacityDisabled" ResourceKey="LowOpacity" />

			<StaticResource x:Key="OutlinedPasswordBoxPlaceholderForeground" ResourceKey="OnSurfaceVariantBrush" />
			<StaticResource x:Key="OutlinedPasswordBoxPlaceholderForegroundPointerOver" ResourceKey="OnSurfaceBrush" />
			<StaticResource x:Key="OutlinedPasswordBoxPlaceholderForegroundFocused" ResourceKey="OnSurfaceBrush" />
			<StaticResource x:Key="OutlinedPasswordBoxPlaceholderForegroundDisabled" ResourceKey="OnSurfaceLowBrush" />

			<StaticResource x:Key="OutlinedPasswordBoxHeaderForeground" ResourceKey="OnSurfaceVariantBrush" />
			<StaticResource x:Key="OutlinedPasswordBoxHeaderForegroundPointerOver" ResourceKey="OnSurfaceVariantBrush" />
			<StaticResource x:Key="OutlinedPasswordBoxHeaderForegroundFocused" ResourceKey="PrimaryBrush" />
			<StaticResource x:Key="OutlinedPasswordBoxHeaderForegroundDisabled" ResourceKey="OnSurfaceLowBrush" />
			<!--#endregion-->

			<!--#region OutlinedPasswordBoxTypo-->
			<StaticResource x:Key="OutlinedPasswordBoxFontFamily" ResourceKey="BodyLargeFontFamily" />
			<StaticResource x:Key="OutlinedPasswordBoxFontWeight" ResourceKey="BodyLargeFontWeight" />
			<StaticResource x:Key="OutlinedPasswordBoxFontSize" ResourceKey="BodyLargeFontSize" />
			<StaticResource x:Key="OutlinedPasswordBoxCharacterSpacing" ResourceKey="BodyLargeCharacterSpacing" />
			<!--#endregion-->

			<CornerRadius x:Key="OutlinedPasswordBoxCornerRadius">4</CornerRadius>
			<x:Double x:Key="OutlinedPasswordBoxMinHeight">58</x:Double>
			<Thickness x:Key="OutlinedPasswordBoxBorderPadding">1</Thickness>
			<Thickness x:Key="OutlinedPasswordBoxBorderThickness">1</Thickness>
			<Thickness x:Key="OutlinedPasswordBoxPadding">16,8</Thickness>
			<Thickness x:Key="OutlinedPasswordBoxBorderThicknessPointerOver">2</Thickness>
			<Thickness x:Key="OutlinedPasswordBoxBorderPaddingPointerOver">0</Thickness>
			<Thickness x:Key="OutlinedPasswordBoxBorderThicknessFocused">2</Thickness>
			<Thickness x:Key="OutlinedPasswordBoxBorderPaddingFocused">1</Thickness>

			<CornerRadius x:Key="FilledPasswordBoxCornerRadius">4,4,0,0</CornerRadius>
			<x:Double x:Key="FilledPasswordBoxMinHeight">56</x:Double>
			<x:Double x:Key="FilledPasswordBoxBorderHeightPointerOver">2</x:Double>
			<x:Double x:Key="FilledPasswordBoxBorderHeightFocused">2</x:Double>
			<Thickness x:Key="FilledPasswordBoxPadding">16,8</Thickness>
		</ResourceDictionary>
		<ResourceDictionary x:Key="Light">
			<!--#region Glyph-->
			<x:String x:Key="PasswordBoxRevealGlyphPathData">M11 0.5C6 0.5 1.73 3.61 0 8C1.73 12.39 6 15.5 11 15.5C16 15.5 20.27 12.39 22 8C20.27 3.61 16 0.5 11 0.5ZM11 13C8.24 13 6 10.76 6 8C6 5.24 8.24 3 11 3C13.76 3 16 5.24 16 8C16 10.76 13.76 13 11 13ZM11 5C9.34 5 8 6.34 8 8C8 9.66 9.34 11 11 11C12.66 11 14 9.66 14 8C14 6.34 12.66 5 11 5Z</x:String>
			<!--#endregion-->

			<!--#region MaterialRevealButtonStyle-->
			<StaticResource x:Key="PasswordBoxRevealButtonForeground" ResourceKey="OnSurfaceVariantBrush" />
			<!--#endregion-->

			<!--#region Leading Icon Brushes-->
			<StaticResource x:Key="PasswordBoxLeadingIconForeground" ResourceKey="OnSurfaceVariantBrush" />
			<StaticResource x:Key="PasswordBoxLeadingIconForegroundDisabled" ResourceKey="OnSurfaceLowBrush" />
			<!--#endregion-->

			<!--#region MaterialFilledPasswordBoxStyle-->
			<StaticResource x:Key="FilledPasswordBoxBackground" ResourceKey="SurfaceVariantBrush" />
			<StaticResource x:Key="FilledPasswordBoxBackgroundPointerOver" ResourceKey="OnSurfaceVariantHoverBrush" />
			<StaticResource x:Key="FilledPasswordBoxBackgroundFocused" ResourceKey="SurfaceVariantBrush" />
			<StaticResource x:Key="FilledPasswordBoxBackgroundDisabled" ResourceKey="OnSurfaceDisabledBrush" />

			<StaticResource x:Key="FilledPasswordBoxBorderBrush" ResourceKey="OnSurfaceVariantBrush" />
			<StaticResource x:Key="FilledPasswordBoxBorderBrushPointerOver" ResourceKey="OnSurfaceBrush" />
			<StaticResource x:Key="FilledPasswordBoxBorderBrushFocused" ResourceKey="PrimaryBrush" />
			<StaticResource x:Key="FilledPasswordBoxBorderBrushDisabled" ResourceKey="OnSurfaceDisabledBrush" />

			<StaticResource x:Key="FilledPasswordBoxForeground" ResourceKey="OnSurfaceBrush" />
			<StaticResource x:Key="FilledPasswordBoxForegroundPointerOver" ResourceKey="OnSurfaceBrush" />
			<StaticResource x:Key="FilledPasswordBoxForegroundFocused" ResourceKey="OnSurfaceBrush" />
			<!-- In this case the opacity is not applied to the brush directly - known issue for ContentElement -->
			<StaticResource x:Key="FilledPasswordBoxForegroundDisabled" ResourceKey="OnSurfaceBrush" />
			<StaticResource x:Key="FilledPasswordBoxForegroundOpacityDisabled" ResourceKey="LowOpacity" />

			<StaticResource x:Key="FilledPasswordBoxPlaceholderForeground" ResourceKey="OnSurfaceVariantBrush" />
			<StaticResource x:Key="FilledPasswordBoxPlaceholderForegroundPointerOver" ResourceKey="OnSurfaceVariantBrush" />
			<StaticResource x:Key="FilledPasswordBoxPlaceholderForegroundFocused" ResourceKey="OnSurfaceBrush" />
			<StaticResource x:Key="FilledPasswordBoxPlaceholderForegroundDisabled" ResourceKey="OnSurfaceLowBrush" />

			<StaticResource x:Key="FilledPasswordBoxHeaderForeground" ResourceKey="OnSurfaceVariantBrush" />
			<StaticResource x:Key="FilledPasswordBoxHeaderForegroundPointerOver" ResourceKey="OnSurfaceVariantBrush" />
			<StaticResource x:Key="FilledPasswordBoxHeaderForegroundFocused" ResourceKey="PrimaryBrush" />
			<StaticResource x:Key="FilledPasswordBoxHeaderForegroundDisabled" ResourceKey="OnSurfaceLowBrush" />

			<StaticResource x:Key="FilledPasswordBoxRevealButtonForeground" ResourceKey="OnSurfaceVariantBrush" />
			<!--#endregion-->

			<!--#region FilledPasswordBoxTypo-->
			<StaticResource x:Key="FilledPasswordBoxFontFamily" ResourceKey="BodyLargeFontFamily" />
			<StaticResource x:Key="FilledPasswordBoxFontWeight" ResourceKey="BodyLargeFontWeight" />
			<StaticResource x:Key="FilledPasswordBoxFontSize" ResourceKey="BodyLargeFontSize" />
			<StaticResource x:Key="FilledPasswordBoxCharacterSpacing" ResourceKey="BodyLargeCharacterSpacing" />
			<!--#endregion-->

			<!--#region MaterialOutlinedPasswordBoxStyle-->
			<StaticResource x:Key="OutlinedPasswordBoxBackground" ResourceKey="SystemControlTransparentBrush" />
			<StaticResource x:Key="OutlinedPasswordBoxBackgroundPointerOver" ResourceKey="SystemControlTransparentBrush" />
			<StaticResource x:Key="OutlinedPasswordBoxBackgroundFocused" ResourceKey="SystemControlTransparentBrush" />
			<StaticResource x:Key="OutlinedPasswordBoxBackgroundDisabled" ResourceKey="SystemControlTransparentBrush" />

			<StaticResource x:Key="OutlinedPasswordBoxBorderBrush" ResourceKey="OutlineBrush" />
			<StaticResource x:Key="OutlinedPasswordBoxBorderBrushPointerOver" ResourceKey="OnSurfaceBrush" />
			<StaticResource x:Key="OutlinedPasswordBoxBorderBrushFocused" ResourceKey="PrimaryBrush" />
			<StaticResource x:Key="OutlinedPasswordBoxBorderBrushDisabled" ResourceKey="OnSurfaceDisabledBrush" />

			<StaticResource x:Key="OutlinedPasswordBoxForeground" ResourceKey="OnSurfaceBrush" />
			<StaticResource x:Key="OutlinedPasswordBoxForegroundPointerOver" ResourceKey="OnSurfaceBrush" />
			<StaticResource x:Key="OutlinedPasswordBoxForegroundFocused" ResourceKey="OnSurfaceBrush" />
			<!-- In this case the opacity is not applied to the brush directly - known issue for ContentElement -->
			<StaticResource x:Key="OutlinedPasswordBoxForegroundDisabled" ResourceKey="OnSurfaceBrush" />
			<StaticResource x:Key="OutlinedPasswordBoxForegroundOpacityDisabled" ResourceKey="LowOpacity" />

			<StaticResource x:Key="OutlinedPasswordBoxPlaceholderForeground" ResourceKey="OnSurfaceVariantBrush" />
			<StaticResource x:Key="OutlinedPasswordBoxPlaceholderForegroundPointerOver" ResourceKey="OnSurfaceBrush" />
			<StaticResource x:Key="OutlinedPasswordBoxPlaceholderForegroundFocused" ResourceKey="OnSurfaceBrush" />
			<StaticResource x:Key="OutlinedPasswordBoxPlaceholderForegroundDisabled" ResourceKey="OnSurfaceLowBrush" />

			<StaticResource x:Key="OutlinedPasswordBoxHeaderForeground" ResourceKey="OnSurfaceVariantBrush" />
			<StaticResource x:Key="OutlinedPasswordBoxHeaderForegroundPointerOver" ResourceKey="OnSurfaceVariantBrush" />
			<StaticResource x:Key="OutlinedPasswordBoxHeaderForegroundFocused" ResourceKey="PrimaryBrush" />
			<StaticResource x:Key="OutlinedPasswordBoxHeaderForegroundDisabled" ResourceKey="OnSurfaceLowBrush" />
			<!--#endregion-->

			<!--#region OutlinedPasswordBoxTypo-->
			<StaticResource x:Key="OutlinedPasswordBoxFontFamily" ResourceKey="BodyLargeFontFamily" />
			<StaticResource x:Key="OutlinedPasswordBoxFontWeight" ResourceKey="BodyLargeFontWeight" />
			<StaticResource x:Key="OutlinedPasswordBoxFontSize" ResourceKey="BodyLargeFontSize" />
			<StaticResource x:Key="OutlinedPasswordBoxCharacterSpacing" ResourceKey="BodyLargeCharacterSpacing" />
			<!--#endregion-->

			<CornerRadius x:Key="OutlinedPasswordBoxCornerRadius">4</CornerRadius>
			<x:Double x:Key="OutlinedPasswordBoxMinHeight">58</x:Double>
			<Thickness x:Key="OutlinedPasswordBoxBorderPadding">1</Thickness>
			<Thickness x:Key="OutlinedPasswordBoxBorderThickness">1</Thickness>
			<Thickness x:Key="OutlinedPasswordBoxPadding">16,8</Thickness>
			<Thickness x:Key="OutlinedPasswordBoxBorderThicknessPointerOver">2</Thickness>
			<Thickness x:Key="OutlinedPasswordBoxBorderPaddingPointerOver">0</Thickness>
			<Thickness x:Key="OutlinedPasswordBoxBorderThicknessFocused">2</Thickness>
			<Thickness x:Key="OutlinedPasswordBoxBorderPaddingFocused">1</Thickness>

			<CornerRadius x:Key="FilledPasswordBoxCornerRadius">4,4,0,0</CornerRadius>
			<x:Double x:Key="FilledPasswordBoxMinHeight">56</x:Double>
			<x:Double x:Key="FilledPasswordBoxBorderHeightPointerOver">2</x:Double>
			<x:Double x:Key="FilledPasswordBoxBorderHeightFocused">2</x:Double>
			<Thickness x:Key="FilledPasswordBoxPadding">16,8</Thickness>
		</ResourceDictionary>
	</ResourceDictionary.ThemeDictionaries>


	<Style x:Key="MaterialRevealButtonStyle"
		   TargetType="Button">
		<Setter Property="Foreground" Value="{ThemeResource PasswordBoxRevealButtonForeground}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Button">
					<Grid x:Name="ButtonLayoutGrid"
						  Background="Transparent">

						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal" />
								<VisualState x:Name="PointerOver" />
								<VisualState x:Name="Pressed" />
								<VisualState x:Name="Disabled">
									<VisualState.Setters>
										<Setter Target="ButtonLayoutGrid.Opacity" Value="0" />
									</VisualState.Setters>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>

						<Path x:Name="GlyphElement"
							  Width="20"
							  HorizontalAlignment="Center"
							  VerticalAlignment="Center"
							  ios:Margin="0,2,0,0"
							  AutomationProperties.AccessibilityView="Raw"
							  Data="{StaticResource PasswordBoxRevealGlyphPathData}"
							  Fill="{TemplateBinding Foreground}"
							  Stretch="Uniform" />
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="MaterialFilledPasswordBoxStyle"
		   TargetType="PasswordBox">
		<Setter Property="Foreground" Value="{ThemeResource FilledPasswordBoxForeground}" />
		<Setter Property="Background" Value="{ThemeResource FilledPasswordBoxBackground}" />
		<Setter Property="BorderBrush" Value="{ThemeResource FilledPasswordBoxBorderBrush}" />
		<Setter Property="HorizontalContentAlignment" Value="Left" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="CornerRadius" Value="{ThemeResource FilledPasswordBoxCornerRadius}" />
		<Setter Property="Padding" Value="{ThemeResource FilledPasswordBoxPadding}" />
		<Setter Property="MinHeight" Value="{ThemeResource FilledPasswordBoxMinHeight}" />

		<!-- Start: Body Large Typo -->
		<Setter Property="FontFamily" Value="{ThemeResource FilledPasswordBoxFontFamily}" />
		<Setter Property="FontWeight" Value="{ThemeResource FilledPasswordBoxFontWeight}" />
		<Setter Property="FontSize" Value="{ThemeResource FilledPasswordBoxFontSize}" />
		<Setter Property="CharacterSpacing" Value="{ThemeResource FilledPasswordBoxCharacterSpacing}" />
		<!-- End: Body Large Typo -->

		<!-- Workaround for WinUI issue: https://github.com/microsoft/microsoft-ui-xaml/issues/6388 -->
		<Setter Property="ut:ControlExtensions.Icon" Value="{x:Null}" />

		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="PasswordBox">
					<Grid x:Name="Root"
						  Background="{TemplateBinding Background}"
						  CornerRadius="{TemplateBinding CornerRadius}">

						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal">
									<Setter Target="HeaderElement_CompositeTransform.TranslateY" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource HeaderCompositeTransformTranslateY}, TargetNullValue=0, FallbackValue=0}" />
									<Setter Target="ContentElement_CompositeTransform.TranslateY" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource PlaceholderContentCompositeTransformTranslateY}, TargetNullValue=0, FallbackValue=0}" />
									<Setter Target="PlaceholderElement_CompositeTransform.TranslateY" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource PlaceholderContentCompositeTransformTranslateY}, TargetNullValue=0, FallbackValue=0}" />
									<Setter Target="HeaderElement_CompositeTransform.ScaleX" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource HeaderCompositeTransformScales}, TargetNullValue=1, FallbackValue=1}" />
									<Setter Target="HeaderElement_CompositeTransform.ScaleY" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource HeaderCompositeTransformScales}, TargetNullValue=1, FallbackValue=1}" />
								</VisualState>

								<VisualState x:Name="PointerOver">
									<VisualState.Setters>
										<Setter Target="NormalBorder.Fill" Value="{ThemeResource FilledPasswordBoxBorderBrushPointerOver}" />
										<Setter Target="ContentElement.Foreground" Value="{ThemeResource FilledPasswordBoxForegroundPointerOver}" />
										<Setter Target="HeaderElement.Foreground" Value="{ThemeResource FilledPasswordBoxHeaderForegroundPointerOver}" />
										<Setter Target="PlaceholderElement.Foreground" Value="{ThemeResource FilledPasswordBoxPlaceholderForegroundPointerOver}" />
										<Setter Target="Root.Background" Value="{ThemeResource FilledPasswordBoxBackgroundPointerOver}" />
										<Setter Target="NormalBorder.Height" Value="{ThemeResource FilledPasswordBoxBorderHeightPointerOver}" />

										<!-- Header and Placeholder animations -->
										<Setter Target="HeaderElement_CompositeTransform.TranslateY" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource HeaderCompositeTransformTranslateY}, TargetNullValue=0, FallbackValue=0}" />
										<Setter Target="ContentElement_CompositeTransform.TranslateY" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource PlaceholderContentCompositeTransformTranslateY}, TargetNullValue=0, FallbackValue=0}" />
										<Setter Target="PlaceholderElement_CompositeTransform.TranslateY" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource PlaceholderContentCompositeTransformTranslateY}, TargetNullValue=0, FallbackValue=0}" />
										<Setter Target="HeaderElement_CompositeTransform.ScaleX" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource HeaderCompositeTransformScales}, TargetNullValue=1, FallbackValue=1}" />
										<Setter Target="HeaderElement_CompositeTransform.ScaleY" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource HeaderCompositeTransformScales}, TargetNullValue=1, FallbackValue=1}" />
									</VisualState.Setters>
								</VisualState>

								<VisualState x:Name="Pressed" />

								<VisualState x:Name="Disabled">
									<VisualState.Setters>
										<Setter Target="NormalBorder.Fill" Value="{ThemeResource FilledPasswordBoxBorderBrushDisabled}" />
										<!-- In this case the opacity is not applied to the brush directly - known issue for ContentElement -->
										<Setter Target="ContentElement.Foreground" Value="{ThemeResource FilledPasswordBoxForegroundDisabled}" />
										<Setter Target="ContentElement.Opacity" Value="{ThemeResource FilledPasswordBoxForegroundOpacityDisabled}" />
										<Setter Target="HeaderElement.Foreground" Value="{ThemeResource FilledPasswordBoxHeaderForegroundDisabled}" />
										<Setter Target="PlaceholderElement.Foreground" Value="{ThemeResource FilledPasswordBoxPlaceholderForegroundDisabled}" />
										<Setter Target="Root.Background" Value="{ThemeResource FilledPasswordBoxBackgroundDisabled}" />
										<Setter Target="IconPresenter.Foreground" Value="{ThemeResource PasswordBoxLeadingIconForegroundDisabled}" />
									</VisualState.Setters>
								</VisualState>

								<VisualState x:Name="Focused">
									<VisualState.Setters>
										<Setter Target="NormalBorder.Fill" Value="{ThemeResource FilledPasswordBoxBorderBrushFocused}" />
										<Setter Target="ContentElement.Foreground" Value="{ThemeResource FilledPasswordBoxForegroundFocused}" />
										<Setter Target="HeaderElement.Foreground" Value="{ThemeResource FilledPasswordBoxHeaderForegroundFocused}" />
										<Setter Target="PlaceholderElement.Foreground" Value="{ThemeResource FilledPasswordBoxPlaceholderForegroundFocused}" />
										<Setter Target="Root.Background" Value="{ThemeResource FilledPasswordBoxBackgroundFocused}" />
										<Setter Target="NormalBorder.Height" Value="{ThemeResource FilledPasswordBoxBorderHeightFocused}" />
									</VisualState.Setters>

									<Storyboard>
										<DoubleAnimation EasingFunction="{StaticResource MaterialEaseInOutFunction}"
														 Storyboard.TargetName="Scale"
														 Storyboard.TargetProperty="ScaleX"
														 To="1"
														 Duration="{StaticResource MaterialTextBoxAnimationDuration}" />

										<!-- Animate Header Upwards -->
										<DoubleAnimation Storyboard.TargetName="HeaderElement_CompositeTransform"
														 Storyboard.TargetProperty="TranslateY"
														 Duration="{StaticResource MaterialTextBoxAnimationDuration}"
														 EasingFunction="{StaticResource MaterialEaseInOutFunction}"
														 To="-11" />
										<DoubleAnimation Storyboard.TargetName="ContentElement_CompositeTransform"
														 Storyboard.TargetProperty="TranslateY"
														 Duration="{StaticResource MaterialAnimationDuration}"
														 EasingFunction="{StaticResource MaterialEaseInOutFunction}"
														 To="{Binding RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource FocusedPlaceholderContentCompositeTransformTranslateY}, TargetNullValue=0, FallbackValue=0}" />
										<DoubleAnimation Storyboard.TargetName="PlaceholderElement_CompositeTransform"
														 Storyboard.TargetProperty="TranslateY"
														 Duration="{StaticResource MaterialAnimationDuration}"
														 EasingFunction="{StaticResource MaterialEaseInOutFunction}"
														 To="{Binding RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource FocusedPlaceholderContentCompositeTransformTranslateY}, TargetNullValue=0, FallbackValue=0}" />
										<DoubleAnimation Storyboard.TargetName="HeaderElement_CompositeTransform"
														 Storyboard.TargetProperty="ScaleX"
														 Duration="{StaticResource MaterialTextBoxAnimationDuration}"
														 EasingFunction="{StaticResource MaterialEaseInOutFunction}"
														 To="0.7" />
										<DoubleAnimation Storyboard.TargetName="HeaderElement_CompositeTransform"
														 Storyboard.TargetProperty="ScaleY"
														 Duration="{StaticResource MaterialTextBoxAnimationDuration}"
														 EasingFunction="{StaticResource MaterialEaseInOutFunction}"
														 To="0.7" />
									</Storyboard>
								</VisualState>
							</VisualStateGroup>

							<VisualStateGroup x:Name="ButtonStates">
								<VisualState x:Name="ButtonVisible">
									<VisualState.Setters>
										<Setter Target="RevealButton.Visibility" Value="Visible" />
									</VisualState.Setters>
								</VisualState>

								<VisualState x:Name="ButtonCollapsed" />
							</VisualStateGroup>

							<VisualStateGroup x:Name="HeaderStates">

								<VisualState x:Name="NotEmpty">
									<VisualState.StateTriggers>
										<StateTrigger IsActive="{Binding Password, Converter={StaticResource EmptyToFalseConverter}, RelativeSource={RelativeSource TemplatedParent}}" />
									</VisualState.StateTriggers>
								</VisualState>

								<VisualState x:Name="Empty">
									<VisualState.StateTriggers>
										<StateTrigger IsActive="{Binding Password, Converter={StaticResource EmptyToTrueConverter}, RelativeSource={RelativeSource TemplatedParent}}" />
									</VisualState.StateTriggers>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>

						<Grid Padding="{TemplateBinding Padding}">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto" />
								<ColumnDefinition Width="*" />
								<ColumnDefinition Width="Auto" />
							</Grid.ColumnDefinitions>

							<ContentPresenter x:Name="IconPresenter"
											  MinWidth="25"
											  MaxWidth="34"
											  MaxHeight="34"
											  Margin="0,11,8,0"
											  HorizontalAlignment="Center"
											  VerticalAlignment="Center"
											  Foreground="{ThemeResource PasswordBoxLeadingIconForeground}"
											  Content="{Binding Path=(ut:ControlExtensions.Icon), RelativeSource={RelativeSource TemplatedParent}}"
											  Visibility="{Binding Path=(ut:ControlExtensions.Icon), RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource NullToCollapsedConverter}, FallbackValue=Collapsed, TargetNullValue=Collapsed}" />

							<ScrollViewer x:Name="ContentElement"
										  Grid.Column="1"
										  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
										  AutomationProperties.AccessibilityView="Raw"
										  HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
										  HorizontalScrollMode="{TemplateBinding ScrollViewer.HorizontalScrollMode}"
										  IsDeferredScrollingEnabled="{TemplateBinding ScrollViewer.IsDeferredScrollingEnabled}"
										  IsHorizontalRailEnabled="{TemplateBinding ScrollViewer.IsHorizontalRailEnabled}"
										  IsTabStop="False"
										  IsVerticalRailEnabled="{TemplateBinding ScrollViewer.IsVerticalRailEnabled}"
										  VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
										  VerticalScrollMode="{TemplateBinding ScrollViewer.VerticalScrollMode}"
										  ZoomMode="Disabled">
								<ScrollViewer.RenderTransform>
									<CompositeTransform x:Name="ContentTransform" />
								</ScrollViewer.RenderTransform>
							</ScrollViewer>

							<TextBlock x:Name="HeaderElement"
									   Grid.Column="1"
									   Foreground="{ThemeResource FilledPasswordBoxHeaderForeground}"
									   HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
									   IsHitTestVisible="False"
									   RenderTransformOrigin="0,0.5"
									   Text="{TemplateBinding Header}"
									   TextAlignment="{TemplateBinding TextAlignment}"
									   TextWrapping="{TemplateBinding TextWrapping}"
									   VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
								<TextBlock.RenderTransform>
									<CompositeTransform x:Name="HeaderElement_CompositeTransform" />
								</TextBlock.RenderTransform>
							</TextBlock>

							<TextBlock x:Name="PlaceholderElement"
									   Grid.Column="1"
									   HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
									   VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
									   Foreground="{ThemeResource FilledPasswordBoxPlaceholderForeground}"
									   IsHitTestVisible="False"
									   RenderTransformOrigin="0,0.5"
									   Visibility="{Binding Text, Converter={StaticResource EmptyToVisibleConverter}, RelativeSource={RelativeSource TemplatedParent}}"
									   Text="{Binding PlaceholderText, RelativeSource={RelativeSource TemplatedParent}}">
								<TextBlock.RenderTransform>
									<CompositeTransform x:Name="Transform" />
								</TextBlock.RenderTransform>
							</TextBlock>

							<Button x:Name="RevealButton"
									Grid.Column="2"
									MinWidth="34"
									MinHeight="34"
									VerticalAlignment="Stretch"
									AutomationProperties.AccessibilityView="Raw"
									IsTabStop="False"
									Foreground="{ThemeResource FilledPasswordBoxRevealButtonForeground}"
									Style="{StaticResource MaterialRevealButtonStyle}"
									Visibility="Collapsed" />
						</Grid>

						<Rectangle x:Name="NormalBorder"
								   Grid.ColumnSpan="3"
								   Height="{StaticResource TextBoxOutlinedStrokeHeight}"
								   VerticalAlignment="Bottom"
								   Fill="{TemplateBinding BorderBrush}" />

						<Rectangle x:Name="FocusedBorder"
								   Grid.ColumnSpan="3"
								   Height="{StaticResource TextBoxFocusStrokeWidth}"
								   VerticalAlignment="Bottom"
								   macos:RenderTransformOrigin="0.0,0.5"
								   not_macos:RenderTransformOrigin="0.5,0.5"
								   Fill="{ThemeResource FilledPasswordBoxBorderBrushFocused}">
							<Rectangle.RenderTransform>
								<ScaleTransform x:Name="Scale" ScaleX="0" />
							</Rectangle.RenderTransform>
						</Rectangle>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="MaterialOutlinedPasswordBoxStyle"
		   TargetType="PasswordBox">
		<Setter Property="Background" Value="{ThemeResource OutlinedPasswordBoxBackground}" />
		<Setter Property="Foreground" Value="{ThemeResource OutlinedPasswordBoxForeground}" />
		<Setter Property="BorderBrush" Value="{ThemeResource OutlinedPasswordBoxBorderBrush}" />
		<Setter Property="BorderThickness" Value="{ThemeResource OutlinedPasswordBoxBorderThickness}" />
		<Setter Property="CornerRadius" Value="{ThemeResource OutlinedPasswordBoxCornerRadius}" />
		<Setter Property="HorizontalContentAlignment" Value="Left" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="Padding" Value="{ThemeResource OutlinedPasswordBoxPadding}" />
		<Setter Property="MinHeight" Value="{ThemeResource OutlinedPasswordBoxMinHeight}" />

		<!-- Start: Body Large Typo -->
		<Setter Property="FontFamily" Value="{ThemeResource OutlinedPasswordBoxFontFamily}" />
		<Setter Property="FontWeight" Value="{ThemeResource OutlinedPasswordBoxFontWeight}" />
		<Setter Property="FontSize" Value="{ThemeResource OutlinedPasswordBoxFontSize}" />
		<Setter Property="CharacterSpacing" Value="{ThemeResource OutlinedPasswordBoxCharacterSpacing}" />
		<!-- End: Body Large Typo -->

		<!-- Workaround for WinUI issue: https://github.com/microsoft/microsoft-ui-xaml/issues/6388 -->
		<Setter Property="ut:ControlExtensions.Icon" Value="{x:Null}" />

		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="PasswordBox">
					<Border x:Name="RootBorder"
							BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="{TemplateBinding BorderThickness}"
							CornerRadius="{TemplateBinding CornerRadius}"
							Padding="{ThemeResource OutlinedPasswordBoxBorderPadding}">

						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal">
									<Setter Target="HeaderElement_CompositeTransform.TranslateY" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource HeaderCompositeTransformTranslateY}, TargetNullValue=0, FallbackValue=0}" />
									<Setter Target="ContentElement_CompositeTransform.TranslateY" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource PlaceholderContentCompositeTransformTranslateY}, TargetNullValue=0, FallbackValue=0}" />
									<Setter Target="PlaceholderElement_CompositeTransform.TranslateY" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource PlaceholderContentCompositeTransformTranslateY}, TargetNullValue=0, FallbackValue=0}" />
									<Setter Target="HeaderElement_CompositeTransform.ScaleX" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource HeaderCompositeTransformScales}, TargetNullValue=1, FallbackValue=1}" />
									<Setter Target="HeaderElement_CompositeTransform.ScaleY" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource HeaderCompositeTransformScales}, TargetNullValue=1, FallbackValue=1}" />
								<VisualState>

								<VisualState x:Name="PointerOver">
									<VisualState.Setters>
										<Setter Target="RootBorder.BorderBrush" Value="{ThemeResource OutlinedPasswordBoxBorderBrushPointerOver}" />
										<Setter Target="ContentElement.Foreground" Value="{ThemeResource OutlinedPasswordBoxForegroundPointerOver}" />
										<Setter Target="PlaceholderElement.Foreground" Value="{ThemeResource OutlinedPasswordBoxPlaceholderForegroundPointerOver}" />
										<Setter Target="Root.Background" Value="{ThemeResource OutlinedPasswordBoxBackgroundPointerOver}" />
										<Setter Target="RootBorder.BorderThickness" Value="{ThemeResource OutlinedPasswordBoxBorderThicknessPointerOver}" />
										<Setter Target="RootBorder.Padding" Value="{ThemeResource OutlinedPasswordBoxBorderPaddingPointerOver}" />

										<Setter Target="HeaderElement.Foreground" Value="{ThemeResource OutlinedPasswordBoxHeaderForegroundPointerOver}" />
										<Setter Target="HeaderElement_CompositeTransform.TranslateY" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource HeaderCompositeTransformTranslateY}, TargetNullValue=0, FallbackValue=0}" />
										<Setter Target="ContentElement_CompositeTransform.TranslateY" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource PlaceholderContentCompositeTransformTranslateY}, TargetNullValue=0, FallbackValue=0}" />
										<Setter Target="PlaceholderElement_CompositeTransform.TranslateY" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource PlaceholderContentCompositeTransformTranslateY}, TargetNullValue=0, FallbackValue=0}" />
										<Setter Target="HeaderElement_CompositeTransform.ScaleX" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource HeaderCompositeTransformScales}, TargetNullValue=1, FallbackValue=1}" />
										<Setter Target="HeaderElement_CompositeTransform.ScaleY" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource HeaderCompositeTransformScales}, TargetNullValue=1, FallbackValue=1}" />
									</VisualState.Setters>
								</VisualState>

								<VisualState x:Name="Pressed" />

								<VisualState x:Name="Disabled">
									<VisualState.Setters>
										<Setter Target="RootBorder.BorderBrush" Value="{ThemeResource OutlinedPasswordBoxBorderBrushDisabled}" />
										<!-- In this case the opacity is not applied to the brush directly - known issue for ContentElement -->
										<Setter Target="ContentElement.Foreground" Value="{ThemeResource OutlinedPasswordBoxForegroundDisabled}" />
										<Setter Target="ContentElement.Opacity" Value="{ThemeResource OutlinedPasswordBoxForegroundOpacityDisabled}" />
										<Setter Target="PlaceholderElement.Foreground" Value="{ThemeResource OutlinedPasswordBoxPlaceholderForegroundDisabled}" />
										<Setter Target="HeaderElement.Foreground" Value="{ThemeResource OutlinedPasswordBoxHeaderForegroundDisabled}" />
										<Setter Target="Root.Background" Value="{ThemeResource OutlinedPasswordBoxBackgroundDisabled}" />
										<Setter Target="IconPresenter.Foreground" Value="{ThemeResource PasswordBoxLeadingIconForegroundDisabled}" />
									</VisualState.Setters>
								</VisualState>

								<VisualState x:Name="Focused">
									<VisualState.Setters>
										<Setter Target="RootBorder.BorderBrush" Value="{ThemeResource OutlinedPasswordBoxBorderBrushFocused}" />
										<Setter Target="ContentElement.Foreground" Value="{ThemeResource OutlinedPasswordBoxForegroundFocused}" />
										<Setter Target="HeaderElement.Foreground" Value="{ThemeResource OutlinedPasswordBoxHeaderForegroundFocused}" />
										<Setter Target="PlaceholderElement.Foreground" Value="{ThemeResource OutlinedPasswordBoxPlaceholderForegroundFocused}" />
										<Setter Target="Root.Background" Value="{ThemeResource OutlinedPasswordBoxBackgroundFocused}" />
										<Setter Target="RootBorder.BorderThickness" Value="{ThemeResource OutlinedPasswordBoxBorderThicknessFocused}" />
										<Setter Target="RootBorder.Padding" Value="{ThemeResource OutlinedPasswordBoxBorderPaddingFocused}" />
									</VisualState.Setters>

									<Storyboard>
										<!-- Animate Header Upwards -->
										<DoubleAnimation Storyboard.TargetName="HeaderElement_CompositeTransform"
														 Storyboard.TargetProperty="TranslateY"
														 Duration="{StaticResource MaterialTextBoxAnimationDuration}"
														 EasingFunction="{StaticResource MaterialEaseInOutFunction}"
														 To="-11" />
										<DoubleAnimation Storyboard.TargetName="ContentElement_CompositeTransform"
														 Storyboard.TargetProperty="TranslateY"
														 Duration="{StaticResource MaterialAnimationDuration}"
														 EasingFunction="{StaticResource MaterialEaseInOutFunction}"
														 To="{Binding RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource FocusedPlaceholderContentCompositeTransformTranslateY}, TargetNullValue=0, FallbackValue=0}" />
										<DoubleAnimation Storyboard.TargetName="PlaceholderElement_CompositeTransform"
														 Storyboard.TargetProperty="TranslateY"
														 Duration="{StaticResource MaterialAnimationDuration}"
														 EasingFunction="{StaticResource MaterialEaseInOutFunction}"
														 To="{Binding RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource FocusedPlaceholderContentCompositeTransformTranslateY}, TargetNullValue=0, FallbackValue=0}" />
										<DoubleAnimation Storyboard.TargetName="HeaderElement_CompositeTransform"
														 Storyboard.TargetProperty="ScaleX"
														 Duration="{StaticResource MaterialTextBoxAnimationDuration}"
														 EasingFunction="{StaticResource MaterialEaseInOutFunction}"
														 To="0.7" />
										<DoubleAnimation Storyboard.TargetName="HeaderElement_CompositeTransform"
														 Storyboard.TargetProperty="ScaleY"
														 Duration="{StaticResource MaterialTextBoxAnimationDuration}"
														 EasingFunction="{StaticResource MaterialEaseInOutFunction}"
														 To="0.7" />
									</Storyboard>
								</VisualState>
							</VisualStateGroup>

							<VisualStateGroup x:Name="ButtonStates">
								<VisualState x:Name="ButtonVisible">
									<VisualState.Setters>
										<Setter Target="RevealButton.Visibility" Value="Visible" />
									</VisualState.Setters>
								</VisualState>

								<VisualState x:Name="ButtonCollapsed" />
							</VisualStateGroup>

							<VisualStateGroup x:Name="HeaderStates">

								<VisualState x:Name="NotEmpty">
									<VisualState.StateTriggers>
										<StateTrigger IsActive="{Binding Password, Converter={StaticResource EmptyToFalseConverter}, RelativeSource={RelativeSource TemplatedParent}}" />
									</VisualState.StateTriggers>
								</VisualState>

								<VisualState x:Name="Empty">
									<VisualState.StateTriggers>
										<StateTrigger IsActive="{Binding Password, Converter={StaticResource EmptyToTrueConverter}, RelativeSource={RelativeSource TemplatedParent}}" />
									</VisualState.StateTriggers>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>

						<Grid x:Name="Root"
							  Padding="{TemplateBinding Padding}"
							  Background="{TemplateBinding Background}">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto" />
								<ColumnDefinition Width="*" />
								<ColumnDefinition Width="Auto" />
							</Grid.ColumnDefinitions>

							<ContentPresenter x:Name="IconPresenter"
											  Width="20"
											  Margin="1,2,18,0"
											  HorizontalAlignment="Center"
											  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
											  Foreground="{ThemeResource PasswordBoxLeadingIconForeground}"
											  Content="{Binding Path=(ut:ControlExtensions.Icon), RelativeSource={RelativeSource TemplatedParent}}"
											  Visibility="{Binding Path=(ut:ControlExtensions.Icon), RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource NullToCollapsedConverter}, FallbackValue=Collapsed, TargetNullValue=Collapsed}" />

							<ScrollViewer x:Name="ContentElement"
										  Grid.Column="1"
										  VerticalAlignment="Top"
										  Padding="0,10"
										  AutomationProperties.AccessibilityView="Raw"
										  HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
										  HorizontalScrollMode="{TemplateBinding ScrollViewer.HorizontalScrollMode}"
										  IsDeferredScrollingEnabled="{TemplateBinding ScrollViewer.IsDeferredScrollingEnabled}"
										  IsHorizontalRailEnabled="{TemplateBinding ScrollViewer.IsHorizontalRailEnabled}"
										  IsTabStop="False"
										  IsVerticalRailEnabled="{TemplateBinding ScrollViewer.IsVerticalRailEnabled}"
										  VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
										  VerticalScrollMode="{TemplateBinding ScrollViewer.VerticalScrollMode}"
										  ZoomMode="Disabled">
								<ScrollViewer.RenderTransform>
									<CompositeTransform x:Name="ContentTransform" />
								</ScrollViewer.RenderTransform>
							</ScrollViewer>

							<TextBlock x:Name="HeaderElement"
									   Grid.Column="1"
									   Foreground="{ThemeResource OutlinedTextBoxHeaderForeground}"
									   HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
									   IsHitTestVisible="False"
									   RenderTransformOrigin="0,0.5"
									   Text="{TemplateBinding Header}"
									   TextAlignment="{TemplateBinding TextAlignment}"
									   TextWrapping="{TemplateBinding TextWrapping}"
									   VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
								<TextBlock.RenderTransform>
									<CompositeTransform x:Name="HeaderElement_CompositeTransform" />
								</TextBlock.RenderTransform>
							</TextBlock>

							<TextBlock x:Name="PlaceholderElement"
									   Grid.Column="1"
									   HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
									   VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
									   Visibility="{Binding Text, Converter={StaticResource EmptyToVisibleConverter}, RelativeSource={RelativeSource TemplatedParent}}"
									   Foreground="{ThemeResource OutlinedPasswordBoxPlaceholderForeground}"
									   IsHitTestVisible="False"
									   RenderTransformOrigin="0,0.5"
									   Text="{Binding PlaceholderText, RelativeSource={RelativeSource TemplatedParent}}">
								<TextBlock.RenderTransform>
									<CompositeTransform x:Name="Transform" />
								</TextBlock.RenderTransform>
							</TextBlock>

							<Button x:Name="RevealButton"
									Grid.Column="2"
									MinWidth="34"
									MinHeight="34"
									VerticalAlignment="Stretch"
									AutomationProperties.AccessibilityView="Raw"
									IsTabStop="False"
									Style="{StaticResource MaterialRevealButtonStyle}"
									Visibility="Collapsed" />
						</Grid>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="MaterialDefaultPasswordBoxStyle"
		   TargetType="PasswordBox"
		   BasedOn="{StaticResource MaterialOutlinedPasswordBoxStyle}" />
</ResourceDictionary>

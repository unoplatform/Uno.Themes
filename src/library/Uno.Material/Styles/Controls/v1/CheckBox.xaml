<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
					xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
					xmlns:android="http://uno.ui/android"
					xmlns:ios="http://uno.ui/ios"
					xmlns:not_ios="http://uno.ui/not_ios"
					xmlns:wasm="http://uno.ui/wasm"
					xmlns:win="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					xmlns:xamarin="http://uno.ui/xamarin"
					mc:Ignorable="android ios not_ios wasm xamarin">

	<x:String x:Key="CheckBoxHyphenGlyphPathStyle">M0,0L32,0 32,5.3 0,5.3z</x:String>
	<x:String x:Key="CheckBoxCheckGlyphPathStyle">M28.718018,0L32,3.2819897 10.666016,24.616999 0,13.951997 3.2810059,10.670007 10.666016,18.055033z</x:String>

	<GridLength x:Key="CheckAreaLength">40</GridLength>
	<x:Double x:Key="FocusAreaSize">40</x:Double>
	<x:Double x:Key="CheckAreaSize">18</x:Double>
	<CornerRadius x:Key="CheckAreaCornerRadius">4</CornerRadius>

	<StaticResource x:Key="MaterialCheckBoxBorderBrush"
					ResourceKey="MaterialOnSurfaceMediumBrush" />

	<Style x:Key="MaterialCheckBoxStyle"
		   TargetType="CheckBox">
		<Setter Property="FontFamily"
				Value="{StaticResource MaterialRegularFontFamily}" />
		<Setter Property="Background"
				Value="{StaticResource MaterialPrimaryBrush}" />
		<Setter Property="Foreground"
				Value="{StaticResource MaterialOnPrimaryBrush}" />
		<Setter Property="BorderBrush"
				Value="{StaticResource MaterialCheckBoxBorderBrush}" />
		<Setter Property="BorderThickness"
				Value="2" />
		<Setter Property="Padding"
				Value="8,0,0,0" />
		<Setter Property="HorizontalAlignment"
				Value="Left" />
		<Setter Property="VerticalAlignment"
				Value="Stretch" />
		<Setter Property="HorizontalContentAlignment"
				Value="Left" />
		<Setter Property="VerticalContentAlignment"
				Value="Center" />
		<Setter Property="MinWidth"
				Value="0" />
		<Setter Property="MinHeight"
				Value="{StaticResource CheckAreaSize}" />
		<Setter Property="UseSystemFocusVisuals"
				Value="False" />

		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="CheckBox">
					<Grid x:Name="Root"
						  Background="Transparent">
						<VisualStateManager.VisualStateGroups>

							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal" />
								<VisualState x:Name="PointerOver" />
								<VisualState x:Name="Pressed" />
								<VisualState x:Name="Disabled" />

								<VisualStateGroup.Transitions>
									<VisualTransition From="Normal"
													  To="Pressed">
										<Storyboard>
											<!-- iOS workaround #361 DoubleAnimationUsingKeyFrames having a small delay (0.5 seconds) before animating -->
											<ios:DoubleAnimation Storyboard.TargetName="PressRing"
																 Storyboard.TargetProperty="Opacity"
																 Duration="{StaticResource MaterialAnimationDuration}"
																 EasingFunction="{StaticResource MaterialEaseInOutFunction}"
																 From="0"
																 To="{StaticResource MaterialLowOpacity}" />

											<ios:DoubleAnimation Storyboard.TargetName="PressRing"
																 Storyboard.TargetProperty="Opacity"
																 BeginTime="{StaticResource MaterialDelayedBeginTime}"
																 Duration="{StaticResource MaterialAnimationDuration}"
																 EasingFunction="{StaticResource MaterialEaseInOutFunction}"
																 From="{StaticResource MaterialLowOpacity}"
																 To="0" />
										</Storyboard>
									</VisualTransition>
									<VisualTransition From="PointerOver"
													  To="Pressed">
										<Storyboard>
											<!-- iOS workaround #361 DoubleAnimationUsingKeyFrames having a small delay (0.5 seconds) before animating -->
											<ios:DoubleAnimation Storyboard.TargetName="PressRing"
																 Storyboard.TargetProperty="Opacity"
																 Duration="{StaticResource MaterialAnimationDuration}"
																 EasingFunction="{StaticResource MaterialEaseInOutFunction}"
																 From="0"
																 To="{StaticResource MaterialLowOpacity}" />

											<ios:DoubleAnimation Storyboard.TargetName="PressRing"
																 Storyboard.TargetProperty="Opacity"
																 BeginTime="{StaticResource MaterialDelayedBeginTime}"
																 Duration="{StaticResource MaterialAnimationDuration}"
																 EasingFunction="{StaticResource MaterialEaseInOutFunction}"
																 From="{StaticResource MaterialLowOpacity}" />
										</Storyboard>
									</VisualTransition>
								</VisualStateGroup.Transitions>
							</VisualStateGroup>

							<VisualStateGroup x:Name="CombinedStates">

								<VisualState x:Name="UncheckedNormal" />
								<VisualState x:Name="UncheckedPointerOver" />
								<VisualState x:Name="UncheckedPressed" />

								<VisualState x:Name="UncheckedDisabled">
									<VisualState.Setters>
										<Setter Target="CheckBoxContainer.Opacity"
												Value="{StaticResource MaterialMediumOpacity}" />
										<Setter Target="ContentPresenter.Opacity"
												Value="{StaticResource MaterialMediumOpacity}" />
									</VisualState.Setters>
								</VisualState>

								<VisualState x:Name="CheckedNormal">
									<VisualState.Setters>
										<Setter Target="BackgroundBorder.Opacity"
												Value="0" />
										<Setter Target="CheckedBackgroundBorder.Opacity"
												Value="1" />
										<Setter Target="CheckGlyph.Opacity"
												Value="1" />
									</VisualState.Setters>
								</VisualState>

								<VisualState x:Name="CheckedPointerOver">
									<VisualState.Setters>
										<Setter Target="BackgroundBorder.Opacity"
												Value="0" />
										<Setter Target="CheckedBackgroundBorder.Opacity"
												Value="1" />
										<Setter Target="CheckGlyph.Opacity"
												Value="1" />
									</VisualState.Setters>
								</VisualState>

								<VisualState x:Name="CheckedPressed">
									<!-- https://github.com/unoplatform/uno/issues/5099 -->
									<xamarin:VisualState.Setters>
										<Setter Target="BackgroundBorder.Opacity"
												Value="0" />
										<Setter Target="CheckedBackgroundBorder.Opacity"
												Value="1" />
										<Setter Target="CheckGlyph.Opacity"
												Value="1" />
									</xamarin:VisualState.Setters>
									<win:Storyboard>
										<DoubleAnimation Storyboard.TargetName="BackgroundBorder"
														 Storyboard.TargetProperty="Opacity"
														 Duration="{StaticResource MaterialAnimationDuration}"
														 To="0">
											<DoubleAnimation.EasingFunction>
												<CubicEase EasingMode="EaseIn" />
											</DoubleAnimation.EasingFunction>
										</DoubleAnimation>

										<DoubleAnimation Storyboard.TargetName="CheckedBackgroundBorder"
														 Storyboard.TargetProperty="Opacity"
														 Duration="{StaticResource MaterialAnimationDuration}"
														 To="1">
											<DoubleAnimation.EasingFunction>
												<CubicEase EasingMode="EaseIn" />
											</DoubleAnimation.EasingFunction>
										</DoubleAnimation>

										<DoubleAnimation Storyboard.TargetName="CheckGlyph"
														 Storyboard.TargetProperty="Opacity"
														 Duration="{StaticResource MaterialAnimationDuration}"
														 To="1">
											<DoubleAnimation.EasingFunction>
												<CubicEase EasingMode="EaseIn" />
											</DoubleAnimation.EasingFunction>
										</DoubleAnimation>
									</win:Storyboard>
								</VisualState>

								<VisualState x:Name="CheckedDisabled">
									<VisualState.Setters>
										<Setter Target="CheckBoxContainer.Opacity"
												Value="{StaticResource MaterialMediumOpacity}" />
										<Setter Target="ContentPresenter.Opacity"
												Value="{StaticResource MaterialMediumOpacity}" />
										<Setter Target="BackgroundBorder.Opacity"
												Value="0" />
										<Setter Target="CheckedBackgroundBorder.Opacity"
												Value="1" />
										<Setter Target="CheckGlyph.Opacity"
												Value="1" />
									</VisualState.Setters>
								</VisualState>

								<VisualState x:Name="IndeterminateNormal">
									<VisualState.Setters>
										<Setter Target="BackgroundBorder.Opacity"
												Value="0" />
										<Setter Target="CheckedBackgroundBorder.Opacity"
												Value="1" />
										<Setter Target="HyphenGlyph.Opacity"
												Value="1" />
									</VisualState.Setters>
								</VisualState>

								<VisualState x:Name="IndeterminatePointerOver">
									<VisualState.Setters>
										<Setter Target="BackgroundBorder.Opacity"
												Value="0" />
										<Setter Target="CheckedBackgroundBorder.Opacity"
												Value="1" />
										<Setter Target="HyphenGlyph.Opacity"
												Value="1" />
									</VisualState.Setters>
								</VisualState>

								<VisualState x:Name="IndeterminatePressed">
									<!-- https://github.com/unoplatform/uno/issues/5099 -->
									<xamarin:VisualState.Setters>
										<Setter Target="BackgroundBorder.Opacity"
												Value="0" />
										<Setter Target="CheckedBackgroundBorder.Opacity"
												Value="1" />
										<Setter Target="HyphenGlyph.Opacity"
												Value="1" />
									</xamarin:VisualState.Setters>
									<win:Storyboard>
										<DoubleAnimation Storyboard.TargetName="BackgroundBorder"
														 Storyboard.TargetProperty="Opacity"
														 Duration="{StaticResource MaterialAnimationDuration}"
														 To="0">
											<DoubleAnimation.EasingFunction>
												<CubicEase EasingMode="EaseIn" />
											</DoubleAnimation.EasingFunction>
										</DoubleAnimation>

										<DoubleAnimation Storyboard.TargetName="CheckedBackgroundBorder"
														 Storyboard.TargetProperty="Opacity"
														 Duration="{StaticResource MaterialAnimationDuration}"
														 To="1">
											<DoubleAnimation.EasingFunction>
												<CubicEase EasingMode="EaseIn" />
											</DoubleAnimation.EasingFunction>
										</DoubleAnimation>

										<DoubleAnimation Storyboard.TargetName="HyphenGlyph"
														 Storyboard.TargetProperty="Opacity"
														 Duration="{StaticResource MaterialAnimationDuration}"
														 To="1">
											<DoubleAnimation.EasingFunction>
												<CubicEase EasingMode="EaseIn" />
											</DoubleAnimation.EasingFunction>
										</DoubleAnimation>
									</win:Storyboard>
								</VisualState>

								<VisualState x:Name="IndeterminateDisabled">
									<VisualState.Setters>
										<Setter Target="CheckBoxContainer.Opacity"
												Value="{StaticResource MaterialMediumOpacity}" />
										<Setter Target="ContentPresenter.Opacity"
												Value="{StaticResource MaterialMediumOpacity}" />
										<Setter Target="BackgroundBorder.Opacity"
												Value="0" />
										<Setter Target="CheckedBackgroundBorder.Opacity"
												Value="1" />
										<Setter Target="HyphenGlyph.Opacity"
												Value="1" />
									</VisualState.Setters>
								</VisualState>

								<VisualStateGroup.Transitions>
									<VisualTransition From="UncheckedNormal"
													  To="UncheckedPressed">
										<Storyboard>
											<not_ios:DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Opacity)"
																				   Storyboard.TargetName="PressRing">
												<EasingDoubleKeyFrame KeyTime="0"
																	  Value="0" />
												<EasingDoubleKeyFrame KeyTime="0:0:0.1"
																	  Value="0.5" />
												<EasingDoubleKeyFrame KeyTime="0:0:0.25"
																	  Value="0" />
											</not_ios:DoubleAnimationUsingKeyFrames>
										</Storyboard>
									</VisualTransition>

									<VisualTransition From="UncheckedPointerOver"
													  To="UncheckedPressed">
										<Storyboard>
											<not_ios:DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Opacity)"
																				   Storyboard.TargetName="PressRing">
												<EasingDoubleKeyFrame KeyTime="0"
																	  Value="0" />
												<EasingDoubleKeyFrame KeyTime="0:0:0.1"
																	  Value="0.5" />
												<EasingDoubleKeyFrame KeyTime="0:0:0.25"
																	  Value="0" />
											</not_ios:DoubleAnimationUsingKeyFrames>
										</Storyboard>
									</VisualTransition>

									<VisualTransition From="CheckedNormal"
													  To="CheckedPressed">
										<Storyboard>
											<not_ios:DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Opacity)"
																				   Storyboard.TargetName="PressRing">
												<EasingDoubleKeyFrame KeyTime="0"
																	  Value="0" />
												<EasingDoubleKeyFrame KeyTime="0:0:0.1"
																	  Value="0.5" />
												<EasingDoubleKeyFrame KeyTime="0:0:0.25"
																	  Value="0" />
											</not_ios:DoubleAnimationUsingKeyFrames>

											<!-- iOS workaround #361 DoubleAnimationUsingKeyFrames having a small delay (0.5 seconds) before animating -->
											<ios:DoubleAnimation Storyboard.TargetName="PressRing"
																 Storyboard.TargetProperty="Opacity"
																 Duration="{StaticResource MaterialAnimationDuration}"
																 EasingFunction="{StaticResource MaterialEaseInOutFunction}"
																 From="0"
																 To="{StaticResource MaterialLowOpacity}" />

											<ios:DoubleAnimation Storyboard.TargetName="PressRing"
																 Storyboard.TargetProperty="Opacity"
																 BeginTime="{StaticResource MaterialDelayedBeginTime}"
																 Duration="{StaticResource MaterialAnimationDuration}"
																 EasingFunction="{StaticResource MaterialEaseInOutFunction}"
																 From="{StaticResource MaterialLowOpacity}"
																 To="0" />
										</Storyboard>
									</VisualTransition>

									<VisualTransition From="CheckedPointerOver"
													  To="CheckedPressed">
										<Storyboard>
											<not_ios:DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Opacity)"
																				   Storyboard.TargetName="PressRing">
												<EasingDoubleKeyFrame KeyTime="0"
																	  Value="0" />
												<EasingDoubleKeyFrame KeyTime="0:0:0.1"
																	  Value="0.5" />
												<EasingDoubleKeyFrame KeyTime="0:0:0.25"
																	  Value="0" />
											</not_ios:DoubleAnimationUsingKeyFrames>

											<!-- iOS workaround #361 DoubleAnimationUsingKeyFrames having a small delay (0.5 seconds) before animating -->
											<ios:DoubleAnimation Storyboard.TargetName="PressRing"
																 Storyboard.TargetProperty="Opacity"
																 Duration="{StaticResource MaterialAnimationDuration}"
																 EasingFunction="{StaticResource MaterialEaseInOutFunction}"
																 From="0"
																 To="{StaticResource MaterialLowOpacity}" />

											<ios:DoubleAnimation Storyboard.TargetName="PressRing"
																 Storyboard.TargetProperty="Opacity"
																 BeginTime="{StaticResource MaterialDelayedBeginTime}"
																 Duration="{StaticResource MaterialAnimationDuration}"
																 EasingFunction="{StaticResource MaterialEaseInOutFunction}"
																 From="{StaticResource MaterialLowOpacity}"
																 To="0" />
										</Storyboard>
									</VisualTransition>

									<VisualTransition From="IndeterminateNormal"
													  To="IndeterminatePressed">

										<Storyboard>
											<not_ios:DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Opacity)"
																				   Storyboard.TargetName="PressRing">
												<EasingDoubleKeyFrame KeyTime="0"
																	  Value="0" />
												<EasingDoubleKeyFrame KeyTime="0:0:0.1"
																	  Value="0.5" />
												<EasingDoubleKeyFrame KeyTime="0:0:0.25"
																	  Value="0" />
											</not_ios:DoubleAnimationUsingKeyFrames>

											<!-- iOS workaround #361 DoubleAnimationUsingKeyFrames having a small delay (0.5 seconds) before animating -->
											<ios:DoubleAnimation Storyboard.TargetName="PressRing"
																 Storyboard.TargetProperty="Opacity"
																 Duration="{StaticResource MaterialAnimationDuration}"
																 EasingFunction="{StaticResource MaterialEaseInOutFunction}"
																 From="0"
																 To="{StaticResource MaterialLowOpacity}" />

											<ios:DoubleAnimation Storyboard.TargetName="PressRing"
																 Storyboard.TargetProperty="Opacity"
																 BeginTime="{StaticResource MaterialDelayedBeginTime}"
																 Duration="{StaticResource MaterialAnimationDuration}"
																 EasingFunction="{StaticResource MaterialEaseInOutFunction}"
																 From="{StaticResource MaterialLowOpacity}"
																 To="0" />
										</Storyboard>
									</VisualTransition>

									<VisualTransition From="IndeterminatePointerOver"
													  To="IndeterminatePressed">

										<Storyboard>
											<not_ios:DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Opacity)"
																				   Storyboard.TargetName="PressRing">
												<EasingDoubleKeyFrame KeyTime="0"
																	  Value="0" />
												<EasingDoubleKeyFrame KeyTime="0:0:0.1"
																	  Value="0.5" />
												<EasingDoubleKeyFrame KeyTime="0:0:0.25"
																	  Value="0" />
											</not_ios:DoubleAnimationUsingKeyFrames>

											<!-- iOS workaround #361 DoubleAnimationUsingKeyFrames having a small delay (0.5 seconds) before animating -->
											<ios:DoubleAnimation Storyboard.TargetName="PressRing"
																 Storyboard.TargetProperty="Opacity"
																 Duration="{StaticResource MaterialAnimationDuration}"
																 EasingFunction="{StaticResource MaterialEaseInOutFunction}"
																 From="0"
																 To="{StaticResource MaterialLowOpacity}" />

											<ios:DoubleAnimation Storyboard.TargetName="PressRing"
																 Storyboard.TargetProperty="Opacity"
																 BeginTime="{StaticResource MaterialDelayedBeginTime}"
																 Duration="{StaticResource MaterialAnimationDuration}"
																 EasingFunction="{StaticResource MaterialEaseInOutFunction}"
																 From="{StaticResource MaterialLowOpacity}"
																 To="0" />
										</Storyboard>
									</VisualTransition>
								</VisualStateGroup.Transitions>
							</VisualStateGroup>

							<VisualStateGroup x:Name="FocusStates">
								<VisualState x:Name="Focused">
									<VisualState.Setters>
										<Setter Target="FocusRing.Opacity"
												Value="{StaticResource MaterialFocusedOpacity}" />
									</VisualState.Setters>
								</VisualState>

								<VisualState x:Name="PointerFocused" />

								<VisualState x:Name="Unfocused" />
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>

						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="{StaticResource CheckAreaLength}" />
							<ColumnDefinition Width="*" />
						</Grid.ColumnDefinitions>

						<Ellipse x:Name="FocusRing"
								 HorizontalAlignment="Center"
								 VerticalAlignment="Center"
								 Stretch="Uniform"
								 Width="{StaticResource FocusAreaSize}"
								 Height="{StaticResource FocusAreaSize}"
								 Fill="{TemplateBinding Background}"
								 IsHitTestVisible="False"
								 Opacity="0" />

						<Ellipse x:Name="PressRing"
								 HorizontalAlignment="Center"
								 VerticalAlignment="Center"
								 Stretch="Uniform"
								 Width="{StaticResource FocusAreaSize}"
								 Height="{StaticResource FocusAreaSize}"
								 Fill="{StaticResource MaterialOnSurfaceLowBrush}"
								 IsHitTestVisible="False"
								 Opacity="0" />

						<Grid x:Name="CheckBoxContainer"
							  Height="{StaticResource CheckAreaSize}"
							  Width="{StaticResource CheckAreaSize}">

							<Grid x:Name="BackgroundBorder"
								  Background="Transparent"
								  BorderBrush="{TemplateBinding BorderBrush}"
								  BorderThickness="{TemplateBinding BorderThickness}"
								  CornerRadius="2" />

							<Grid x:Name="CheckedBackgroundBorder"
								  Background="{TemplateBinding Background}"
								  Opacity="0"
								  CornerRadius="2" />

							<Path x:Name="HyphenGlyph"
								  Data="{StaticResource CheckBoxHyphenGlyphPathStyle}"
								  Fill="{TemplateBinding Foreground}"
								  VerticalAlignment="Center"
								  HorizontalAlignment="Center"
								  Stretch="Uniform"
								  Width="12"
								  Height="4"
								  Opacity="0"
								  AutomationProperties.AccessibilityView="Raw"
								  xamarin:Margin="0,2,0,0" />

							<Path x:Name="CheckGlyph"
								  Data="{StaticResource CheckBoxCheckGlyphPathStyle}"
								  Fill="{TemplateBinding Foreground}"
								  VerticalAlignment="Center"
								  HorizontalAlignment="Center"
								  Stretch="Uniform"
								  Width="12"
								  Height="12"
								  Opacity="0"
								  AutomationProperties.AccessibilityView="Raw"
								  xamarin:Margin="0,2,0,0" />
						</Grid>

						<ContentPresenter x:Name="ContentPresenter"
										  ContentTemplate="{TemplateBinding ContentTemplate}"
										  ContentTransitions="{TemplateBinding ContentTransitions}"
										  Content="{TemplateBinding Content}"
										  Foreground="{StaticResource MaterialOnBackgroundBrush}"
										  Margin="{TemplateBinding Padding}"
										  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
										  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
										  Grid.Column="1"
										  AutomationProperties.AccessibilityView="Raw"
										  TextWrapping="Wrap" />
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="MaterialSecondaryCheckBoxStyle"
		   TargetType="CheckBox"
		   BasedOn="{StaticResource MaterialCheckBoxStyle}">
		<Setter Property="Background"
				Value="{StaticResource MaterialSecondaryBrush}" />
		<Setter Property="Foreground"
				Value="{StaticResource MaterialOnSecondaryBrush}" />
	</Style>
</ResourceDictionary>

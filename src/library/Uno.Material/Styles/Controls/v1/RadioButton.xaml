<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
					xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
					xmlns:android="http://uno.ui/android"
					xmlns:ios="http://uno.ui/ios"
					xmlns:wasm="http://uno.ui/wasm"
					mc:Ignorable="ios android wasm">

	<GridLength x:Key="RadioCheckAreaLength">40</GridLength>
	<x:Double x:Key="RadioFocusAreaSize">40</x:Double>
	<x:Double x:Key="RadioCheckAreaSize">18</x:Double>
	<x:Double x:Key="RadioBorderThickness">2</x:Double>

	<StaticResource x:Key="MaterialRadioButtonBorderBrush"
					ResourceKey="MaterialOnSurfaceMediumBrush" />

	<Style x:Key="MaterialRadioButtonStyle"
		   TargetType="RadioButton">
		<Setter Property="FontFamily"
				Value="{StaticResource MaterialRegularFontFamily}" />
		<Setter Property="Background"
				Value="{StaticResource MaterialPrimaryBrush}" />
		<Setter Property="Foreground"
				Value="{StaticResource MaterialOnBackgroundBrush}" />
		<Setter Property="BorderBrush"
				Value="{StaticResource MaterialRadioButtonBorderBrush}" />
		<Setter Property="Padding"
				Value="8,0,0,0" />
		<Setter Property="HorizontalAlignment"
				Value="Left" />
		<Setter Property="VerticalAlignment"
				Value="Stretch" />
		<Setter Property="HorizontalContentAlignment"
				Value="Left" />
		<Setter Property="VerticalContentAlignment"
				Value="Center" />
		<Setter Property="MinWidth"
				Value="120" />
		<Setter Property="MinHeight"
				Value="{StaticResource RadioCheckAreaSize}" />
		<Setter Property="UseSystemFocusVisuals"
				Value="False" />

		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="RadioButton">
					<Grid x:Name="RootGrid"
						  Background="Transparent">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal">
								</VisualState>

								<VisualState x:Name="PointerOver" />

								<VisualState x:Name="Pressed" />

								<VisualState x:Name="Disabled">
									<VisualState.Setters>
										<Setter Target="RootGrid.Opacity"
												Value="{StaticResource MaterialMediumOpacity}" />
									</VisualState.Setters>
								</VisualState>

								<VisualStateGroup.Transitions>
									<VisualTransition From="Normal"
													  To="Pressed">
										<Storyboard>

											<android:DoubleAnimation Storyboard.TargetName="PressRing"
																	 Storyboard.TargetProperty="Opacity"
																	 Duration="{StaticResource MaterialAnimationDuration}"
																	 EasingFunction="{StaticResource MaterialEaseInOutFunction}"
																	 From="0.5"
																	 To="0" />

											<!-- iOS workaround #361 DoubleAnimationUsingKeyFrames having a small delay (0.5 seconds) before animating -->
											<ios:DoubleAnimation Storyboard.TargetName="PressRing"
																 Storyboard.TargetProperty="Opacity"
																 Duration="0:0:0.15"
																 EasingFunction="{StaticResource MaterialEaseInOutFunction}"
																 From="0"
																 To="{StaticResource MaterialLowOpacity}" />

											<ios:DoubleAnimation Storyboard.TargetName="PressRing"
																 Storyboard.TargetProperty="Opacity"
																 BeginTime="{StaticResource MaterialDelayedBeginTime}"
																 Duration="{StaticResource MaterialAnimationDuration}"
																 EasingFunction="{StaticResource MaterialEaseInOutFunction}"
																 From="{StaticResource MaterialLowOpacity}"
																 To="0" />

											<wasm:DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity"
																				Storyboard.TargetName="PressRing">
												<EasingDoubleKeyFrame KeyTime="0"
																	  Value="0" />
												<EasingDoubleKeyFrame KeyTime="0:0:0.1"
																	  Value="0.5" />
												<EasingDoubleKeyFrame KeyTime="0:0:0.25"
																	  Value="0" />
											</wasm:DoubleAnimationUsingKeyFrames>

										</Storyboard>
									</VisualTransition>
									<VisualTransition From="PointerOver"
													  To="Pressed">
										<Storyboard>

											<android:DoubleAnimation Storyboard.TargetName="PressRing"
																	 Storyboard.TargetProperty="Opacity"
																	 Duration="{StaticResource MaterialAnimationDuration}"
																	 EasingFunction="{StaticResource MaterialEaseInOutFunction}"
																	 From="0.5"
																	 To="0" />

											<!-- iOS workaround #361 DoubleAnimationUsingKeyFrames having a small delay (0.5 seconds) before animating -->
											<ios:DoubleAnimation Storyboard.TargetName="PressRing"
																 Storyboard.TargetProperty="Opacity"
																 Duration="{StaticResource MaterialAnimationDuration}"
																 EasingFunction="{StaticResource MaterialEaseInOutFunction}"
																 From="0"
																 To="{StaticResource MaterialLowOpacity}" />

											<ios:DoubleAnimation Storyboard.TargetName="PressRing"
																 Storyboard.TargetProperty="Opacity"
																 BeginTime="{StaticResource MaterialDelayedBeginTime}"
																 Duration="{StaticResource MaterialAnimationDuration}"
																 EasingFunction="{StaticResource MaterialEaseInOutFunction}"
																 From="{StaticResource MaterialLowOpacity}"
																 To="0" />

											<wasm:DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity"
																				Storyboard.TargetName="PressRing">
												<EasingDoubleKeyFrame KeyTime="0"
																	  Value="0" />
												<EasingDoubleKeyFrame KeyTime="0:0:0.1"
																	  Value="0.5" />
												<EasingDoubleKeyFrame KeyTime="0:0:0.25"
																	  Value="0" />
											</wasm:DoubleAnimationUsingKeyFrames>

										</Storyboard>
									</VisualTransition>
								</VisualStateGroup.Transitions>
							</VisualStateGroup>

							<VisualStateGroup x:Name="CheckStates">

								<VisualState x:Name="Checked">
									<VisualState.Setters>
										<Setter Target="CheckEllipse.Opacity"
												Value="1" />
										<Setter Target="OuterEllipse_Checked.Opacity"
												Value="1" />
										<Setter Target="OuterEllipse_Unchecked.Opacity"
												Value="0" />
									</VisualState.Setters>
								</VisualState>

								<VisualState x:Name="Unchecked" />

								<VisualState x:Name="Indeterminate" />
							</VisualStateGroup>

							<VisualStateGroup x:Name="FocusStates">

								<VisualState x:Name="Focused">
									<VisualState.Setters>
										<Setter Target="FocusRing.Opacity"
												Value="{StaticResource MaterialFocusedOpacity}" />
									</VisualState.Setters>
								</VisualState>

								<VisualState x:Name="PointerFocused" />

								<VisualState x:Name="Unfocused" />
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>

						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="{StaticResource RadioCheckAreaLength}" />
							<ColumnDefinition Width="*" />
						</Grid.ColumnDefinitions>

						<Ellipse x:Name="FocusRing"
								 HorizontalAlignment="Center"
								 VerticalAlignment="Center"
								 Stretch="Uniform"
								 Width="{StaticResource RadioFocusAreaSize}"
								 Height="{StaticResource RadioFocusAreaSize}"
								 Fill="{TemplateBinding Background}"
								 IsHitTestVisible="False"
								 StrokeThickness="0"
								 Opacity="0" />

						<Ellipse x:Name="PressRing"
								 HorizontalAlignment="Center"
								 VerticalAlignment="Center"
								 Stretch="Uniform"
								 Width="{StaticResource RadioFocusAreaSize}"
								 Height="{StaticResource RadioFocusAreaSize}"
								 Fill="{StaticResource MaterialOnSurfaceLowBrush}"
								 IsHitTestVisible="False"
								 Opacity="0" />

						<Grid Height="{StaticResource RadioCheckAreaSize}"
							  Width="{StaticResource RadioCheckAreaSize}">

							<Ellipse x:Name="OuterEllipse_Checked"
									 HorizontalAlignment="Stretch"
									 VerticalAlignment="Stretch"
									 Stretch="Uniform"
									 UseLayoutRounding="False"
									 Stroke="{TemplateBinding Background}"
									 StrokeThickness="{StaticResource RadioBorderThickness}"
									 Opacity="0" />

							<Ellipse x:Name="OuterEllipse_Unchecked"
									 HorizontalAlignment="Stretch"
									 VerticalAlignment="Stretch"
									 Stretch="Uniform"
									 UseLayoutRounding="False"
									 Stroke="{TemplateBinding BorderBrush}"
									 StrokeThickness="{StaticResource RadioBorderThickness}" />

							<Ellipse x:Name="CheckEllipse"
									 HorizontalAlignment="Stretch"
									 VerticalAlignment="Stretch"
									 Stretch="Uniform"
									 UseLayoutRounding="False"
									 Fill="{TemplateBinding Background}"
									 Opacity="0"
									 StrokeThickness="0"
									 Margin="5" />
						</Grid>

						<ContentPresenter x:Name="ContentPresenter"
										  ContentTemplate="{TemplateBinding ContentTemplate}"
										  ContentTransitions="{TemplateBinding ContentTransitions}"
										  Content="{TemplateBinding Content}"
										  Margin="{TemplateBinding Padding}"
										  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
										  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
										  AutomationProperties.AccessibilityView="Raw"
										  TextWrapping="Wrap"
										  Grid.Column="1" />
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="MaterialSecondaryRadioButtonStyle"
		   TargetType="RadioButton"
		   BasedOn="{StaticResource MaterialRadioButtonStyle}">

		<Setter Property="Background"
				Value="{StaticResource MaterialSecondaryBrush}" />
	</Style>

</ResourceDictionary>

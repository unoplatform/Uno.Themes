<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
					xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
					xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
					xmlns:not_macos="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					xmlns:macos="http://uno.ui/macos"
					xmlns:um="using:Uno.Material"
					xmlns:ut="using:Uno.Themes"
					mc:Ignorable="d macos">

	<!-- Converters -->
	<ut:FromEmptyStringToValueConverter x:Key="EmptyToCompositeTransformTranslateY"
										NotNullOrEmptyValue="7"
										NullOrEmptyValue="0" />

	<!-- Path Data -->
	<x:String x:Key="ClearGlyphPathData">M10.661012,7.5689991L7.5990001,10.650999 12.939089,15.997999 7.5990001,21.336999 10.661012,24.405 16.007082,19.065 21.369997,24.405 24.430058,21.336999 24.429081,21.336 19.088991,15.998999 24.429081,10.662001 21.345095,7.5819996 16.007082,12.919001z M15.997072,0C24.828983,0 31.994999,7.1770013 31.994999,15.999998 31.994999,24.826997 24.828007,31.999999 15.997072,31.999999 7.1569835,31.999999 1.5270052E-07,24.826997 0,15.999998 1.5270052E-07,7.1799997 7.1569835,0 15.997072,0z</x:String>

	<Style x:Key="DeleteButtonStyle"
		   TargetType="Button">

		<Setter Property="Height"
				Value="44" />
		<Setter Property="Width"
				Value="44" />
		<Setter Property="CornerRadius"
				Value="22" />
		
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Button">
					<Grid x:Name="ButtonLayoutGrid"
						  Background="Transparent">

						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal" />
								<VisualState x:Name="PointerOver" />
								<VisualState x:Name="Pressed">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="GlyphElement"
														 Storyboard.TargetProperty="Opacity"
														 Duration="0:0:0.1"
														 To="0.8" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Disabled">
									<VisualState.Setters>
										<Setter Target="ButtonLayoutGrid.Opacity"
												Value="0" />
									</VisualState.Setters>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>

						<Path x:Name="GlyphElement"
							  Data="{StaticResource ClearGlyphPathData}"
							  Fill="{StaticResource TextBoxIconColorBrush}"
							  VerticalAlignment="Center"
							  HorizontalAlignment="Center"
							  Stretch="Uniform"
							  Width="16"
							  Height="16"
							  AutomationProperties.AccessibilityView="Raw" />

						<um:Ripple Feedback="{StaticResource MaterialPrimaryBrush}"
								   FeedbackOpacity="{StaticResource MaterialPressedOpacity}"
								   CornerRadius="{TemplateBinding CornerRadius}"
								   AutomationProperties.AccessibilityView="Raw"/>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="MaterialFilledTextBoxStyle"
		   TargetType="TextBox">

		<Setter Property="FontFamily"
				Value="{StaticResource MaterialRegularFontFamily}" />
		<Setter Property="Foreground"
				Value="{StaticResource TextBoxLabelDefaultColorBrush}" />
		<Setter Property="PlaceholderForeground"
				Value="{StaticResource TextBoxLabelDefaultColorBrush}" />
		<Setter Property="Background"
				Value="{StaticResource TextBoxFilledBackgroundColorBrush}" />
		<Setter Property="BorderBrush"
				Value="{StaticResource TextBoxFilledIndicatorColorBrush}" />
		<Setter Property="HorizontalContentAlignment"
				Value="Left" />
		<Setter Property="VerticalContentAlignment"
				Value="Center" />

		<macos:Setter Property="Padding"
					  Value="0,4" />

		<not_macos:Setter Property="Padding"
						  Value="0,16" />
		<Setter Property="MinHeight"
				Value="50" />

		<!-- Workaround for WinUI issue: https://github.com/microsoft/microsoft-ui-xaml/issues/6388 -->
		<Setter Property="um:ControlExtensions.Icon"
				Value="{x:Null}" />

		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="TextBox">
					<Grid x:Name="Root"
						  Background="{TemplateBinding Background}"
						  CornerRadius="{TemplateBinding CornerRadius}">

						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal" />
								<VisualState x:Name="PointerOver" />
								<VisualState x:Name="Pressed" />

								<VisualState x:Name="Disabled">
									<VisualState.Setters>
										<Setter Target="NormalBorder.Fill"
												Value="{StaticResource MaterialOnSurfaceLowBrush}" />
										<Setter Target="ContentElement.Foreground"
												Value="{StaticResource MaterialOnSurfaceBrush}" />
										<!-- In this case the opacity is not applied to the brush -->
										<Setter Target="ContentElement.Opacity"
												Value="{StaticResource MaterialLowOpacity}" />
										<Setter Target="PlaceholderElement.Foreground"
												Value="{StaticResource MaterialOnSurfaceLowBrush}" />
									</VisualState.Setters>
								</VisualState>

								<VisualState x:Name="Focused">
									<VisualState.Setters>
										<Setter Target="PlaceholderElement.Foreground"
												Value="{StaticResource TextBoxLabelFocusColorBrush}" />
									</VisualState.Setters>
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="FocusedBorder_ScaleTransform"
														 Storyboard.TargetProperty="ScaleX"
														 Duration="{StaticResource MaterialAnimationDuration}"
														 EasingFunction="{StaticResource MaterialEaseInOutFunction}"
														 To="1" />
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="ButtonStates">
								<VisualState x:Name="ButtonVisible">
									<VisualState.Setters>
										<Setter Target="DeleteButton.Opacity"
												Value="1" />
									</VisualState.Setters>
								</VisualState>
								<VisualState x:Name="ButtonCollapsed">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="DeleteButton"
																	   Storyboard.TargetProperty="Opacity">
											<DiscreteObjectKeyFrame KeyTime="0:0:0.2"
																	Value="0" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="HeaderStates">
								<VisualState x:Name="NotEmpty">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="PlaceholderElement_CompositeTransform"
														 Storyboard.TargetProperty="TranslateY"
														 Duration="{StaticResource MaterialTextBoxAnimationDuration}"
														 EasingFunction="{StaticResource MaterialEaseInOutFunction}"
														 To="-13" />
										<!-- ContentElement TranslateY value changing depending if there is a PlaceholderText or not -->
										<DoubleAnimation Storyboard.TargetName="ContentElement_CompositeTransform"
														 Storyboard.TargetProperty="TranslateY"
														 Duration="{StaticResource MaterialAnimationDuration}"
														 EasingFunction="{StaticResource MaterialEaseInOutFunction}"
														 To="{Binding PlaceholderText, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource EmptyToCompositeTransformTranslateY}, TargetNullValue=0, FallbackValue=0}" />
										<DoubleAnimation Storyboard.TargetName="PlaceholderElement_CompositeTransform"
														 Storyboard.TargetProperty="ScaleX"
														 Duration="{StaticResource MaterialTextBoxAnimationDuration}"
														 EasingFunction="{StaticResource MaterialEaseInOutFunction}"
														 To="0.7" />
										<DoubleAnimation Storyboard.TargetName="PlaceholderElement_CompositeTransform"
														 Storyboard.TargetProperty="ScaleY"
														 Duration="{StaticResource MaterialTextBoxAnimationDuration}"
														 EasingFunction="{StaticResource MaterialEaseInOutFunction}"
														 To="0.7" />
									</Storyboard>
									<VisualState.StateTriggers>
										<StateTrigger IsActive="{Binding Text, Converter={StaticResource MaterialEmptyToFalse}, RelativeSource={RelativeSource TemplatedParent}}" />
									</VisualState.StateTriggers>
								</VisualState>
								<VisualState x:Name="Empty">
									<VisualState.StateTriggers>
										<StateTrigger IsActive="{Binding Text, Converter={StaticResource MaterialEmptyToTrue}, RelativeSource={RelativeSource TemplatedParent}}" />
									</VisualState.StateTriggers>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>

						<Grid Margin="12,0,0,0">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto" />
								<ColumnDefinition Width="*" />
								<ColumnDefinition Width="Auto" />
							</Grid.ColumnDefinitions>

							<Border Margin="{TemplateBinding Padding}">
								<ContentPresenter x:Name="IconPresenter"
												  Visibility="{Binding Path=(um:ControlExtensions.Icon), RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource MaterialNullToCollapsedConverter}, FallbackValue=Collapsed, TargetNullValue=Collapsed}"
												  Content="{Binding Path=(um:ControlExtensions.Icon), RelativeSource={RelativeSource TemplatedParent}}"
												  MaxHeight="34"
												  MaxWidth="34"
												  MinWidth="25"
												  HorizontalAlignment="Center"
												  macos:VerticalAlignment="Center"
												  not_macos:VerticalAlignment="Top"
												  Margin="0,0,8,0"/>
							</Border>

							<ScrollViewer x:Name="ContentElement"
										  HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
										  HorizontalScrollMode="{TemplateBinding ScrollViewer.HorizontalScrollMode}"
										  IsDeferredScrollingEnabled="{TemplateBinding ScrollViewer.IsDeferredScrollingEnabled}"
										  IsHorizontalRailEnabled="{TemplateBinding ScrollViewer.IsHorizontalRailEnabled}"
										  IsTabStop="False"
										  IsVerticalRailEnabled="{TemplateBinding ScrollViewer.IsVerticalRailEnabled}"
										  macos:VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
										  not_macos:VerticalAlignment="Bottom"
										  VerticalScrollMode="{TemplateBinding ScrollViewer.VerticalScrollMode}"
										  VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
										  ZoomMode="Disabled"
										  AutomationProperties.AccessibilityView="Raw"
										  Margin="{TemplateBinding Padding}"
										  Grid.Column="1">
								<ScrollViewer.RenderTransform>
									<CompositeTransform x:Name="ContentElement_CompositeTransform" />
								</ScrollViewer.RenderTransform>
							</ScrollViewer>

							<TextBlock x:Name="PlaceholderElement"
									   Foreground="{Binding PlaceholderForeground, RelativeSource={RelativeSource TemplatedParent}}"
									   HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
									   IsHitTestVisible="False"
									   RenderTransformOrigin="0,0.5"
									   Text="{TemplateBinding PlaceholderText}"
									   TextAlignment="{TemplateBinding TextAlignment}"
									   TextWrapping="{TemplateBinding TextWrapping}"
									   not_macos:VerticalAlignment="Top"
									   macos:VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
									   Margin="{TemplateBinding Padding}"
									   Grid.Column="1">
								<TextBlock.RenderTransform>
									<CompositeTransform x:Name="PlaceholderElement_CompositeTransform" />
								</TextBlock.RenderTransform>
							</TextBlock>

							<Button x:Name="DeleteButton"
									Style="{StaticResource DeleteButtonStyle}"
									Foreground="{TemplateBinding BorderBrush}"
									Opacity="0"
									IsTabStop="False"
									AutomationProperties.AccessibilityView="Raw"
									Grid.Column="2" />
						</Grid>

						<Rectangle x:Name="NormalBorder"
								   Fill="{StaticResource TextBoxOutlinedStrokeColorBrush}"
								   Height="{StaticResource TextBoxOutlinedStrokeHeight}"
								   VerticalAlignment="Bottom" />

						<Rectangle x:Name="FocusedBorder"
								   Fill="{StaticResource TextBoxOutlinedFocusStrokeColorBrush}"
								   Height="{StaticResource TextBoxFocusStrokeWidth}"
								   VerticalAlignment="Bottom"
								   not_macos:RenderTransformOrigin="0.5,0.5"
								   macos:RenderTransformOrigin="0.0,0.5">
							<Rectangle.RenderTransform>
								<ScaleTransform x:Name="FocusedBorder_ScaleTransform"
												ScaleX="0" />
							</Rectangle.RenderTransform>
						</Rectangle>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="MaterialOutlinedTextBoxStyle"
		   TargetType="TextBox">
		
		<Setter Property="FontFamily"
				Value="{StaticResource MaterialRegularFontFamily}" />
		<Setter Property="Background"
				Value="Transparent" />
		<Setter Property="Foreground"
				Value="{StaticResource TextBoxLabelDefaultColorBrush}" />
		<Setter Property="PlaceholderForeground"
				Value="{StaticResource TextBoxLabelDefaultColorBrush}" />
		<Setter Property="BorderThickness"
				Value="1" />
		<Setter Property="BorderBrush"
				Value="{StaticResource TextBoxFilledIndicatorColorBrush}" />
		<Setter Property="CornerRadius"
				Value="{StaticResource TextBoxOutlinedCorderRadius}" />

		<Setter Property="HorizontalContentAlignment"
				Value="Left" />
		<Setter Property="VerticalContentAlignment"
				Value="Center" />
		<Setter Property="Padding"
				Value="0,16" />
		<Setter Property="MinHeight"
				Value="50" />

		<!-- Workaround for WinUI issue: https://github.com/microsoft/microsoft-ui-xaml/issues/6388 -->
		<Setter Property="um:ControlExtensions.Icon"
				Value="{x:Null}" />

		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="TextBox">
					<Grid x:Name="Root"
						  Background="{TemplateBinding Background}"
						  BorderBrush="{TemplateBinding BorderBrush}"
						  BorderThickness="{TemplateBinding BorderThickness}"
						  CornerRadius="{TemplateBinding CornerRadius}">

						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal" />
								<VisualState x:Name="PointerOver" />
								<VisualState x:Name="Pressed" />

								<VisualState x:Name="Disabled">
									<VisualState.Setters>
										<Setter Target="Root.BorderBrush"
												Value="{StaticResource MaterialOnSurfaceLowBrush}" />
										<Setter Target="ContentElement.Foreground"
												Value="{StaticResource MaterialOnSurfaceBrush}" />
										<!-- In this case the opacity is not applied to the brush -->
										<Setter Target="ContentElement.Opacity"
												Value="{StaticResource MaterialLowOpacity}" />
										<Setter Target="PlaceholderElement.Foreground"
												Value="{StaticResource MaterialOnSurfaceLowBrush}" />
									</VisualState.Setters>
								</VisualState>

								<VisualState x:Name="Focused">
									<VisualState.Setters>
										<Setter Target="Root.BorderBrush"
												Value="{StaticResource TextBoxFilledFocusIndicatorColorBrush}" />
										<Setter Target="PlaceholderElement.Foreground"
												Value="{StaticResource TextBoxLabelFocusColorBrush}" />
									</VisualState.Setters>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="ButtonStates">
								<VisualState x:Name="ButtonVisible">
									<VisualState.Setters>
										<Setter Target="DeleteButton.Opacity"
												Value="1" />
									</VisualState.Setters>
								</VisualState>
								<VisualState x:Name="ButtonCollapsed">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="DeleteButton"
																	   Storyboard.TargetProperty="Opacity">
											<DiscreteObjectKeyFrame KeyTime="0:0:0.2"
																	Value="0" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="HeaderStates">
								<VisualState x:Name="NotEmpty">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="PlaceholderElement_CompositeTransform"
														 Storyboard.TargetProperty="TranslateY"
														 Duration="{StaticResource MaterialTextBoxAnimationDuration}"
														 EasingFunction="{StaticResource MaterialEaseInOutFunction}"
														 To="-11" />
										<!-- ContentElement TranslateY value changing depending if there is a PlaceholderText or not -->
										<DoubleAnimation Storyboard.TargetName="ContentElement_CompositeTransform"
														 Storyboard.TargetProperty="TranslateY"
														 Duration="{StaticResource MaterialAnimationDuration}"
														 EasingFunction="{StaticResource MaterialEaseInOutFunction}"
														 To="{Binding PlaceholderText, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource EmptyToCompositeTransformTranslateY}, TargetNullValue=0, FallbackValue=0}" />
										<DoubleAnimation Storyboard.TargetName="PlaceholderElement_CompositeTransform"
														 Storyboard.TargetProperty="ScaleX"
														 Duration="{StaticResource MaterialTextBoxAnimationDuration}"
														 EasingFunction="{StaticResource MaterialEaseInOutFunction}"
														 To="0.7" />
										<DoubleAnimation Storyboard.TargetName="PlaceholderElement_CompositeTransform"
														 Storyboard.TargetProperty="ScaleY"
														 Duration="{StaticResource MaterialTextBoxAnimationDuration}"
														 EasingFunction="{StaticResource MaterialEaseInOutFunction}"
														 To="0.7" />
									</Storyboard>
									<VisualState.StateTriggers>
										<StateTrigger IsActive="{Binding Text, Converter={StaticResource MaterialEmptyToFalse}, RelativeSource={RelativeSource TemplatedParent}}" />
									</VisualState.StateTriggers>
								</VisualState>
								<VisualState x:Name="Empty">
									<VisualState.StateTriggers>
										<StateTrigger IsActive="{Binding Text, Converter={StaticResource MaterialEmptyToTrue}, RelativeSource={RelativeSource TemplatedParent}}" />
									</VisualState.StateTriggers>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>

						<Grid Margin="12,0,0,0">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto" />
								<ColumnDefinition Width="*" />
								<ColumnDefinition Width="Auto" />
							</Grid.ColumnDefinitions>

							<Border Margin="{TemplateBinding Padding}">
								<ContentPresenter x:Name="IconPresenter"
                                                  Visibility="{Binding Path=(um:ControlExtensions.Icon), RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource MaterialNullToCollapsedConverter}, FallbackValue=Collapsed, TargetNullValue=Collapsed}"
												  Content="{Binding Path=(um:ControlExtensions.Icon), RelativeSource={RelativeSource TemplatedParent}}"
												  MaxHeight="34"
												  MaxWidth="34"
												  MinWidth="25"
												  HorizontalAlignment="Center"
												  VerticalAlignment="Bottom"
												  Margin="0,0,8,0"/>
							</Border>

							<ScrollViewer x:Name="ContentElement"
										  HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
										  HorizontalScrollMode="{TemplateBinding ScrollViewer.HorizontalScrollMode}"
										  IsDeferredScrollingEnabled="{TemplateBinding ScrollViewer.IsDeferredScrollingEnabled}"
										  IsHorizontalRailEnabled="{TemplateBinding ScrollViewer.IsHorizontalRailEnabled}"
										  IsTabStop="False"
										  IsVerticalRailEnabled="{TemplateBinding ScrollViewer.IsVerticalRailEnabled}"
										  VerticalScrollMode="{TemplateBinding ScrollViewer.VerticalScrollMode}"
										  VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
										  VerticalAlignment="Bottom"
										  ZoomMode="Disabled"
										  AutomationProperties.AccessibilityView="Raw"
										  Grid.Column="1"
										  Margin="{TemplateBinding Padding}">
								<ScrollViewer.RenderTransform>
									<CompositeTransform x:Name="ContentElement_CompositeTransform" />
								</ScrollViewer.RenderTransform>
							</ScrollViewer>

							<TextBlock x:Name="PlaceholderElement"
									   Foreground="{Binding PlaceholderForeground, RelativeSource={RelativeSource TemplatedParent}}"
									   HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
									   IsHitTestVisible="False"
									   RenderTransformOrigin="0,0.5"
									   Text="{TemplateBinding PlaceholderText}"
									   TextAlignment="{TemplateBinding TextAlignment}"
									   TextWrapping="{TemplateBinding TextWrapping}"
									   VerticalAlignment="Top"
									   Margin="{TemplateBinding Padding}"
									   Grid.Column="1">
								<TextBlock.RenderTransform>
									<CompositeTransform x:Name="PlaceholderElement_CompositeTransform" />
								</TextBlock.RenderTransform>
							</TextBlock>

							<Button x:Name="DeleteButton"
									Style="{StaticResource DeleteButtonStyle}"
									Foreground="{TemplateBinding BorderBrush}"
									Opacity="0"
									AutomationProperties.AccessibilityView="Raw"
									IsTabStop="False"
									Grid.Column="2" />
						</Grid>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

</ResourceDictionary>

<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
					xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
					xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
					xmlns:IsNotWinUI3="http://schemas.microsoft.com/winfx/2006/xaml/presentation?IsTypeNotPresent(Microsoft.UI.Xaml.FrameworkElement)"
					xmlns:win="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					xmlns:android="http://uno.ui/android"
					xmlns:xamarin="http://uno.ui/xamarin"
					mc:Ignorable="d android xamarin">

	<x:Double x:Key="MaterialWUXNavDrawersFontSize">14</x:Double>
	<x:Int32 x:Key="MaterialWUXNavDrawersElevation">16</x:Int32>

	<IsNotWinUI3:Style x:Key="MaterialWUXNavigationViewStyle"
		   TargetType="NavigationView">
		<Setter Property="PaneToggleButtonStyle"
				Value="{StaticResource PaneToggleButtonStyle}" />
		<Setter Property="IsTabStop"
				Value="False" />
		<Setter Property="CompactPaneLength"
				Value="52" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="NavigationView">
					<Grid x:Name="RootGrid">

						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="DisplayModeGroup">
								<VisualState x:Name="Compact">
									<android:VisualState.Setters>
										<Setter Target="HeaderContent.Margin"
												Value="52,5,0,0" />
									</android:VisualState.Setters>
								</VisualState>
								<VisualState x:Name="Expanded">
									<VisualState.Setters>
										<Setter Target="TopNavGrid.Visibility"
												Value="Collapsed" />
									</VisualState.Setters>
								</VisualState>

								<VisualState x:Name="Minimal">
									<VisualState.Setters>
										<Setter Target="HeaderContent.Margin"
												Value="52,5,0,0" />
									</VisualState.Setters>
								</VisualState>

								<VisualState x:Name="MinimalWithBackButton">
									<VisualState.Setters>
										<Setter Target="HeaderContent.Margin"
												Value="104,5,0,0" />
									</VisualState.Setters>
								</VisualState>
							</VisualStateGroup>

							<VisualStateGroup x:Name="TogglePaneGroup">
								<VisualState x:Name="TogglePaneButtonVisible" />
								<VisualState x:Name="TogglePaneButtonCollapsed">
									<VisualState.Setters>
										<Setter Target="PaneContentGridToggleButtonRow.Height"
												Value="4" />
									</VisualState.Setters>
								</VisualState>
							</VisualStateGroup>

							<VisualStateGroup x:Name="HeaderGroup">
								<VisualState x:Name="HeaderVisible" />
								<VisualState x:Name="HeaderCollapsed">
									<VisualState.Setters>
										<Setter Target="HeaderContent.Visibility"
												Value="Collapsed" />
									</VisualState.Setters>
								</VisualState>
							</VisualStateGroup>

							<VisualStateGroup x:Name="SettingsGroup">
								<VisualState x:Name="SettingsVisible" />
								<VisualState x:Name="SettingsCollapsed">
									<VisualState.Setters>
										<Setter Target="SettingsNavPaneItem.Visibility"
												Value="Collapsed" />
										<Setter Target="SettingsTopNavPaneItem.Visibility"
												Value="Collapsed" />
									</VisualState.Setters>
								</VisualState>
							</VisualStateGroup>

							<VisualStateGroup x:Name="AutoSuggestGroup">
								<VisualState x:Name="AutoSuggestBoxVisible" />
								<VisualState x:Name="AutoSuggestBoxCollapsed">
									<VisualState.Setters>
										<Setter Target="AutoSuggestArea.Visibility"
												Value="Collapsed" />
										<Setter Target="TopPaneAutoSuggestArea.Visibility"
												Value="Collapsed" />
									</VisualState.Setters>
								</VisualState>
							</VisualStateGroup>

							<VisualStateGroup x:Name="PaneStateGroup">
								<VisualState x:Name="NotClosedCompact" />
								<VisualState x:Name="ClosedCompact">
									<VisualState.Setters>
										<Setter Target="PaneAutoSuggestBoxPresenter.Visibility"
												Value="Collapsed" />
									</VisualState.Setters>
								</VisualState>
							</VisualStateGroup>

							<VisualStateGroup x:Name="PaneStateListSizeGroup">
								<VisualState x:Name="ListSizeFull" />
								<VisualState x:Name="ListSizeCompact">
									<VisualState.Setters>
										<Setter Target="MenuItemsHost.HorizontalAlignment"
												Value="Left" />
										<win:Setter Target="MenuItemsHost.Width"
													Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CompactPaneLength}" />
										<xamarin:Setter Target="MenuItemsHost.Width"
														Value="48" />
										<Setter Target="SettingsNavPaneItem.HorizontalAlignment"
												Value="Left" />
										<win:Setter Target="SettingsNavPaneItem.Width"
													Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CompactPaneLength}" />
										<xamarin:Setter Target="SettingsNavPaneItem.Width"
														Value="40" />
										<Setter Target="PaneTopContent.Visibility"
												Value="Collapsed" />
										<Setter Target="PaneHeaderContentBorder.Visibility"
												Value="Collapsed" />
										<Setter Target="PaneCustomContentBorder.HorizontalAlignment"
												Value="Left" />
										<win:Setter Target="PaneCustomContentBorder.Width"
													Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CompactPaneLength}" />
										<xamarin:Setter Target="PaneCustomContentBorder.Width"
														Value="40" />
										<Setter Target="FooterContentBorder.HorizontalAlignment"
												Value="Left" />
										<win:Setter Target="FooterContentBorder.Width"
													Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CompactPaneLength}" />
										<xamarin:Setter Target="FooterContentBorder.Width"
														Value="40" />
									</VisualState.Setters>
								</VisualState>
							</VisualStateGroup>

							<VisualStateGroup x:Name="TitleBarVisibilityGroup">
								<VisualState x:Name="TitleBarVisible" />
								<VisualState x:Name="TitleBarCollapsed">
									<VisualState.Setters>
										<Setter Target="PaneContentGrid.Margin"
												Value="0,32,0,0" />
									</VisualState.Setters>
								</VisualState>
							</VisualStateGroup>

							<VisualStateGroup x:Name="OverflowLabelGroup">
								<VisualState x:Name="OverflowButtonWithLabel" />
								<VisualState x:Name="OverflowButtonNoLabel">
									<VisualState.Setters>
										<Setter Target="TopNavOverflowButton.Style"
												Value="{ThemeResource NavigationViewOverflowButtonNoLabelStyleWhenPaneOnTop}" />
									</VisualState.Setters>
								</VisualState>
							</VisualStateGroup>

							<VisualStateGroup x:Name="BackButtonGroup">
								<VisualState x:Name="BackButtonVisible" />
								<VisualState x:Name="BackButtonCollapsed">
									<VisualState.Setters>
										<Setter Target="BackButtonPlaceholderOnTopNav.Width"
												Value="0" />
									</VisualState.Setters>
								</VisualState>
							</VisualStateGroup>

						</VisualStateManager.VisualStateGroups>

						<Grid>
							<Grid.RowDefinitions>
								<RowDefinition Height="Auto" />
								<RowDefinition Height="*" />
							</Grid.RowDefinitions>

							<StackPanel x:Name="TopNavArea"
										Background="{StaticResource MaterialWUXNavDrawersBackgroundBrush}"
										Grid.Row="0"
										HorizontalAlignment="Stretch"
										VerticalAlignment="Top"
										Canvas.ZIndex="1">

								<Grid x:Name="TopNavTopPadding"
									  Height="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.TopPadding}"
									  Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.TopPaneVisibility}" />

								<Grid x:Name="TopNavGrid"
									  Height="{ThemeResource NavigationViewTopPaneHeight}"
									  Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.TopPaneVisibility}">
									<Grid.ColumnDefinitions>
										<ColumnDefinition x:Name="BackButtonPlaceholderOnTopNav"
														  Width="{ThemeResource NavigationBackButtonWidth}" />
										<ColumnDefinition Width="Auto" />
										<ColumnDefinition Width="Auto" />
										<ColumnDefinition Width="Auto" />
										<ColumnDefinition Width="Auto" />
										<ColumnDefinition Width="*"
														  MinWidth="48" />
										<ColumnDefinition Width="Auto" />
										<ColumnDefinition Width="Auto" />
										<ColumnDefinition Width="Auto" />
									</Grid.ColumnDefinitions>

									<Grid x:Name="TopNavLeftPadding"
										  Grid.Column="1"
										  Width="0" />

									<ContentControl x:Name="PaneHeaderOnTopPane"
													IsTabStop="False"
													VerticalContentAlignment="Stretch"
													HorizontalContentAlignment="Stretch"
													Grid.Column="2" />

									<!-- Top nav list -->
									<NavigationViewList AutomationProperties.LandmarkType="Navigation"
														x:Name="TopNavMenuItemsHost"
														Grid.Column="3"
														SelectionMode="Single"
														IsItemClickEnabled="True"
														ItemTemplate="{TemplateBinding MenuItemTemplate}"
														ItemTemplateSelector="{TemplateBinding MenuItemTemplateSelector}"
														ItemContainerStyle="{TemplateBinding MenuItemContainerStyle}"
														ItemContainerStyleSelector="{TemplateBinding MenuItemContainerStyleSelector}"
														ScrollViewer.HorizontalScrollMode="Disabled"
														ScrollViewer.HorizontalScrollBarVisibility="Hidden"
														ScrollViewer.VerticalScrollMode="Disabled"
														ScrollViewer.VerticalScrollBarVisibility="Hidden"
														SingleSelectionFollowsFocus="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.SingleSelectionFollowsFocus}">
										<ListView.ItemsPanel>
											<ItemsPanelTemplate>
												<ItemsStackPanel Orientation="Horizontal" />
											</ItemsPanelTemplate>
										</ListView.ItemsPanel>
										<ListView.ItemContainerTransitions>
											<TransitionCollection />
										</ListView.ItemContainerTransitions>
									</NavigationViewList>

									<Button x:Name="TopNavOverflowButton"
											Grid.Column="4"
											Content="More"
											Style="{StaticResource NavigationViewOverflowButtonStyleWhenPaneOnTop}"
											Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.OverflowButtonVisibility}">

										<Button.Flyout>
											<Flyout Placement="Bottom">
												<Flyout.FlyoutPresenterStyle>
													<Style TargetType="FlyoutPresenter">
														<Setter Property="Padding"
																Value="0,8" />
														<!-- Set negative top margin to make the flyout align exactly with the button -->
														<Setter Property="Margin"
																Value="0,-4,0,0" />
													</Style>
												</Flyout.FlyoutPresenterStyle>
												<NavigationViewList x:Name="TopNavMenuItemsOverflowHost"
																	ItemTemplate="{TemplateBinding MenuItemTemplate}"
																	ItemTemplateSelector="{TemplateBinding MenuItemTemplateSelector}"
																	ItemContainerStyle="{TemplateBinding MenuItemContainerStyle}"
																	ItemContainerStyleSelector="{TemplateBinding MenuItemContainerStyleSelector}"
																	ScrollViewer.HorizontalScrollBarVisibility="Hidden"
																	ScrollViewer.VerticalScrollBarVisibility="Hidden"
																	SingleSelectionFollowsFocus="False"
																	IsItemClickEnabled="True">
													<ListView.ItemContainerTransitions>
														<TransitionCollection />
													</ListView.ItemContainerTransitions>
												</NavigationViewList>
											</Flyout>
										</Button.Flyout>
									</Button>

									<ContentControl x:Name="PaneCustomContentOnTopPane"
													IsTabStop="False"
													VerticalContentAlignment="Stretch"
													HorizontalContentAlignment="Stretch"
													Grid.Column="5" />

									<Grid x:Name="TopPaneAutoSuggestArea"
										  Height="{ThemeResource NavigationViewTopPaneHeight}"
										  Grid.Column="6">

										<ContentControl x:Name="TopPaneAutoSuggestBoxPresenter"
														Margin="12,0,12,0"
														MinWidth="48"
														IsTabStop="False"
														HorizontalContentAlignment="Stretch"
														VerticalContentAlignment="Center" />
									</Grid>

									<ContentControl x:Name="PaneFooterOnTopPane"
													IsTabStop="False"
													VerticalContentAlignment="Stretch"
													HorizontalContentAlignment="Stretch"
													Grid.Column="7" />

									<NavigationViewItem x:Name="SettingsTopNavPaneItem"
														Style="{ThemeResource MaterialWUXNavigationViewSettingsItemStyleWhenOnTopPane}"
														Grid.Column="8"
														Icon="Setting" />

								</Grid>

								<Border x:Name="TopNavContentOverlayAreaGrid"
										Child="{TemplateBinding ContentOverlay}" />
							</StackPanel>

							<SplitView x:Name="RootSplitView"
									   xamarin:Style="{StaticResource DrawerSplitViewStyle}"
									   Background="{TemplateBinding Background}"
									   CompactPaneLength="{TemplateBinding CompactPaneLength}"
									   DisplayMode="Inline"
									   IsPaneOpen="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsPaneOpen, Mode=TwoWay}"
									   IsTabStop="False"
									   OpenPaneLength="{TemplateBinding OpenPaneLength}"
									   PaneBackground="{StaticResource MaterialWUXNavDrawersBackgroundBrush}"
									   Grid.Row="1">

								<!-- Known Issue ElevatedView creates abnormal and unwanted behavior inside splitview pane -->
								<SplitView.Pane>
									<Grid x:Name="PaneContentGrid"
										  Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.LeftPaneVisibility}">
										<Grid.RowDefinitions>
											<RowDefinition Height="Auto" />
											<RowDefinition Height="0" />
											<!-- above button margin + back button space -->
											<RowDefinition x:Name="PaneContentGridToggleButtonRow"
														   Height="Auto" />
											<RowDefinition Height="Auto" />
											<RowDefinition Height="Auto" />
											<RowDefinition Height="Auto" />
											<RowDefinition Height="8" />
											<!-- above list margin -->
											<RowDefinition Height="*" />
											<RowDefinition Height="Auto" />
											<RowDefinition Height="Auto" />
										</Grid.RowDefinitions>

										<Grid x:Name="ContentPaneTopPadding"
											  Height="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.TopPadding}" />

										<Grid x:Name="PaneToggleButton_GridRow"
											  Grid.Row="2"
											  Height="{StaticResource PaneToggleButtonHeight}" />

										<Grid x:Name="PaneTopContent"
											  Grid.Row="3">

											<ContentControl x:Name="PaneHeaderContentBorder"
															IsTabStop="False"
															VerticalContentAlignment="Stretch"
															HorizontalContentAlignment="Stretch"
															Grid.Column="1" />
										</Grid>

										<Grid x:Name="AutoSuggestArea"
											  Grid.Row="4"
											  Height="{ThemeResource NavigationViewTopPaneHeight}"
											  VerticalAlignment="Center">

											<ContentControl x:Name="PaneAutoSuggestBoxPresenter"
															Margin="{ThemeResource NavigationViewAutoSuggestBoxMargin}"
															IsTabStop="False"
															HorizontalContentAlignment="Stretch"
															VerticalContentAlignment="Center" />

											<Button x:Name="PaneAutoSuggestButton"
													Visibility="Collapsed"
													Style="{ThemeResource NavigationViewPaneSearchButtonStyle}"
													Width="{TemplateBinding CompactPaneLength}" />
										</Grid>

										<ContentControl x:Name="PaneCustomContentBorder"
														IsTabStop="False"
														VerticalContentAlignment="Stretch"
														HorizontalContentAlignment="Stretch"
														Grid.Row="5" />

										<!-- Left nav list -->
										<NavigationViewList x:Name="MenuItemsHost"
															Grid.Row="7"
															SelectionMode="Single"
															IsItemClickEnabled="True"
															HorizontalAlignment="Stretch"
															SelectedItem="{TemplateBinding SelectedItem}"
															ItemTemplate="{TemplateBinding MenuItemTemplate}"
															ItemTemplateSelector="{TemplateBinding MenuItemTemplateSelector}"
															ItemContainerStyle="{TemplateBinding MenuItemContainerStyle}"
															ItemContainerStyleSelector="{TemplateBinding MenuItemContainerStyleSelector}"
															SingleSelectionFollowsFocus="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.SingleSelectionFollowsFocus}" />

										<ContentControl x:Name="FooterContentBorder"
														IsTabStop="False"
														VerticalContentAlignment="Stretch"
														HorizontalContentAlignment="Stretch"
														Grid.Row="8" />

										<NavigationViewItem x:Name="SettingsNavPaneItem"
															Grid.Row="9"
															Icon="Setting" />
									</Grid>
								</SplitView.Pane>

								<SplitView.Content>
									<Grid x:Name="ContentGrid">
										<Grid.RowDefinitions>
											<RowDefinition Height="Auto" />
											<RowDefinition Height="*" />
										</Grid.RowDefinitions>

										<ContentControl x:Name="HeaderContent"
														MinHeight="{StaticResource PaneToggleButtonHeight}"
														IsTabStop="False"
														Margin="4,4,0,0"
														Content="{TemplateBinding Header}"
														ContentTemplate="{TemplateBinding HeaderTemplate}"
														VerticalContentAlignment="Stretch"
														HorizontalContentAlignment="Stretch"
														Style="{StaticResource NavigationViewTitleHeaderContentControlTextStyle}" />

										<ContentPresenter AutomationProperties.LandmarkType="Main"
														  Grid.Row="1"
														  Padding="0"
														  Content="{TemplateBinding Content}" />
									</Grid>
								</SplitView.Content>
							</SplitView>

						</Grid>

						<!--
							Notes:
							- InternalVisibleBoundsPadding is added to this control to make this template compatible
							  with notched devices by default. This behavior is not present in Microsoft's default UWP default.

							- Canvas.ZIndex is not supported in Uno Grid yet, see https://github.com/unoplatform/uno/issues/325
						-->
						<Grid x:Name="PaneToggleButtonGrid"
							  Margin="0,0,0,8"
							  HorizontalAlignment="Left"
							  VerticalAlignment="Top"
							  Canvas.ZIndex="100">

							<Grid.RowDefinitions>
								<RowDefinition Height="Auto" />
								<RowDefinition Height="Auto" />
							</Grid.RowDefinitions>

							<Grid x:Name="TogglePaneTopPadding"
								  Height="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.TopPadding}" />

							<Grid x:Name="ButtonHolderGrid"
								  Grid.Row="1">

								<Button x:Name="NavigationViewBackButton"
										Style="{StaticResource NavigationBackButtonNormalStyle}"
										VerticalAlignment="Top"
										Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.BackButtonVisibility}"
										IsEnabled="{TemplateBinding IsBackEnabled}" />

								<Button x:Name="TogglePaneButton"
										Style="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsPaneOpen, Converter={StaticResource OpenToPaneButtonStyle}}"
										AutomationProperties.LandmarkType="Navigation"
										Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.PaneToggleButtonVisibility}"
										Background="Transparent"
										VerticalAlignment="Top"
										HorizontalAlignment="Left" />
							</Grid>
						</Grid>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</IsNotWinUI3:Style>

	<!--Style which ensures the navigation never displays the menu in "Compact" mode-->
	<IsNotWinUI3:Style x:Key="MaterialWUXNoCompactMenuNavigationViewStyle"
		   BasedOn="{StaticResource MaterialWUXNavigationViewStyle}"
		   TargetType="NavigationView">
		<Setter Property="CompactPaneLength"
				Value="0" />
		<Setter Property="ExpandedModeThresholdWidth"
				Value="600" />
		<Setter Property="CompactModeThresholdWidth"
				Value="100000" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="NavigationView">
					<Grid x:Name="RootGrid">

						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="DisplayModeGroup">
								<VisualState x:Name="Compact" />
								<VisualState x:Name="Expanded">
									<VisualState.Setters>
										<Setter Target="TopNavGrid.Visibility"
												Value="Collapsed" />
									</VisualState.Setters>
								</VisualState>

								<VisualState x:Name="Minimal">
									<VisualState.Setters>
										<Setter Target="HeaderContent.Margin"
												Value="52,5,0,0" />
									</VisualState.Setters>
								</VisualState>

								<VisualState x:Name="MinimalWithBackButton">
									<VisualState.Setters>
										<Setter Target="HeaderContent.Margin"
												Value="104,5,0,0" />
									</VisualState.Setters>
								</VisualState>
							</VisualStateGroup>

							<VisualStateGroup x:Name="TogglePaneGroup">
								<VisualState x:Name="TogglePaneButtonVisible" />
								<VisualState x:Name="TogglePaneButtonCollapsed">
									<VisualState.Setters>
										<Setter Target="PaneContentGridToggleButtonRow.Height"
												Value="4" />
									</VisualState.Setters>
								</VisualState>
							</VisualStateGroup>

							<VisualStateGroup x:Name="HeaderGroup">
								<VisualState x:Name="HeaderVisible" />
								<VisualState x:Name="HeaderCollapsed">
									<VisualState.Setters>
										<Setter Target="HeaderContent.Visibility"
												Value="Collapsed" />
									</VisualState.Setters>
								</VisualState>
							</VisualStateGroup>

							<VisualStateGroup x:Name="SettingsGroup">
								<VisualState x:Name="SettingsVisible" />
								<VisualState x:Name="SettingsCollapsed">
									<VisualState.Setters>
										<Setter Target="SettingsNavPaneItem.Visibility"
												Value="Collapsed" />
										<Setter Target="SettingsTopNavPaneItem.Visibility"
												Value="Collapsed" />
									</VisualState.Setters>
								</VisualState>
							</VisualStateGroup>

							<VisualStateGroup x:Name="AutoSuggestGroup">
								<VisualState x:Name="AutoSuggestBoxVisible" />
								<VisualState x:Name="AutoSuggestBoxCollapsed">
									<VisualState.Setters>
										<Setter Target="AutoSuggestArea.Visibility"
												Value="Collapsed" />
										<Setter Target="TopPaneAutoSuggestArea.Visibility"
												Value="Collapsed" />
									</VisualState.Setters>
								</VisualState>
							</VisualStateGroup>

							<VisualStateGroup x:Name="PaneStateGroup">
								<VisualState x:Name="NotClosedCompact" />
								<VisualState x:Name="ClosedCompact">
									<VisualState.Setters>
										<Setter Target="PaneAutoSuggestBoxPresenter.Visibility"
												Value="Collapsed" />
									</VisualState.Setters>
								</VisualState>
							</VisualStateGroup>

							<VisualStateGroup x:Name="PaneStateListSizeGroup">
								<VisualState x:Name="ListSizeFull" />

								<!-- Display the list as empty instead of compact -->
								<VisualState x:Name="ListSizeCompact">
									<VisualState.Setters>
										<Setter Target="MenuItemsHost.Width"
												Value="0" />
										<Setter Target="SettingsNavPaneItem.Width"
												Value="0" />
										<Setter Target="PaneTopContent.Visibility"
												Value="Collapsed" />
										<Setter Target="PaneHeaderContentBorder.Visibility"
												Value="Collapsed" />
										<Setter Target="PaneCustomContentBorder.HorizontalAlignment"
												Value="Left" />
										<Setter Target="PaneCustomContentBorder.Width"
												Value="0" />
										<Setter Target="FooterContentBorder.Width"
												Value="0" />
										<Setter Target="ListSizeCompactPadding.Visibility"
												Value="Visible" />
									</VisualState.Setters>
								</VisualState>
							</VisualStateGroup>

							<VisualStateGroup x:Name="TitleBarVisibilityGroup">
								<VisualState x:Name="TitleBarVisible" />
								<VisualState x:Name="TitleBarCollapsed">
									<VisualState.Setters>
										<Setter Target="PaneContentGrid.Margin"
												Value="0,32,0,0" />
									</VisualState.Setters>
								</VisualState>
							</VisualStateGroup>

							<VisualStateGroup x:Name="OverflowLabelGroup">
								<VisualState x:Name="OverflowButtonWithLabel" />
								<VisualState x:Name="OverflowButtonNoLabel">
									<VisualState.Setters>
										<Setter Target="TopNavOverflowButton.Style"
												Value="{ThemeResource NavigationViewOverflowButtonNoLabelStyleWhenPaneOnTop}" />
									</VisualState.Setters>
								</VisualState>
							</VisualStateGroup>

							<VisualStateGroup x:Name="BackButtonGroup">
								<VisualState x:Name="BackButtonVisible" />
								<VisualState x:Name="BackButtonCollapsed">
									<VisualState.Setters>
										<Setter Target="BackButtonPlaceholderOnTopNav.Width"
												Value="0" />
									</VisualState.Setters>
								</VisualState>
							</VisualStateGroup>

						</VisualStateManager.VisualStateGroups>

						<Grid>
							<Grid.RowDefinitions>
								<RowDefinition Height="Auto" />
								<RowDefinition Height="*" />
							</Grid.RowDefinitions>

							<StackPanel x:Name="TopNavArea"
										Background="{StaticResource MaterialWUXNavDrawersBackgroundBrush}"
										Grid.Row="0"
										HorizontalAlignment="Stretch"
										VerticalAlignment="Top"
										Canvas.ZIndex="1">

								<Grid x:Name="TopNavTopPadding"
									  Height="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.TopPadding}"
									  Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.TopPaneVisibility}" />

								<Grid x:Name="TopNavGrid"
									  Height="{ThemeResource NavigationViewTopPaneHeight}"
									  Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.TopPaneVisibility}">
									<Grid.ColumnDefinitions>
										<ColumnDefinition x:Name="BackButtonPlaceholderOnTopNav"
														  Width="{ThemeResource NavigationBackButtonWidth}" />
										<ColumnDefinition Width="Auto" />
										<ColumnDefinition Width="Auto" />
										<ColumnDefinition Width="Auto" />
										<ColumnDefinition Width="Auto" />
										<ColumnDefinition Width="*"
														  MinWidth="48" />
										<ColumnDefinition Width="Auto" />
										<ColumnDefinition Width="Auto" />
										<ColumnDefinition Width="Auto" />
									</Grid.ColumnDefinitions>

									<Grid x:Name="TopNavLeftPadding"
										  Grid.Column="1"
										  Width="0" />

									<ContentControl x:Name="PaneHeaderOnTopPane"
													IsTabStop="False"
													VerticalContentAlignment="Stretch"
													HorizontalContentAlignment="Stretch"
													Grid.Column="2" />

									<!-- Top nav list -->
									<NavigationViewList AutomationProperties.LandmarkType="Navigation"
														x:Name="TopNavMenuItemsHost"
														Grid.Column="3"
														SelectionMode="Single"
														IsItemClickEnabled="True"
														ItemTemplate="{TemplateBinding MenuItemTemplate}"
														ItemTemplateSelector="{TemplateBinding MenuItemTemplateSelector}"
														ItemContainerStyle="{TemplateBinding MenuItemContainerStyle}"
														ItemContainerStyleSelector="{TemplateBinding MenuItemContainerStyleSelector}"
														ScrollViewer.HorizontalScrollMode="Disabled"
														ScrollViewer.HorizontalScrollBarVisibility="Hidden"
														ScrollViewer.VerticalScrollMode="Disabled"
														ScrollViewer.VerticalScrollBarVisibility="Hidden"
														SingleSelectionFollowsFocus="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.SingleSelectionFollowsFocus}">
										<ListView.ItemsPanel>
											<ItemsPanelTemplate>
												<ItemsStackPanel Orientation="Horizontal" />
											</ItemsPanelTemplate>
										</ListView.ItemsPanel>
										<ListView.ItemContainerTransitions>
											<TransitionCollection />
										</ListView.ItemContainerTransitions>
									</NavigationViewList>

									<Button x:Name="TopNavOverflowButton"
											Grid.Column="4"
											Content="More"
											Style="{StaticResource NavigationViewOverflowButtonStyleWhenPaneOnTop}"
											Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.OverflowButtonVisibility}">

										<Button.Flyout>
											<Flyout Placement="Bottom">
												<Flyout.FlyoutPresenterStyle>
													<Style TargetType="FlyoutPresenter">
														<Setter Property="Padding"
																Value="0,8" />
														<!-- Set negative top margin to make the flyout align exactly with the button -->
														<Setter Property="Margin"
																Value="0,-4,0,0" />
													</Style>
												</Flyout.FlyoutPresenterStyle>
												<NavigationViewList x:Name="TopNavMenuItemsOverflowHost"
																	ItemTemplate="{TemplateBinding MenuItemTemplate}"
																	ItemTemplateSelector="{TemplateBinding MenuItemTemplateSelector}"
																	ItemContainerStyle="{TemplateBinding MenuItemContainerStyle}"
																	ItemContainerStyleSelector="{TemplateBinding MenuItemContainerStyleSelector}"
																	ScrollViewer.HorizontalScrollBarVisibility="Hidden"
																	ScrollViewer.VerticalScrollBarVisibility="Hidden"
																	SingleSelectionFollowsFocus="False"
																	IsItemClickEnabled="True">
													<ListView.ItemContainerTransitions>
														<TransitionCollection />
													</ListView.ItemContainerTransitions>
												</NavigationViewList>
											</Flyout>
										</Button.Flyout>
									</Button>

									<ContentControl x:Name="PaneCustomContentOnTopPane"
													IsTabStop="False"
													VerticalContentAlignment="Stretch"
													HorizontalContentAlignment="Stretch"
													Grid.Column="5" />

									<Grid x:Name="TopPaneAutoSuggestArea"
										  Height="{ThemeResource NavigationViewTopPaneHeight}"
										  Grid.Column="6">

										<ContentControl x:Name="TopPaneAutoSuggestBoxPresenter"
														Margin="12,0,12,0"
														MinWidth="48"
														IsTabStop="False"
														HorizontalContentAlignment="Stretch"
														VerticalContentAlignment="Center" />
									</Grid>

									<ContentControl x:Name="PaneFooterOnTopPane"
													IsTabStop="False"
													VerticalContentAlignment="Stretch"
													HorizontalContentAlignment="Stretch"
													Grid.Column="7" />

									<NavigationViewItem x:Name="SettingsTopNavPaneItem"
														Style="{ThemeResource MaterialWUXNavigationViewSettingsItemStyleWhenOnTopPane}"
														Grid.Column="8"
														Icon="Setting" />

								</Grid>

								<Border x:Name="TopNavContentOverlayAreaGrid"
										Child="{TemplateBinding ContentOverlay}" />
							</StackPanel>

							<SplitView x:Name="RootSplitView"
									   Background="{TemplateBinding Background}"
									   CompactPaneLength="{TemplateBinding CompactPaneLength}"
									   DisplayMode="Inline"
									   IsPaneOpen="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsPaneOpen, Mode=TwoWay}"
									   IsTabStop="False"
									   OpenPaneLength="{TemplateBinding OpenPaneLength}"
									   PaneBackground="{StaticResource MaterialWUXNavDrawersBackgroundBrush}"
									   Grid.Row="1">

								<!-- Known Issue ElevatedView creates abnormal and unwanted behavior inside splitview pane -->
								<SplitView.Pane>
									<Grid x:Name="PaneContentGrid"
										  Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.LeftPaneVisibility}">
										<Grid.RowDefinitions>
											<RowDefinition Height="Auto" />
											<RowDefinition Height="0" />
											<!-- above button margin + back button space -->
											<RowDefinition x:Name="PaneContentGridToggleButtonRow"
														   Height="Auto" />
											<RowDefinition Height="Auto" />
											<RowDefinition Height="Auto" />
											<RowDefinition Height="Auto" />
											<RowDefinition Height="8" />
											<!-- above list margin -->
											<RowDefinition Height="*" />
											<RowDefinition Height="Auto" />
											<RowDefinition Height="Auto" />
										</Grid.RowDefinitions>

										<Grid x:Name="ContentPaneTopPadding"
											  Height="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.TopPadding}" />

										<Grid x:Name="PaneToggleButton_GridRow"
											  Grid.Row="2"
											  Height="{StaticResource PaneToggleButtonHeight}" />

										<Grid x:Name="PaneTopContent"
											  Grid.Row="3">

											<ContentControl x:Name="PaneHeaderContentBorder"
															IsTabStop="False"
															VerticalContentAlignment="Stretch"
															HorizontalContentAlignment="Stretch"
															Grid.Column="1" />
										</Grid>

										<Grid x:Name="AutoSuggestArea"
											  Grid.Row="4"
											  Height="{ThemeResource NavigationViewTopPaneHeight}"
											  VerticalAlignment="Center">

											<ContentControl x:Name="PaneAutoSuggestBoxPresenter"
															Margin="{ThemeResource NavigationViewAutoSuggestBoxMargin}"
															IsTabStop="False"
															HorizontalContentAlignment="Stretch"
															VerticalContentAlignment="Center" />

											<Button x:Name="PaneAutoSuggestButton"
													Visibility="Collapsed"
													Style="{ThemeResource NavigationViewPaneSearchButtonStyle}"
													Width="{TemplateBinding CompactPaneLength}" />
										</Grid>

										<ContentControl x:Name="PaneCustomContentBorder"
														IsTabStop="False"
														VerticalContentAlignment="Stretch"
														HorizontalContentAlignment="Stretch"
														Grid.Row="5" />

										<!-- Left nav list -->
										<NavigationViewList x:Name="MenuItemsHost"
															Grid.Row="7"
															SelectionMode="Single"
															IsItemClickEnabled="True"
															HorizontalAlignment="Stretch"
															SelectedItem="{TemplateBinding SelectedItem}"
															ItemTemplate="{TemplateBinding MenuItemTemplate}"
															ItemTemplateSelector="{TemplateBinding MenuItemTemplateSelector}"
															ItemContainerStyle="{TemplateBinding MenuItemContainerStyle}"
															ItemContainerStyleSelector="{TemplateBinding MenuItemContainerStyleSelector}"
															SingleSelectionFollowsFocus="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.SingleSelectionFollowsFocus}" />

										<ContentControl x:Name="FooterContentBorder"
														IsTabStop="False"
														VerticalContentAlignment="Stretch"
														HorizontalContentAlignment="Stretch"
														Grid.Row="8" />

										<NavigationViewItem x:Name="SettingsNavPaneItem"
															Grid.Row="9"
															Icon="Setting" />
									</Grid>
								</SplitView.Pane>

								<SplitView.Content>
									<Grid x:Name="ContentGrid">
										<Grid.RowDefinitions>
											<RowDefinition Height="Auto" />
											<RowDefinition Height="Auto" />
											<RowDefinition Height="*" />
										</Grid.RowDefinitions>

										<!--Padding to compensate for the fact that there is no side panel in ListSizeCompact for this style, so we must
										ensure that the content is not placed behind the ToggleButton-->
										<Grid x:Name="ListSizeCompactPadding"
											  Height="{StaticResource PaneToggleButtonHeight}"
											  Visibility="Collapsed" />

										<ContentControl x:Name="HeaderContent"
														MinHeight="{StaticResource PaneToggleButtonHeight}"
														IsTabStop="False"
														Margin="4,4,0,0"
														Content="{TemplateBinding Header}"
														ContentTemplate="{TemplateBinding HeaderTemplate}"
														VerticalContentAlignment="Stretch"
														HorizontalContentAlignment="Stretch"
														Style="{StaticResource NavigationViewTitleHeaderContentControlTextStyle}"
														Grid.Row="1" />

										<ContentPresenter AutomationProperties.LandmarkType="Main"
														  Grid.Row="2"
														  Padding="0"
														  Content="{TemplateBinding Content}" />
									</Grid>
								</SplitView.Content>
							</SplitView>

						</Grid>

						<!--
								Notes:
								- InternalVisibleBoundsPadding is added to this control to make this template compatible
								  with notched devices by default. This behavior is not present in Microsoft's default UWP default.

								- Canvas.ZIndex is not supported in Uno Grid yet, see https://github.com/unoplatform/uno/issues/325
						-->
						<Grid x:Name="PaneToggleButtonGrid"
							  Margin="0,0,0,8"
							  HorizontalAlignment="Left"
							  VerticalAlignment="Top"
							  Canvas.ZIndex="100">

							<Grid.RowDefinitions>
								<RowDefinition Height="Auto" />
								<RowDefinition Height="Auto" />
							</Grid.RowDefinitions>

							<Grid x:Name="TogglePaneTopPadding"
								  Height="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.TopPadding}" />

							<Grid x:Name="ButtonHolderGrid"
								  Grid.Row="1">

								<Button x:Name="NavigationViewBackButton"
										Style="{StaticResource NavigationBackButtonNormalStyle}"
										VerticalAlignment="Top"
										Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.BackButtonVisibility}"
										IsEnabled="{TemplateBinding IsBackEnabled}" />

								<Button x:Name="TogglePaneButton"
										Style="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsPaneOpen, Converter={StaticResource OpenToPaneButtonStyle}}"
										AutomationProperties.LandmarkType="Navigation"
										Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.PaneToggleButtonVisibility}"
										Background="Transparent"
										VerticalAlignment="Top" />
							</Grid>
						</Grid>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</IsNotWinUI3:Style>

	<IsNotWinUI3:Style x:Key="MaterialWUXNavigationViewItemStyle"
		   TargetType="NavigationViewItem">
		<Setter Property="Foreground"
				Value="{StaticResource MaterialWUXNavDrawersTextBrush}" />
		<Setter Property="Background"
				Value="{StaticResource MaterialWUXNavDrawersBackgroundBrush}" />
		<Setter Property="FontWeight"
				Value="Normal" />
		<Setter Property="FontSize"
				Value="{StaticResource MaterialWUXNavDrawersFontSize}" />
		<Setter Property="UseSystemFocusVisuals"
				Value="True" />
		<Setter Property="HorizontalContentAlignment"
				Value="Stretch" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="NavigationViewItem">
					<NavigationViewItemPresenter x:Name="NavigationViewItemPresenter"
												 Icon="{TemplateBinding Icon}"
												 ContentTransitions="{TemplateBinding ContentTransitions}"
												 ContentTemplate="{TemplateBinding ContentTemplate}"
												 Margin="{TemplateBinding Margin}"
												 Padding="{TemplateBinding Padding}"
												 Foreground="{TemplateBinding Foreground}"
												 Background="{TemplateBinding Background}"
												 BorderBrush="{TemplateBinding BorderBrush}"
												 BorderThickness="{TemplateBinding BorderThickness}"
												 UseSystemFocusVisuals="{TemplateBinding UseSystemFocusVisuals}"
												 VerticalAlignment="{TemplateBinding VerticalAlignment}"
												 HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
												 VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
												 HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
												 ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
												 Content="{TemplateBinding Content}"
												 IsTabStop="False">

						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="ItemOnNavigationViewListPositionStates">
								<VisualState x:Name="OnLeftNavigation">
									<VisualState.Setters>
										<Setter Target="NavigationViewItemPresenter.Style"
												Value="{StaticResource MaterialWUXNavigationViewItemPresenterStyleWhenOnLeftPane}" />
									</VisualState.Setters>
								</VisualState>
								<VisualState x:Name="OnLeftNavigationReveal" />
								<VisualState x:Name="OnTopNavigationPrimary">
									<VisualState.Setters>
										<Setter Target="NavigationViewItemPresenter.Style"
												Value="{StaticResource NavigationViewItemPresenterStyleWhenOnTopPane}" />
									</VisualState.Setters>
								</VisualState>
								<VisualState x:Name="OnTopNavigationPrimaryReveal">
									<VisualState.Setters>
										<Setter Target="NavigationViewItemPresenter.Style"
												Value="{StaticResource NavigationViewItemPresenterStyleWhenOnTopPaneWithRevealFocus}" />
									</VisualState.Setters>
								</VisualState>
								<VisualState x:Name="OnTopNavigationOverflow">
									<VisualState.Setters>
										<Setter Target="NavigationViewItemPresenter.Style"
												Value="{StaticResource NavigationViewItemPresenterStyleWhenOnTopPaneOverflow}" />
									</VisualState.Setters>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
					</NavigationViewItemPresenter>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</IsNotWinUI3:Style>

	<IsNotWinUI3:Style TargetType="NavigationViewItemHeader">
		<Setter Property="IsEnabled"
				Value="False" />
		<Setter Property="IsTabStop"
				Value="False" />
		<Setter Property="MinHeight"
				Value="0" />
		<Setter Property="HorizontalContentAlignment"
				Value="Stretch" />
		<Setter Property="AutomationProperties.AccessibilityView"
				Value="Raw" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="NavigationViewItemHeader">
					<Grid>

						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="PaneStates">
								<VisualStateGroup.Transitions>
									<VisualTransition From="HeaderTextCollapsed"
													  To="HeaderTextVisible">
										<Storyboard>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="HeaderText"
																		   Storyboard.TargetProperty="Visibility">
												<DiscreteObjectKeyFrame KeyTime="0:0:0"
																		Value="Visible" />
											</ObjectAnimationUsingKeyFrames>
										</Storyboard>
									</VisualTransition>
									<VisualTransition From="HeaderTextVisible"
													  To="HeaderTextCollapsed">
										<Storyboard>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="HeaderText"
																		   Storyboard.TargetProperty="Visibility">
												<DiscreteObjectKeyFrame KeyTime="0:0:0"
																		Value="Collapsed" />
											</ObjectAnimationUsingKeyFrames>
										</Storyboard>
									</VisualTransition>
								</VisualStateGroup.Transitions>

								<VisualState x:Name="HeaderTextVisible" />
								<VisualState x:Name="HeaderTextCollapsed">
									<VisualState.Setters>
										<Setter Target="HeaderText.Visibility"
												Value="Collapsed" />
									</VisualState.Setters>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>

						<Grid x:Name="InnerHeaderGrid"
							  HorizontalAlignment="Left">
							<TextBlock x:Name="HeaderText"
									   VerticalAlignment="Center"
									   Margin="16,8"
									   Opacity="{StaticResource MaterialLowOpacity}"
									   FontSize="16"
									   LineHeight="23"
									   Text="{TemplateBinding Content}"
									   TextWrapping="NoWrap" />
						</Grid>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</IsNotWinUI3:Style>

	<IsNotWinUI3:Style TargetType="NavigationViewItem"
		   x:Key="MaterialWUXNavigationViewSettingsItemStyleWhenOnTopPane">
		<Setter Property="Foreground"
				Value="{StaticResource MaterialWUXNavDrawersTextBrush}" />
		<Setter Property="Background"
				Value="{StaticResource MaterialWUXNavDrawersBackgroundBrush}" />
		<Setter Property="FontWeight"
				Value="Normal" />
		<Setter Property="FontSize"
				Value="{StaticResource MaterialWUXNavDrawersFontSize}" />
		<Setter Property="UseSystemFocusVisuals"
				Value="True" />
		<Setter Property="HorizontalContentAlignment"
				Value="Stretch" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="NavigationViewItem">
					<Grid x:Name="LayoutRoot"
						  Background="{TemplateBinding Background}"
						  Control.IsTemplateFocusTarget="True">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="PointerStates">
								<VisualState x:Name="Normal" />
								<VisualState x:Name="PointerOver">
									<VisualState.Setters>
										<Setter Target="LayoutRoot.Background"
												Value="{ThemeResource TopNavigationViewItemBackgroundPointerOver}" />
										<Setter Target="Icon.Foreground"
												Value="{ThemeResource TopNavigationViewItemForegroundPointerOver}" />
									</VisualState.Setters>
								</VisualState>
								<VisualState x:Name="Pressed">
									<VisualState.Setters>
										<Setter Target="LayoutRoot.Background"
												Value="{ThemeResource TopNavigationViewItemBackgroundPressed}" />
										<Setter Target="Icon.Foreground"
												Value="{ThemeResource TopNavigationViewItemForegroundPressed}" />
									</VisualState.Setters>
								</VisualState>
								<VisualState x:Name="Selected">
									<VisualState.Setters>
										<Setter Target="LayoutRoot.Background"
												Value="{StaticResource MaterialWUXNavDrawersSelectedBrush}" />
										<Setter Target="Icon.Foreground"
												Value="{StaticResource MaterialWUXNavDrawersSelectedIconBrush}" />
									</VisualState.Setters>
								</VisualState>
								<VisualState x:Name="PointerOverSelected">
									<VisualState.Setters>
										<Setter Target="LayoutRoot.Background"
												Value="{ThemeResource TopNavigationViewItemBackgroundPointerOver}" />
										<Setter Target="Icon.Foreground"
												Value="{ThemeResource TopNavigationViewItemForegroundPointerOver}" />
									</VisualState.Setters>
								</VisualState>
								<VisualState x:Name="PressedSelected">
									<VisualState.Setters>
										<Setter Target="LayoutRoot.Background"
												Value="{ThemeResource TopNavigationViewItemBackgroundPressed}" />
										<Setter Target="Icon.Foreground"
												Value="{ThemeResource TopNavigationViewItemForegroundPressed}" />
									</VisualState.Setters>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="DisabledStates">
								<VisualState x:Name="Enabled" />
								<VisualState x:Name="Disabled">
									<VisualState.Setters>
										<Setter Target="Icon.Foreground"
												Value="{ThemeResource TopNavigationViewItemForegroundLow}" />
									</VisualState.Setters>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Grid x:Name="ContentGrid">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto" />
								<ColumnDefinition Width="*" />
							</Grid.ColumnDefinitions>
							<Grid.RowDefinitions>
								<RowDefinition x:Name="IconRow"
											   Height="Auto" />
								<RowDefinition Height="*" />
							</Grid.RowDefinitions>
							<Viewbox x:Name="IconBox"
									 Grid.Row="1"
									 Grid.Column="1"
									 Height="16"
									 Width="48"
									 Margin="0,0,0,0"
									 VerticalAlignment="Center"
									 HorizontalAlignment="Center">
								<ContentPresenter x:Name="Icon"
												  Content="{TemplateBinding Icon}"
												  Foreground="{ThemeResource TopNavigationViewItemForeground}" />
							</Viewbox>
						</Grid>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</IsNotWinUI3:Style>

	<IsNotWinUI3:Style TargetType="NavigationViewItemPresenter"
		   x:Key="MaterialWUXNavigationViewItemPresenterStyleWhenOnLeftPane">
		<Setter Property="Foreground"
				Value="{StaticResource MaterialWUXNavDrawersTextBrush}" />
		<Setter Property="Background"
				Value="{StaticResource MaterialWUXNavDrawersBackgroundBrush}" />
		<Setter Property="UseSystemFocusVisuals"
				Value="True" />
		<Setter Property="HorizontalContentAlignment"
				Value="Stretch" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="NavigationViewItemPresenter">
					<Grid x:Name="LayoutRoot"
						  Height="48"
						  Background="{TemplateBinding Background}"
						  Control.IsTemplateFocusTarget="True">

						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="PointerStates">
								<VisualState x:Name="Normal" />
								<VisualState x:Name="PointerOver">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="HoverOverlay"
														 Storyboard.TargetProperty="Opacity"
														 Duration="{StaticResource MaterialAnimationDuration}"
														 To="1">
											<DoubleAnimation.EasingFunction>
												<CubicEase EasingMode="EaseIn" />
											</DoubleAnimation.EasingFunction>
										</DoubleAnimation>
									</Storyboard>
								</VisualState>

								<VisualState x:Name="Pressed">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="PressedOverlay"
														 Storyboard.TargetProperty="Opacity"
														 Duration="{StaticResource MaterialAnimationDuration}"
														 To="1">
											<DoubleAnimation.EasingFunction>
												<CubicEase EasingMode="EaseIn" />
											</DoubleAnimation.EasingFunction>
										</DoubleAnimation>
									</Storyboard>
								</VisualState>

								<VisualState x:Name="Selected">
									<VisualState.Setters>
										<Setter Target="LayoutRoot.Background"
												Value="{StaticResource MaterialWUXNavDrawersSelectedBrush}" />
										<Setter Target="ContentPresenter.Foreground"
												Value="{StaticResource MaterialWUXNavDrawersSelectedTextBrush}" />
										<Setter Target="Icon.Foreground"
												Value="{StaticResource MaterialWUXNavDrawersSelectedIconBrush}" />
									</VisualState.Setters>
								</VisualState>
								<VisualState x:Name="PointerOverSelected">
									<VisualState.Setters>
										<Setter Target="HoverOverlay.Opacity"
												Value="1" />
										<Setter Target="LayoutRoot.Background"
												Value="{StaticResource MaterialWUXNavDrawersSelectedBrush}" />
										<Setter Target="ContentPresenter.Foreground"
												Value="{StaticResource MaterialWUXNavDrawersSelectedTextBrush}" />
										<Setter Target="Icon.Foreground"
												Value="{StaticResource MaterialWUXNavDrawersSelectedIconBrush}" />
									</VisualState.Setters>
								</VisualState>
								<VisualState x:Name="PressedSelected">
									<VisualState.Setters>
										<Setter Target="PressedOverlay.Opacity"
												Value="1" />
										<Setter Target="LayoutRoot.Background"
												Value="{StaticResource MaterialWUXNavDrawersSelectedBrush}" />
										<Setter Target="ContentPresenter.Foreground"
												Value="{StaticResource MaterialWUXNavDrawersSelectedTextBrush}" />
										<Setter Target="Icon.Foreground"
												Value="{StaticResource MaterialWUXNavDrawersSelectedIconBrush}" />
									</VisualState.Setters>
								</VisualState>
							</VisualStateGroup>

							<VisualStateGroup x:Name="DisabledStates">
								<VisualState x:Name="Enabled" />
								<VisualState x:Name="Disabled">
									<VisualState.Setters>
										<Setter Target="LayoutRoot.Background"
												Value="{StaticResource MaterialOnSurfaceLowBrush}" />
									</VisualState.Setters>
								</VisualState>
							</VisualStateGroup>

							<VisualStateGroup x:Name="IconStates">
								<VisualState x:Name="IconVisible" />
								<VisualState x:Name="IconCollapsed">
									<VisualState.Setters>
										<Setter Target="IconBox.Visibility"
												Value="Collapsed" />
										<Setter Target="IconColumn.Width"
												Value="16" />
									</VisualState.Setters>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>

						<Grid Height="40"
							  HorizontalAlignment="Left"
							  x:Name="ContentGrid">
							<Grid.ColumnDefinitions>
								<ColumnDefinition x:Name="IconColumn"
												  Width="Auto" />
								<ColumnDefinition Width="*" />
							</Grid.ColumnDefinitions>

							<Viewbox x:Name="IconBox"
									 Margin="18,10">
								<ContentPresenter x:Name="Icon"
												  Content="{TemplateBinding Icon}"
												  Foreground="{TemplateBinding Foreground}" />
							</Viewbox>

							<ContentPresenter x:Name="ContentPresenter"
											  Grid.Column="1"
											  ContentTransitions="{TemplateBinding ContentTransitions}"
											  ContentTemplate="{TemplateBinding ContentTemplate}"
											  Content="{TemplateBinding Content}"
											  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
											  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
											  ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
											  Margin="{TemplateBinding Padding}"
											  AutomationProperties.AccessibilityView="Raw" />
						</Grid>

						<Border x:Name="HoverOverlay"
								Background="{StaticResource MaterialOnSurfaceHoverBrush}"
								Opacity="0" />

						<Border x:Name="PressedOverlay"
								Background="{StaticResource MaterialOnSurfacePressedBrush}"
								Opacity="0" />
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</IsNotWinUI3:Style>
</ResourceDictionary>

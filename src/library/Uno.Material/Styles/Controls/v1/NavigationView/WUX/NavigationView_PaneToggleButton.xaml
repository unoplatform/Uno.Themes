<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
					xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
					xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
					xmlns:IsNotWinUI3="http://schemas.microsoft.com/winfx/2006/xaml/presentation?IsTypeNotPresent(Microsoft.UI.Xaml.FrameworkElement)"
					xmlns:android="http://uno.ui/android"
					xmlns:not_android="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					xmlns:um="using:Uno.Material"
					mc:Ignorable="d android">

	<x:String x:Key="BackArrowPathData">M8,0 L9.4,1.4 L3.8,7 L16,7 L16,9 L3.8,9 L9.4,14.6 L8,16 L0,8 z</x:String>

	<um:FromOpenToCustomValueConverter x:Name="OpenToPaneButtonStyle"
									   ValueIfOpen="{StaticResource MaterialPaneBackArrowToggleButtonStyle}"
									   ValueIfClosed="{StaticResource MaterialPaneToggleButtonStyle}" />
	
	<!-- PaneToggleButton Style-->
	<IsNotWinUI3:Style x:Key="MaterialPaneToggleButtonStyle"
		   TargetType="Button">
		<Setter Property="FontSize"
				Value="16" />
		<Setter Property="FontFamily"
				Value="{StaticResource SymbolThemeFontFamily}" />
		<Setter Property="MinHeight"
				Value="{StaticResource PaneToggleButtonHeight}" />
		<Setter Property="MinWidth"
				Value="52" />
		<Setter Property="Padding"
				Value="2" />
		<Setter Property="HorizontalAlignment"
				Value="Left" />
		<Setter Property="VerticalAlignment"
				Value="Top" />
		<Setter Property="HorizontalContentAlignment"
				Value="Center" />
		<Setter Property="VerticalContentAlignment"
				Value="Center" />
		<Setter Property="Background"
				Value="{StaticResource MaterialWUXNavDrawersBackgroundBrush}" />
		<Setter Property="Foreground"
				Value="{StaticResource MaterialWUXNavDrawersTextBrush}" />
		<Setter Property="Content"
				Value="&#xE700;" />

		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Button">
					<Grid x:Name="LayoutRoot"
						  Background="{TemplateBinding Background}"
						  HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
						  Height="{TemplateBinding MinHeight}"
						  Width="{TemplateBinding MinWidth}"
						  Margin="{TemplateBinding Padding}">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal" />
								<VisualState x:Name="PointerOver">
									<!-- Workaround for #92 - Android PointerOver state is being applied and maintained on click -->
									<not_android:Storyboard>
										<DoubleAnimation Storyboard.TargetName="HoverOverlay"
														 Storyboard.TargetProperty="Opacity"
														 Duration="{StaticResource MaterialAnimationDuration}"
														 BeginTime="{StaticResource MaterialDelayedBeginTime}"
														 To="1">
											<DoubleAnimation.EasingFunction>
												<CubicEase EasingMode="EaseIn" />
											</DoubleAnimation.EasingFunction>
										</DoubleAnimation>
									</not_android:Storyboard>
								</VisualState>

								<VisualState x:Name="Pressed">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="PressedOverlay"
														 Storyboard.TargetProperty="Opacity"
														 Duration="{StaticResource MaterialAnimationDuration}"
														 To="1">
											<DoubleAnimation.EasingFunction>
												<CubicEase EasingMode="EaseIn" />
											</DoubleAnimation.EasingFunction>
										</DoubleAnimation>
									</Storyboard>
								</VisualState>

								<VisualState x:Name="Disabled">
									<VisualState.Setters>
										<Setter Target="LayoutRoot.Background"
												Value="{ThemeResource MaterialOnSurfaceLowBrush}" />
									</VisualState.Setters>
								</VisualState>
								<VisualState x:Name="Checked">
									<VisualState.Setters>
										<Setter Target="LayoutRoot.Background"
												Value="{ThemeResource ToggleButtonBackgroundChecked}" />
										<Setter Target="ContentPresenter.Foreground"
												Value="{ThemeResource ToggleButtonForegroundChecked}" />
									</VisualState.Setters>
								</VisualState>
								<VisualState x:Name="CheckedPointerOver">
									<VisualState.Setters>
										<Setter Target="LayoutRoot.Background"
												Value="{ThemeResource ToggleButtonBackgroundCheckedPointerOver}" />
										<Setter Target="ContentPresenter.Foreground"
												Value="{ThemeResource ToggleButtonForegroundCheckedPointerOver}" />
										<Setter Target="HoverOverlay.Opacity"
												Value="1" />
									</VisualState.Setters>
								</VisualState>

								<VisualState x:Name="CheckedPressed">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="PressedOverlay"
														 Storyboard.TargetProperty="Opacity"
														 Duration="{StaticResource MaterialAnimationDuration}"
														 To="1">
											<DoubleAnimation.EasingFunction>
												<CubicEase EasingMode="EaseIn" />
											</DoubleAnimation.EasingFunction>
										</DoubleAnimation>
									</Storyboard>
								</VisualState>

								<VisualState x:Name="CheckedDisabled">
									<VisualState.Setters>
										<Setter Target="LayoutRoot.Background"
												Value="{ThemeResource MaterialOnSurfaceLowBrush}" />
									</VisualState.Setters>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>

						<Grid Width="{TemplateBinding MinWidth}"
							  HorizontalAlignment="Left">
							<Viewbox x:Name="IconHost"
									 Width="20"
									 Height="20"
									 HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
									 VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
									 AutomationProperties.AccessibilityView="Raw">

								<ContentPresenter x:Name="ContentPresenter"
												  Content="{TemplateBinding Content}"
												  FontSize="{TemplateBinding FontSize}"
												  AutomationProperties.AccessibilityView="Raw" />
							</Viewbox>
						</Grid>

						<Border x:Name="HoverOverlay"
								Background="{StaticResource MaterialOnSurfaceHoverBrush}"
								Width="{TemplateBinding MinWidth}"
								HorizontalAlignment="Left"
								android:Visibility="Collapsed"
								Opacity="0" />

						<Border x:Name="PressedOverlay"
								Background="{StaticResource MaterialOnSurfacePressedBrush}"
								Width="{TemplateBinding MinWidth}"
								HorizontalAlignment="Left"
								Opacity="0" />
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</IsNotWinUI3:Style>

	<IsNotWinUI3:Style x:Key="MaterialPaneBackArrowToggleButtonStyle"
		   TargetType="Button">
		<Setter Property="FontSize"
				Value="16" />
		<Setter Property="FontFamily"
				Value="{StaticResource SymbolThemeFontFamily}" />
		<Setter Property="MinHeight"
				Value="{StaticResource PaneToggleButtonHeight}" />
		<Setter Property="MinWidth"
				Value="52" />
		<Setter Property="Padding"
				Value="2" />
		<Setter Property="HorizontalAlignment"
				Value="Left" />
		<Setter Property="VerticalAlignment"
				Value="Top" />
		<Setter Property="HorizontalContentAlignment"
				Value="Center" />
		<Setter Property="VerticalContentAlignment"
				Value="Center" />
		<Setter Property="Background"
				Value="{StaticResource MaterialWUXNavDrawersBackgroundBrush}" />
		<Setter Property="Foreground"
				Value="{StaticResource MaterialWUXNavDrawersTextBrush}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Button">
					<Grid x:Name="LayoutRoot"
						  Height="{TemplateBinding MinHeight}"
						  Width="{TemplateBinding MinWidth}"
						  Margin="{TemplateBinding Padding}"
						  Background="{TemplateBinding Background}"
						  HorizontalAlignment="{TemplateBinding HorizontalAlignment}">

						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal" />
								<VisualState x:Name="PointerOver">
									<VisualState.Setters>
										<!-- Workaround for #92 - Android PointerOver state is being applied and maintained on click -->
										<not_android:Setter Target="HoverOverlay.Opacity"
															Value="1" />
									</VisualState.Setters>
								</VisualState>

								<VisualState x:Name="Pressed">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="PressedOverlay"
														 Storyboard.TargetProperty="Opacity"
														 Duration="{StaticResource MaterialAnimationDuration}"
														 To="1">
											<DoubleAnimation.EasingFunction>
												<CubicEase EasingMode="EaseIn" />
											</DoubleAnimation.EasingFunction>
										</DoubleAnimation>
									</Storyboard>
								</VisualState>

								<VisualState x:Name="Disabled">
									<VisualState.Setters>
										<Setter Target="LayoutRoot.Background"
												Value="{ThemeResource MaterialOnSurfaceLowBrush}" />
									</VisualState.Setters>
								</VisualState>
								<VisualState x:Name="Checked">
									<VisualState.Setters>
										<Setter Target="LayoutRoot.Background"
												Value="{ThemeResource ToggleButtonBackgroundChecked}" />
										<Setter Target="ContentPresenter.Foreground"
												Value="{ThemeResource ToggleButtonForegroundChecked}" />
									</VisualState.Setters>
								</VisualState>
								<VisualState x:Name="CheckedPointerOver">
									<VisualState.Setters>
										<Setter Target="LayoutRoot.Background"
												Value="{ThemeResource ToggleButtonBackgroundCheckedPointerOver}" />
										<Setter Target="ContentPresenter.Foreground"
												Value="{ThemeResource ToggleButtonForegroundCheckedPointerOver}" />
										<Setter Target="HoverOverlay.Opacity"
												Value="1" />
									</VisualState.Setters>
								</VisualState>

								<VisualState x:Name="CheckedPressed">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="PressedOverlay"
														 Storyboard.TargetProperty="Opacity"
														 Duration="{StaticResource MaterialAnimationDuration}"
														 To="1">
											<DoubleAnimation.EasingFunction>
												<CubicEase EasingMode="EaseIn" />
											</DoubleAnimation.EasingFunction>
										</DoubleAnimation>
									</Storyboard>
								</VisualState>

								<VisualState x:Name="CheckedDisabled">
									<VisualState.Setters>
										<Setter Target="LayoutRoot.Background"
												Value="{ThemeResource MaterialOnSurfaceLowBrush}" />
									</VisualState.Setters>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>

						<Grid Width="{TemplateBinding MinWidth}"
							  HorizontalAlignment="Left">
							<Viewbox x:Name="IconHost"
									 Width="20"
									 Height="20"
									 HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
									 VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
									 AutomationProperties.AccessibilityView="Raw">

								<Grid>

									<Path Data="{StaticResource BackArrowPathData}"
										  Fill="{Binding Foreground, RelativeSource={RelativeSource TemplatedParent}}"
										  Stretch="Uniform"
										  Height="20"
										  UseLayoutRounding="False" />
								</Grid>
							</Viewbox>
						</Grid>

						<Border x:Name="HoverOverlay"
								Background="{StaticResource MaterialOnSurfaceHoverBrush}"
								Width="{TemplateBinding MinWidth}"
								HorizontalAlignment="Left"
								Opacity="0" />

						<Border x:Name="PressedOverlay"
								Background="{StaticResource MaterialOnSurfacePressedBrush}"
								Width="{TemplateBinding MinWidth}"
								HorizontalAlignment="Left"
								Opacity="0" />
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</IsNotWinUI3:Style>
	
</ResourceDictionary>

<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
					xmlns:um="using:Uno.Material"
					xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
					xmlns:ios="http://uno.ui/ios"
					xmlns:not_macos="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					xmlns:macos="http://uno.ui/macos"
					mc:Ignorable="ios macos">

	<x:String x:Key="RevealGlyphPathData">M16,5.5999984C17.699951,5.5999984 19.099976,6.9999918 19.099976,8.6999893 19.099976,10.400001 17.699951,11.799994 16,11.799994 14.299988,11.799994 12.899963,10.400001 12.899963,8.6999893 12.899963,6.9999918 14.299988,5.5999984 16,5.5999984z M16,2.1999893C12.399963,2.1999893 9.5,5.0999984 9.5,8.6999893 9.5,12.299994 12.399963,15.199988 16,15.199988 19.599976,15.199988 22.5,12.299994 22.5,8.6999893 22.5,5.0999984 19.599976,2.1999893 16,2.1999893z M16,0C24.799988,5.2249334E-08 32,8.6999893 32,8.6999893 32,8.6999893 24.799988,17.400001 16,17.400001 7.1999512,17.400001 0,8.6999893 0,8.6999893 0,8.6999893 7.1999512,5.2249334E-08 16,0z</x:String>

	<Style x:Name="RevealButtonStyle"
		   TargetType="Button">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Button">
					<Grid x:Name="ButtonLayoutGrid"
						  Background="Transparent">

						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal" />
								<VisualState x:Name="PointerOver" />
								<VisualState x:Name="Pressed" />
								<VisualState x:Name="Disabled">
									<VisualState.Setters>
										<Setter Target="ButtonLayoutGrid.Opacity"
												Value="0" />
									</VisualState.Setters>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>

						<Path x:Name="GlyphElement"
							  Data="{StaticResource RevealGlyphPathData}"
							  Fill="{StaticResource TextBoxIconColorBrush}"
							  VerticalAlignment="Center"
							  HorizontalAlignment="Center"
							  Stretch="Uniform"
							  Width="18"
							  AutomationProperties.AccessibilityView="Raw"
							  ios:Margin="0,2,0,0" />
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="MaterialFilledPasswordBoxStyle"
		   TargetType="PasswordBox">
		<Setter Property="FontFamily"
				Value="{StaticResource MaterialRegularFontFamily}" />
		<Setter Property="Foreground"
				Value="{StaticResource TextBoxLabelDefaultColorBrush}" />
		<Setter Property="Background"
				Value="{StaticResource TextBoxFilledBackgroundColorBrush}" />
		<Setter Property="BorderBrush"
				Value="{StaticResource TextBoxFilledIndicatorColorBrush}" />
		<Setter Property="HorizontalContentAlignment"
				Value="Left" />
		<Setter Property="VerticalContentAlignment"
				Value="Center" />
		<Setter Property="Padding"
				Value="12,4,8,4" />
		<Setter Property="MinHeight"
				Value="50" />

		<!-- Workaround for WinUI issue: https://github.com/microsoft/microsoft-ui-xaml/issues/6388 -->
		<Setter Property="um:ControlExtensions.Icon"
				Value="{x:Null}" />

		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="PasswordBox">
					<Grid x:Name="Root"
						  Background="{TemplateBinding Background}"
						  CornerRadius="{TemplateBinding CornerRadius}">

						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal" />
								<VisualState x:Name="PointerOver" />
								<VisualState x:Name="Pressed" />

								<VisualState x:Name="Disabled">
									<VisualState.Setters>
										<Setter Target="ContentElement.Foreground"
												Value="{StaticResource MaterialOnSurfaceLowBrush}" />
										<Setter Target="PlaceholderElement.Foreground"
												Value="{StaticResource MaterialOnSurfaceLowBrush}" />
									</VisualState.Setters>
								</VisualState>

								<VisualState x:Name="Focused">
									<VisualState.Setters>
										<Setter Target="PlaceholderElement.Foreground"
												Value="{StaticResource TextBoxLabelFocusColorBrush}" />
									</VisualState.Setters>

									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="Scale"
														 Storyboard.TargetProperty="ScaleX"
														 Duration="{StaticResource MaterialTextBoxAnimationDuration}"
														 EasingFunction="{StaticResource MaterialEaseInOutFunction}"
														 To="1" />
									</Storyboard>
								</VisualState>
							</VisualStateGroup>

							<VisualStateGroup x:Name="ButtonStates">

								<VisualState x:Name="ButtonVisible">
									<VisualState.Setters>
										<Setter Target="RevealButton.Visibility"
												Value="Visible" />
									</VisualState.Setters>
								</VisualState>

								<VisualState x:Name="ButtonCollapsed" />
							</VisualStateGroup>

							<VisualStateGroup x:Name="HeaderStates">

								<VisualState x:Name="NotEmpty">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="Transform"
														 Storyboard.TargetProperty="TranslateY"
														 Duration="{StaticResource MaterialTextBoxAnimationDuration}"
														 EasingFunction="{StaticResource MaterialEaseInOutFunction}"
														 To="-11" />
										<DoubleAnimation Storyboard.TargetName="ContentTransform"
														 Storyboard.TargetProperty="TranslateY"
														 Duration="{StaticResource MaterialTextBoxAnimationDuration}"
														 EasingFunction="{StaticResource MaterialEaseInOutFunction}"
														 To="5" />
										<DoubleAnimation Storyboard.TargetName="Transform"
														 Storyboard.TargetProperty="ScaleX"
														 Duration="{StaticResource MaterialTextBoxAnimationDuration}"
														 EasingFunction="{StaticResource MaterialEaseInOutFunction}"
														 To="0.7" />
										<DoubleAnimation Storyboard.TargetName="Transform"
														 Storyboard.TargetProperty="ScaleY"
														 Duration="{StaticResource MaterialTextBoxAnimationDuration}"
														 EasingFunction="{StaticResource MaterialEaseInOutFunction}"
														 To="0.7" />
									</Storyboard>

									<VisualState.StateTriggers>
										<StateTrigger IsActive="{Binding Password, Converter={StaticResource MaterialEmptyToFalse}, RelativeSource={RelativeSource TemplatedParent}}" />
									</VisualState.StateTriggers>
								</VisualState>

								<VisualState x:Name="Empty">
									<VisualState.StateTriggers>
										<StateTrigger IsActive="{Binding Password, Converter={StaticResource MaterialEmptyToTrue}, RelativeSource={RelativeSource TemplatedParent}}" />
									</VisualState.StateTriggers>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>

						<Grid Margin="{TemplateBinding Padding}">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto" />
								<ColumnDefinition Width="*" />
								<ColumnDefinition Width="Auto" />
							</Grid.ColumnDefinitions>

							<ContentPresenter x:Name="IconPresenter"
											  Content="{Binding Path=(um:ControlExtensions.Icon), RelativeSource={RelativeSource TemplatedParent}}"
											  MaxHeight="34"
											  MaxWidth="34"
											  MinWidth="25"
											  Margin="0,0,8,0"
											  HorizontalAlignment="Center"
											  VerticalAlignment="Center"
											  Visibility="{Binding Path=(um:ControlExtensions.Icon), RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource MaterialNullToCollapsedConverter}, FallbackValue=Collapsed, TargetNullValue=Collapsed}" />

							<ScrollViewer x:Name="ContentElement"
										  Grid.Column="1"
										  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
										  HorizontalScrollMode="{TemplateBinding ScrollViewer.HorizontalScrollMode}"
										  HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
										  VerticalScrollMode="{TemplateBinding ScrollViewer.VerticalScrollMode}"
										  VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
										  IsHorizontalRailEnabled="{TemplateBinding ScrollViewer.IsHorizontalRailEnabled}"
										  IsVerticalRailEnabled="{TemplateBinding ScrollViewer.IsVerticalRailEnabled}"
										  IsDeferredScrollingEnabled="{TemplateBinding ScrollViewer.IsDeferredScrollingEnabled}"
										  IsTabStop="False"
										  AutomationProperties.AccessibilityView="Raw"
										  ZoomMode="Disabled">
								<ScrollViewer.RenderTransform>
									<CompositeTransform x:Name="ContentTransform" />
								</ScrollViewer.RenderTransform>
							</ScrollViewer>

							<TextBlock x:Name="PlaceholderElement"
									   Grid.Column="1"
									   Foreground="{StaticResource TextBoxLabelDefaultColorBrush}"
									   Text="{TemplateBinding PlaceholderText}"
									   HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
									   VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
									   IsHitTestVisible="False"
									   RenderTransformOrigin="0,0.5">
								<TextBlock.RenderTransform>
									<CompositeTransform x:Name="Transform" />
								</TextBlock.RenderTransform>
							</TextBlock>

							<Button x:Name="RevealButton"
									Grid.Column="2"
									Style="{StaticResource RevealButtonStyle}"
									Foreground="{TemplateBinding BorderBrush}"
									IsTabStop="False"
									Visibility="Collapsed"
									AutomationProperties.AccessibilityView="Raw"
									MinHeight="34"
									MinWidth="34"
									VerticalAlignment="Stretch" />
						</Grid>

						<Rectangle x:Name="NormalBorder"
								   Height="{StaticResource TextBoxOutlinedStrokeWidth}"
								   VerticalAlignment="Bottom"
								   Grid.ColumnSpan="3"
								   Fill="{StaticResource TextBoxOutlinedStrokeColorBrush}" />

						<Rectangle x:Name="FocusedBorder"
								   Height="{StaticResource TextBoxFocusStrokeWidth}"
								   VerticalAlignment="Bottom"
								   Grid.ColumnSpan="3"
								   Fill="{StaticResource TextBoxOutlinedFocusStrokeColorBrush}"
								   not_macos:RenderTransformOrigin="0.5,0.5"
								   macos:RenderTransformOrigin="0.0,0.5">
							<Rectangle.RenderTransform>
								<ScaleTransform x:Name="Scale"
												ScaleX="0" />
							</Rectangle.RenderTransform>
						</Rectangle>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="MaterialOutlinedPasswordBoxStyle"
		   TargetType="PasswordBox">
		<Setter Property="FontFamily"
				Value="{StaticResource MaterialRegularFontFamily}" />
		<Setter Property="Background"
				Value="Transparent" />
		<Setter Property="Foreground"
				Value="{StaticResource TextBoxLabelDefaultColorBrush}" />
		<Setter Property="BorderBrush"
				Value="{StaticResource TextBoxFilledIndicatorColorBrush}" />
		<Setter Property="BorderThickness"
				Value="1" />
		<Setter Property="CornerRadius"
				Value="4" />

		<Setter Property="HorizontalContentAlignment"
				Value="Left" />
		<Setter Property="VerticalContentAlignment"
				Value="Center" />
		<Setter Property="Padding"
				Value="12,4,8,4" />
		<Setter Property="MinHeight"
				Value="50" />

		<!-- Workaround for WinUI issue: https://github.com/microsoft/microsoft-ui-xaml/issues/6388 -->
		<Setter Property="um:ControlExtensions.Icon"
				Value="{x:Null}" />

		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="PasswordBox">
					<Grid x:Name="Root"
						  Background="{TemplateBinding Background}"
						  BorderBrush="{TemplateBinding BorderBrush}"
						  BorderThickness="{TemplateBinding BorderThickness}"
						  CornerRadius="{TemplateBinding CornerRadius}"
						  Padding="{TemplateBinding Padding}">

						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal" />
								<VisualState x:Name="PointerOver" />
								<VisualState x:Name="Pressed" />

								<VisualState x:Name="Disabled">
									<VisualState.Setters>
										<Setter Target="ContentElement.Foreground"
												Value="{StaticResource MaterialOnSurfaceLowBrush}" />
										<Setter Target="PlaceholderElement.Foreground"
												Value="{StaticResource MaterialOnSurfaceLowBrush}" />
									</VisualState.Setters>
								</VisualState>

								<VisualState x:Name="Focused">
									<VisualState.Setters>
										<Setter Target="Root.BorderBrush"
												Value="{StaticResource TextBoxFilledFocusIndicatorColorBrush}" />
										<Setter Target="PlaceholderElement.Foreground"
												Value="{StaticResource TextBoxLabelFocusColorBrush}" />
									</VisualState.Setters>
								</VisualState>
							</VisualStateGroup>

							<VisualStateGroup x:Name="ButtonStates">

								<VisualState x:Name="ButtonVisible">
									<VisualState.Setters>
										<Setter Target="RevealButton.Visibility"
												Value="Visible" />
									</VisualState.Setters>
								</VisualState>

								<VisualState x:Name="ButtonCollapsed" />
							</VisualStateGroup>

							<VisualStateGroup x:Name="HeaderStates">

								<VisualState x:Name="NotEmpty">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="Transform"
														 Storyboard.TargetProperty="TranslateY"
														 Duration="{StaticResource MaterialTextBoxAnimationDuration}"
														 EasingFunction="{StaticResource MaterialEaseInOutFunction}"
														 To="-11" />
										<DoubleAnimation Storyboard.TargetName="ContentTransform"
														 Storyboard.TargetProperty="TranslateY"
														 Duration="{StaticResource MaterialTextBoxAnimationDuration}"
														 EasingFunction="{StaticResource MaterialEaseInOutFunction}"
														 To="5" />
										<DoubleAnimation Storyboard.TargetName="Transform"
														 Storyboard.TargetProperty="ScaleX"
														 Duration="{StaticResource MaterialTextBoxAnimationDuration}"
														 EasingFunction="{StaticResource MaterialEaseInOutFunction}"
														 To="0.7" />
										<DoubleAnimation Storyboard.TargetName="Transform"
														 Storyboard.TargetProperty="ScaleY"
														 Duration="{StaticResource MaterialTextBoxAnimationDuration}"
														 EasingFunction="{StaticResource MaterialEaseInOutFunction}"
														 To="0.7" />
									</Storyboard>

									<VisualState.StateTriggers>
										<StateTrigger IsActive="{Binding Password, Converter={StaticResource MaterialEmptyToFalse}, RelativeSource={RelativeSource TemplatedParent}}" />
									</VisualState.StateTriggers>
								</VisualState>

								<VisualState x:Name="Empty">
									<VisualState.StateTriggers>
										<StateTrigger IsActive="{Binding Password, Converter={StaticResource MaterialEmptyToTrue}, RelativeSource={RelativeSource TemplatedParent}}" />
									</VisualState.StateTriggers>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>

						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="Auto" />
							<ColumnDefinition Width="*" />
							<ColumnDefinition Width="Auto" />
						</Grid.ColumnDefinitions>

						<ContentPresenter x:Name="IconPresenter"
										  Content="{Binding Path=(um:ControlExtensions.Icon), RelativeSource={RelativeSource TemplatedParent}}"
										  MaxHeight="34"
										  MaxWidth="34"
										  MinWidth="25"
										  Margin="0,0,8,0"
										  HorizontalAlignment="Center"
										  VerticalAlignment="Center"
										  Visibility="{Binding Path=(um:ControlExtensions.Icon), RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource MaterialNullToCollapsedConverter}, FallbackValue=Collapsed, TargetNullValue=Collapsed}" />

						<ScrollViewer x:Name="ContentElement"
									  Grid.Column="1"
									  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
									  HorizontalScrollMode="{TemplateBinding ScrollViewer.HorizontalScrollMode}"
									  HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
									  VerticalScrollMode="{TemplateBinding ScrollViewer.VerticalScrollMode}"
									  VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
									  IsHorizontalRailEnabled="{TemplateBinding ScrollViewer.IsHorizontalRailEnabled}"
									  IsVerticalRailEnabled="{TemplateBinding ScrollViewer.IsVerticalRailEnabled}"
									  IsDeferredScrollingEnabled="{TemplateBinding ScrollViewer.IsDeferredScrollingEnabled}"
									  IsTabStop="False"
									  AutomationProperties.AccessibilityView="Raw"
									  ZoomMode="Disabled">
							<ScrollViewer.RenderTransform>
								<CompositeTransform x:Name="ContentTransform" />
							</ScrollViewer.RenderTransform>
						</ScrollViewer>

						<TextBlock x:Name="PlaceholderElement"
								   Grid.Column="1"
								   Foreground="{StaticResource TextBoxLabelDefaultColorBrush}"
								   Text="{TemplateBinding PlaceholderText}"
								   HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
								   VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
								   IsHitTestVisible="False"
								   RenderTransformOrigin="0,0.5">
							<TextBlock.RenderTransform>
								<CompositeTransform x:Name="Transform" />
							</TextBlock.RenderTransform>
						</TextBlock>

						<Button x:Name="RevealButton"
								Grid.Column="2"
								Style="{StaticResource RevealButtonStyle}"
								Foreground="{TemplateBinding BorderBrush}"
								IsTabStop="False"
								Visibility="Collapsed"
								AutomationProperties.AccessibilityView="Raw"
								MinHeight="34"
								MinWidth="34"
								VerticalAlignment="Stretch" />
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
</ResourceDictionary>

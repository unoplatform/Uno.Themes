<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
					xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
					xmlns:um="using:Uno.Material"
					xmlns:toolkit="using:Uno.UI.Toolkit"
					xmlns:xamarin="http://uno.ui/xamarin"
					mc:Ignorable="xamarin">

	<!-- Converters -->
	<um:FromNullToValueConverter x:Key="NullToScaleConverter"
								 NotNullValue="0.7"
								 NullValue="1" />

	<um:FromNullToValueConverter x:Key="NullToPlaceholderTranslateYConverter"
								 NotNullValue="-11"
								 NullValue="0" />

	<um:FromNullToValueConverter x:Key="NullToContentTranslateYConverter"
								 NotNullValue="5"
								 NullValue="0" />

	<um:FromNullToValueConverter x:Key="NullToPlaceholderThemeBrushConverter"
								 NotNullValue="{StaticResource ComboBoxPlaceholderFocusedThemeBrush}"
								 NullValue="{StaticResource ComboBoxPlaceholderForegroundThemeBrush}" />

	<!-- Brushes -->
	<StaticResource x:Key="ComboBoxBackgroundColorBrush"
					ResourceKey="MaterialSurfaceBrush" />

	<StaticResource x:Key="ComboBoxSelectedBackgroundThemeBrush"
					ResourceKey="MaterialOnSurfaceHoverBrush" />

	<StaticResource x:Key="ComboBoxSelectedPointerOverBackgroundThemeBrush"
					ResourceKey="MaterialOnSurfaceHoverBrush" />

	<StaticResource x:Key="ComboBoxPressedHighlightThemeBrush"
					ResourceKey="MaterialOnSurfaceHoverBrush" />

	<StaticResource x:Key="ComboBoxPressedBackgroundThemeBrush"
					ResourceKey="MaterialOnSurfaceHoverBrush" />

	<StaticResource x:Key="ComboBoxBorderBrush"
					ResourceKey="MaterialOnSurfaceMediumBrush" />

	<StaticResource x:Key="ComboBoxFocusedBorderBrush"
					ResourceKey="MaterialOnBackgroundBrush" />

	<StaticResource x:Key="ComboBoxArrowForegroundThemeBrush"
					ResourceKey="MaterialOnBackgroundBrush" />

	<StaticResource x:Key="ComboBoxForegroundThemeBrush"
					ResourceKey="MaterialOnBackgroundBrush" />

	<StaticResource x:Key="ComboBoxPlaceholderFocusedThemeBrush"
					ResourceKey="MaterialPrimaryBrush" />

	<StaticResource x:Key="ComboBoxDisabledBackgroundBrush"
					ResourceKey="MaterialOnSurfaceFocusedBrush" />

	<SolidColorBrush x:Key="ComboBoxPlaceholderForegroundThemeBrush"
					 Color="{ThemeResource MaterialOnBackgroundColor}"
					 Opacity="0.74" />

	<!-- CornerRadius -->
	<CornerRadius x:Key="MaterialComboBoxCornerRadius">4</CornerRadius>

	<!-- Path Data -->
	<x:String x:Key="UpArrowPathData">M15.995972,0L32,21.478999 0,21.478999z</x:String>
	<x:String x:Key="DownArrowPathData">M0,0L32,0 16,19.745z</x:String>

	<!-- Style -->
	<Style x:Key="MaterialComboBoxItemStyle"
		   TargetType="ComboBoxItem">

		<Setter Property="Background"
				Value="Transparent" />
		<Setter Property="VerticalContentAlignment"
				Value="Center" />
		<Setter Property="HorizontalContentAlignment"
				Value="Stretch" />
		<Setter Property="Padding"
				Value="0" />
		<Setter Property="Height"
				Value="50" />

		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ComboBoxItem">
					<Grid x:Name="RootGrid"
						  Background="{TemplateBinding Background}">

						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal" />

								<VisualState x:Name="PointerOver">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="PressedOverlay"
														 Storyboard.TargetProperty="Opacity"
														 Duration="{StaticResource MaterialAnimationDuration}"
														 To="1">
											<DoubleAnimation.EasingFunction>
												<CubicEase EasingMode="EaseIn" />
											</DoubleAnimation.EasingFunction>
										</DoubleAnimation>
									</Storyboard>
								</VisualState>

								<VisualState x:Name="Pressed">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="PressedOverlay"
														 Storyboard.TargetProperty="Opacity"
														 Duration="{StaticResource MaterialAnimationDuration}"
														 To="0.9">
											<DoubleAnimation.EasingFunction>
												<CubicEase EasingMode="EaseIn" />
											</DoubleAnimation.EasingFunction>
										</DoubleAnimation>
									</Storyboard>
								</VisualState>

								<VisualState x:Name="Disabled">
									<VisualState.Setters>
										<Setter Target="ContentPresenter.Opacity"
												Value="1" />
									</VisualState.Setters>
								</VisualState>

								<VisualState x:Name="Selected">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="PressedOverlay"
														 Storyboard.TargetProperty="Opacity"
														 Duration="{StaticResource MaterialAnimationDuration}"
														 To="0.75">
											<DoubleAnimation.EasingFunction>
												<CubicEase EasingMode="EaseIn" />
											</DoubleAnimation.EasingFunction>
										</DoubleAnimation>
									</Storyboard>
								</VisualState>

								<VisualState x:Name="SelectedPointerOver">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="PressedOverlay"
														 Storyboard.TargetProperty="Opacity"
														 Duration="{StaticResource MaterialAnimationDuration}"
														 To="1">
											<DoubleAnimation.EasingFunction>
												<CubicEase EasingMode="EaseIn" />
											</DoubleAnimation.EasingFunction>
										</DoubleAnimation>
									</Storyboard>
								</VisualState>

								<VisualState x:Name="SelectedDisabled">
									<VisualState.Setters>
										<Setter Target="ContentPresenter.Opacity"
												Value="1" />
									</VisualState.Setters>
								</VisualState>

								<VisualState x:Name="SelectedPressed">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="PressedOverlay"
														 Storyboard.TargetProperty="Opacity"
														 Duration="{StaticResource MaterialAnimationDuration}"
														 To="0.9">
											<DoubleAnimation.EasingFunction>
												<CubicEase EasingMode="EaseIn" />
											</DoubleAnimation.EasingFunction>
										</DoubleAnimation>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>

						<!-- Pressed Overlay -->
						<Grid x:Name="PressedOverlay"
							  Background="{StaticResource ComboBoxSelectedBackgroundThemeBrush}"
							  BorderBrush="{StaticResource ComboBoxBorderBrush}"
							  BorderThickness="0,1,0,1"
							  IsHitTestVisible="False"
							  VerticalAlignment="Stretch"
							  HorizontalAlignment="Stretch"
							  Opacity="0" />

						<!-- ContentPresenter-->
						<ContentPresenter x:Name="ContentPresenter"
										  ContentTransitions="{TemplateBinding ContentTransitions}"
										  Content="{TemplateBinding Content}">
							<ContentPresenter.ContentTemplate>
								<DataTemplate>
									<Grid>
										<TextBlock Text="{Binding}"
												   Style="{StaticResource MaterialBody2}"
												   VerticalAlignment="Center"
												   Margin="16,0,0,0" />
									</Grid>
								</DataTemplate>
							</ContentPresenter.ContentTemplate>
						</ContentPresenter>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="MaterialComboBoxStyle"
		   TargetType="ComboBox">

		<Setter Property="Foreground"
				Value="{ThemeResource ComboBoxForegroundThemeBrush}" />
		<Setter Property="Background"
				Value="{ThemeResource ComboBoxBackgroundColorBrush}" />
		<Setter Property="BorderBrush"
				Value="{StaticResource ComboBoxBorderBrush}" />
		<Setter Property="BorderThickness"
				Value="1" />
		<Setter Property="Padding"
				Value="0" />
		<Setter Property="MinHeight"
				Value="50" />
		<Setter Property="TabNavigation"
				Value="Once" />
		<Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
				Value="Disabled" />
		<Setter Property="ScrollViewer.VerticalScrollBarVisibility"
				Value="Auto" />
		<Setter Property="ScrollViewer.HorizontalScrollMode"
				Value="Disabled" />
		<Setter Property="ScrollViewer.VerticalScrollMode"
				Value="Auto" />
		<Setter Property="ScrollViewer.IsVerticalRailEnabled"
				Value="True" />
		<Setter Property="ScrollViewer.IsDeferredScrollingEnabled"
				Value="False" />
		<Setter Property="ScrollViewer.BringIntoViewOnFocusChange"
				Value="True" />
		<Setter Property="HorizontalContentAlignment"
				Value="Stretch" />
		<Setter Property="HorizontalAlignment"
				Value="Stretch" />
		<Setter Property="ItemContainerStyle"
				Value="{StaticResource MaterialComboBoxItemStyle}" />
		<xamarin:Setter Property="uno:ComboBox.DropDownPreferredPlacement"
						Value="Below" />

		<!-- Workaround for WinUI issue: https://github.com/microsoft/microsoft-ui-xaml/issues/6388 -->
		<Setter Property="um:ControlExtensions.Icon"
				Value="{x:Null}" />

		<Setter Property="ItemsPanel">
			<Setter.Value>
				<ItemsPanelTemplate>
					<CarouselPanel />
				</ItemsPanelTemplate>
			</Setter.Value>
		</Setter>

		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ComboBox">
					<Grid x:Name="RootGrid"
						  CornerRadius="{StaticResource MaterialComboBoxCornerRadius}">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal" />
								<VisualState x:Name="PointerOver">
									<VisualState.Setters>
										<Setter Target="RootGrid.Background"
												Value="{ThemeResource ComboBoxPointerOverBackgroundThemeBrush}" />
										<Setter Target="Highlight.Background"
												Value="{ThemeResource ComboBoxSelectedPointerOverBackgroundThemeBrush}" />
									</VisualState.Setters>
								</VisualState>

								<VisualState x:Name="Pressed">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="PressedBackground"
														 Storyboard.TargetProperty="Opacity"
														 Duration="{StaticResource MaterialAnimationDuration}"
														 To="1">
											<DoubleAnimation.EasingFunction>
												<CubicEase EasingMode="EaseIn" />
											</DoubleAnimation.EasingFunction>
										</DoubleAnimation>
									</Storyboard>

									<VisualState.Setters>
										<Setter Target="RootGrid.Background"
												Value="{ThemeResource ComboBoxPressedBackgroundThemeBrush}" />
									</VisualState.Setters>
								</VisualState>

								<VisualState x:Name="Disabled">
									<VisualState.Setters>
										<Setter Target="DropDownGlyph_Down.Fill"
												Value="{StaticResource MaterialOnSurfaceLowBrush}" />
										<Setter Target="PlaceholderElement.Foreground"
												Value="{StaticResource MaterialOnSurfaceLowBrush}" />
										<Setter Target="ContentPresenter.Foreground"
												Value="{StaticResource MaterialOnSurfaceLowBrush}" />
										<Setter Target="IconPresenter.Foreground"
												Value="{StaticResource MaterialOnSurfaceLowBrush}" />
										<Setter Target="ComboBoxContent.Background"
												Value="{StaticResource ComboBoxDisabledBackgroundBrush}" />
										<Setter Target="ElevatedView.BorderThickness"
												Value="0" />
									</VisualState.Setters>
								</VisualState>
							</VisualStateGroup>

							<VisualStateGroup x:Name="FocusStates">

								<VisualState x:Name="Focused">
									<VisualState.Setters>
										<Setter Target="HighlightBorder.Opacity"
												Value="1" />
										<Setter Target="PlaceholderElement.Foreground"
												Value="{StaticResource TextBoxLabelFocusColorBrush}" />
									</VisualState.Setters>
								</VisualState>

								<VisualState x:Name="FocusedPressed">
									<VisualState.Setters>
										<Setter Target="Highlight.Background"
												Value="{ThemeResource ComboBoxPressedHighlightThemeBrush}" />
									</VisualState.Setters>
								</VisualState>

								<VisualState x:Name="Unfocused">
									<VisualState.Setters>
										<Setter Target="PlaceholderElement.Foreground"
												Value="{StaticResource ComboBoxPlaceholderForegroundThemeBrush}" />
									</VisualState.Setters>
								</VisualState>

								<VisualState x:Name="PointerFocused" />

								<VisualState x:Name="FocusedDropDown">
									<VisualState.Setters>
										<Setter Target="PopupBorder.Visibility"
												Value="Visible" />
									</VisualState.Setters>
								</VisualState>
							</VisualStateGroup>

							<VisualStateGroup x:Name="DropDownStates">

								<VisualState x:Name="Opened">
									<Storyboard>
										<SplitOpenThemeAnimation ClosedTargetName="ContentPresenter"
																 ContentTranslationOffset="0"
																 ContentTargetName="ScrollViewer"
																 ClosedLength="{Binding TemplateSettings.DropDownClosedHeight, RelativeSource={RelativeSource Mode=TemplatedParent}}"
																 OffsetFromCenter="{Binding TemplateSettings.DropDownOffset, RelativeSource={RelativeSource Mode=TemplatedParent}}"
																 OpenedTargetName="PopupBorder"
																 OpenedLength="{Binding TemplateSettings.DropDownOpenedHeight, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
									</Storyboard>
								</VisualState>

								<VisualState x:Name="Closed">
									<Storyboard>
										<SplitCloseThemeAnimation ClosedTargetName="ContentPresenter"
																  ContentTranslationOffset="40"
																  ContentTranslationDirection="{Binding TemplateSettings.SelectedItemDirection, RelativeSource={RelativeSource Mode=TemplatedParent}}"
																  ContentTargetName="ScrollViewer"
																  ClosedLength="{Binding TemplateSettings.DropDownClosedHeight, RelativeSource={RelativeSource Mode=TemplatedParent}}"
																  OffsetFromCenter="{Binding TemplateSettings.DropDownOffset, RelativeSource={RelativeSource Mode=TemplatedParent}}"
																  OpenedTargetName="PopupBorder"
																  OpenedLength="{Binding TemplateSettings.DropDownOpenedHeight, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>

						<!-- Elevated View -->
						<toolkit:ElevatedView x:Name="ElevatedView"
											  Background="{TemplateBinding Background}"
											  HorizontalAlignment="Stretch"
											  CornerRadius="{StaticResource MaterialComboBoxCornerRadius}"
											  Elevation="8"
											  BorderBrush="{TemplateBinding BorderBrush}"
											  BorderThickness="{TemplateBinding BorderThickness}">

							<Grid x:Name="ComboBoxContent"
								  Background="{TemplateBinding Background}"
								  CornerRadius="{StaticResource MaterialComboBoxCornerRadius}">
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="*" />
									<ColumnDefinition Width="40" />
								</Grid.ColumnDefinitions>

								<!-- Pressed Background -->
								<Border x:Name="PressedBackground"
										CornerRadius="{StaticResource MaterialComboBoxCornerRadius}"
										Background="{ThemeResource ComboBoxPressedHighlightThemeBrush}"
										Opacity="0"
										Grid.ColumnSpan="2" />

								<!-- Highlight Background -->
								<Border x:Name="HighlightBorder"
										BorderBrush="{StaticResource ComboBoxFocusedBorderBrush}"
										BorderThickness="{TemplateBinding BorderThickness}"
										Opacity="0"
										CornerRadius="{StaticResource MaterialComboBoxCornerRadius}"
										Grid.ColumnSpan="2" />

								<!-- Highlight -->
								<Border x:Name="Highlight"
										CornerRadius="{StaticResource MaterialComboBoxCornerRadius}"
										Background="{ThemeResource ComboBoxSelectedBackgroundThemeBrush}"
										Margin="{TemplateBinding BorderThickness}"
										Opacity="0" />

								<Grid Margin="16,0"
									  CornerRadius="{StaticResource MaterialComboBoxCornerRadius}">
									<Grid.Resources>
										<!-- Resources added here in order to manage the ContentPresenter TranslateY depending if there is a PlaceholderText or not -->
										<CompositeTransform x:Key="ContentPresenter_CompositeTransformWithPlaceholder"
															TranslateY="{Binding SelectedItem, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource NullToContentTranslateYConverter}, TargetNullValue=0, FallbackValue=0}" />

										<CompositeTransform x:Key="ContentPresenter_CompositeTransformWithoutPlaceholder"
															TranslateY="0" />

										<um:FromEmptyStringToValueConverter x:Key="EmptyToCompositeTransformConverter"
																			NotNullOrEmptyValue="{StaticResource ContentPresenter_CompositeTransformWithPlaceholder}"
																			NullOrEmptyValue="{StaticResource ContentPresenter_CompositeTransformWithoutPlaceholder}" />
									</Grid.Resources>
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="Auto" />
										<ColumnDefinition Width="*" />
									</Grid.ColumnDefinitions>

									<!-- IconPresenter -->
									<ContentPresenter x:Name="IconPresenter"
													  Content="{Binding Path=(um:ControlExtensions.Icon), RelativeSource={RelativeSource TemplatedParent}}"
													  MaxHeight="34"
													  MaxWidth="34"
													  MinWidth="25"
													  Margin="0,0,8,0"
													  HorizontalAlignment="Center"
													  VerticalAlignment="Center"
													  Visibility="{Binding Path=(um:ControlExtensions.Icon), RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource MaterialNullToCollapsedConverter}, FallbackValue=Collapsed, TargetNullValue=Collapsed}" />

									<!-- ContentPresenter -->
									<ContentPresenter x:Name="ContentPresenter"
													  Grid.Column="1"
													  VerticalAlignment="Center"
													  RenderTransform="{Binding PlaceholderText, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource EmptyToCompositeTransformConverter}, TargetNullValue={StaticResource ContentPresenter_CompositeTransformWithoutPlaceholder}, FallbackValue={StaticResource ContentPresenter_CompositeTransformWithoutPlaceholder}}">
									</ContentPresenter>

									<!-- PlaceholderElement -->
									<TextBlock x:Name="PlaceholderElement"
											   Grid.Column="1"
											   Text="{TemplateBinding PlaceholderText}"
											   Style="{StaticResource MaterialBody2}"
											   Foreground="{Binding SelectedItem, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource NullToPlaceholderThemeBrushConverter}, TargetNullValue={StaticResource ComboBoxPlaceholderForegroundThemeBrush}, FallbackValue={StaticResource ComboBoxPlaceholderForegroundThemeBrush}}"
											   VerticalAlignment="Center"
											   RenderTransformOrigin="0,0.5"
											   IsHitTestVisible="False"
											   MaxLines="1">
										<TextBlock.RenderTransform>
											<CompositeTransform x:Name="PlaceholderElement_CompositeTransform"
																ScaleX="{Binding SelectedItem, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource NullToScaleConverter}, TargetNullValue=1, FallbackValue=1}"
																ScaleY="{Binding SelectedItem, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource NullToScaleConverter}, TargetNullValue=1, FallbackValue=1}"
																TranslateY="{Binding SelectedItem, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource NullToPlaceholderTranslateYConverter}, TargetNullValue=0, FallbackValue=0}" />
										</TextBlock.RenderTransform>
									</TextBlock>
								</Grid>

								<!-- Down -->
								<Path x:Name="DropDownGlyph_Down"
									  Data="{StaticResource DownArrowPathData}"
									  Fill="{ThemeResource ComboBoxArrowForegroundThemeBrush}"
									  Stretch="Uniform"
									  Height="5"
									  Width="10"
									  HorizontalAlignment="Center"
									  VerticalAlignment="Center"
									  Grid.Column="1" />

								<!-- Up -->
								<Path x:Name="DropDownGlyph_Up"
									  Data="{StaticResource UpArrowPathData}"
									  Fill="{ThemeResource ComboBoxArrowForegroundThemeBrush}"
									  Stretch="Uniform"
									  Height="5"
									  Width="10"
									  HorizontalAlignment="Center"
									  VerticalAlignment="Center"
									  Visibility="Collapsed"
									  Grid.Column="1" />

								<!-- Popup -->
								<Popup x:Name="Popup">
									<Border x:Name="PopupBorder">
										<!-- Workaround for Issue #213 where android PopupBorder doesn't get redrawn properly, adds Background, CornerRadius and Border to ScrollViewer  -->
										<ScrollViewer x:Name="ScrollViewer"
													  Background="{TemplateBinding Background}"
													  BorderBrush="{StaticResource ComboBoxBorderBrush}"
													  BorderThickness="{TemplateBinding BorderThickness}"
													  CornerRadius="{StaticResource MaterialComboBoxCornerRadius}"
													  AutomationProperties.AccessibilityView="Raw"
													  BringIntoViewOnFocusChange="{TemplateBinding ScrollViewer.BringIntoViewOnFocusChange}"
													  HorizontalScrollMode="{TemplateBinding ScrollViewer.HorizontalScrollMode}"
													  HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
													  IsHorizontalRailEnabled="{TemplateBinding ScrollViewer.IsHorizontalRailEnabled}"
													  IsVerticalRailEnabled="{TemplateBinding ScrollViewer.IsVerticalRailEnabled}"
													  IsDeferredScrollingEnabled="{TemplateBinding ScrollViewer.IsDeferredScrollingEnabled}"
													  MinWidth="{ThemeResource ComboBoxPopupThemeMinWidth}"
													  VerticalSnapPointsType="OptionalSingle"
													  VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
													  VerticalScrollMode="{TemplateBinding ScrollViewer.VerticalScrollMode}"
													  VerticalSnapPointsAlignment="Near"
													  ZoomMode="Disabled">
											<ItemsPresenter />
										</ScrollViewer>
									</Border>
								</Popup>
							</Grid>
						</toolkit:ElevatedView>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
</ResourceDictionary>

<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
					xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
					xmlns:muxc="using:Microsoft.UI.Xaml.Controls"
					xmlns:not_win="http://uno.ui/not_win"
					mc:Ignorable="not_win">

	<Style x:Key="MaterialRatingControlStyle"
		   TargetType="muxc:RatingControl">
		<Setter Property="Height" Value="32" />
		<!--  9794813: retire these two properties as customisation points once all resource keys available  -->
		<Setter Property="Foreground" Value="{ThemeResource MaterialPrimaryBrush}" />
		<Setter Property="UseSystemFocusVisuals" Value="{StaticResource UseSystemFocusVisuals}" />
		<Setter Property="FontFamily" Value="{ThemeResource SymbolThemeFontFamily}" />
		<not_win:Setter Property="ItemInfo" Value="{ThemeResource MUX_RatingControlDefaultFontInfo}"/>
		<Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="muxc:RatingControl">
                    <Grid x:Name="LayoutRoot">
						<Grid.Resources>
							<StaticResource x:Key="RatingControlSelectedForeground" ResourceKey="MaterialPrimaryBrush"/>
							<StaticResource x:Key="RatingControlPointerOverPlaceholderForeground" ResourceKey="MaterialPrimaryBrush"/>
							<StaticResource x:Key="RatingControlPointerOverUnselectedForeground" ResourceKey="MaterialPrimaryBrush"/>
						</Grid.Resources>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Disabled">
                                    <VisualState.Setters>
                                        <Setter Target="ForegroundContentPresenter.Foreground" Value="{ThemeResource RatingControlDisabledSelectedForeground}" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="Placeholder">
                                    <VisualState.Setters>
                                        <Setter Target="ForegroundContentPresenter.Foreground" Value="{ThemeResource RatingControlPlaceholderForeground}" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="PointerOverPlaceholder">
                                    <VisualState.Setters>
                                        <Setter Target="ForegroundContentPresenter.Foreground" Value="{ThemeResource RatingControlPointerOverPlaceholderForeground}" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="PointerOverUnselected">
                                    <VisualState.Setters>
                                        <Setter Target="ForegroundContentPresenter.Foreground" Value="{ThemeResource RatingControlPointerOverUnselectedForeground}" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="Set">
                                    <VisualState.Setters>
                                        <Setter Target="ForegroundContentPresenter.Foreground" Value="{ThemeResource RatingControlSelectedForeground}" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="PointerOverSet">
                                    <VisualState.Setters>
                                        <Setter Target="ForegroundContentPresenter.Foreground" Value="{ThemeResource RatingControlSelectedForeground}" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <StackPanel Grid.Row="0"
                                    Margin="-20,-20,-20,-20"
                                    Orientation="Horizontal">
                            <StackPanel x:Name="RatingBackgroundStackPanel"
                                        Margin="20,20,0,20"
                                        Background="Transparent"
                                        Orientation="Horizontal" />
                            <TextBlock x:Name="Caption"
                                       Height="32"
                                       Margin="4,9,20,0"
                                       VerticalAlignment="Center"
                                       AutomationProperties.AccessibilityView="Raw"
                                       AutomationProperties.Name="RatingCaption"
                                       Foreground="{ThemeResource RatingControlCaptionForeground}"
									   FontFamily="{StaticResource MaterialRegularFontFamily}"
                                       IsHitTestVisible="False"
                                       Style="{ThemeResource MaterialCaption}"
                                       Text="{TemplateBinding Caption}"
                                       TextLineBounds="TrimToBaseline" />
                            <!--  4 = 8 item spacing +4 of magic redline spacing -8 to compensate for scale of the last RatingItem  -->
                            <!--
                                NB: The redlines say 8px, but it's really 12 px because:
                                Designer note: The value between the last glyph and first text character is 12px.
                                (There's 4px of whitespace accounted for in the text area in the redline)
                            -->
                            <!--  TODO MSFT: 9925444 Fix vertical alignment in all text scenarios  -->
                        </StackPanel>

                        <ContentPresenter x:Name="ForegroundContentPresenter"
                                          Grid.Row="0"
                                          IsHitTestVisible="False">
                            <!--  Margin is on the StackPanel because ContentPresenter clips differently such that moving the reverse margin up won't work  -->
                            <StackPanel Margin="-40,-40,-40,-40"
                                        Orientation="Horizontal">
                                <StackPanel x:Name="RatingForegroundStackPanel"
                                            Margin="40,40,40,40"
                                            IsHitTestVisible="False"
                                            Orientation="Horizontal" />
                            </StackPanel>
                        </ContentPresenter>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="MaterialSecondaryRatingControlStyle"
		   TargetType="muxc:RatingControl"
		   BasedOn="{StaticResource MaterialRatingControlStyle}">
		<Setter Property="Foreground"
				Value="{ThemeResource MaterialSecondaryBrush}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="muxc:RatingControl">
					<Grid x:Name="LayoutRoot">
						<Grid.Resources>
							<StaticResource x:Key="RatingControlSelectedForeground" ResourceKey="MaterialSecondaryBrush"/>
							<StaticResource x:Key="RatingControlPointerOverPlaceholderForeground" ResourceKey="MaterialSecondaryBrush"/>
							<StaticResource x:Key="RatingControlPointerOverUnselectedForeground" ResourceKey="MaterialSecondaryBrush"/>
						</Grid.Resources>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Disabled">
									<VisualState.Setters>
										<Setter Target="ForegroundContentPresenter.Foreground" Value="{ThemeResource RatingControlDisabledSelectedForeground}" />
									</VisualState.Setters>
								</VisualState>
								<VisualState x:Name="Placeholder">
									<VisualState.Setters>
										<Setter Target="ForegroundContentPresenter.Foreground" Value="{ThemeResource RatingControlPlaceholderForeground}" />
									</VisualState.Setters>
								</VisualState>
								<VisualState x:Name="PointerOverPlaceholder">
									<VisualState.Setters>
										<Setter Target="ForegroundContentPresenter.Foreground" Value="{ThemeResource RatingControlPointerOverPlaceholderForeground}" />
									</VisualState.Setters>
								</VisualState>
								<VisualState x:Name="PointerOverUnselected">
									<VisualState.Setters>
										<Setter Target="ForegroundContentPresenter.Foreground" Value="{ThemeResource RatingControlPointerOverUnselectedForeground}" />
									</VisualState.Setters>
								</VisualState>
								<VisualState x:Name="Set">
									<VisualState.Setters>
										<Setter Target="ForegroundContentPresenter.Foreground" Value="{ThemeResource RatingControlSelectedForeground}" />
									</VisualState.Setters>
								</VisualState>
								<VisualState x:Name="PointerOverSet">
									<VisualState.Setters>
										<Setter Target="ForegroundContentPresenter.Foreground" Value="{ThemeResource RatingControlSelectedForeground}" />
									</VisualState.Setters>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>

						<StackPanel Grid.Row="0"
                                    Margin="-20,-20,-20,-20"
                                    Orientation="Horizontal">
							<StackPanel x:Name="RatingBackgroundStackPanel"
                                        Margin="20,20,0,20"
                                        Background="Transparent"
                                        Orientation="Horizontal" />
							<TextBlock x:Name="Caption"
                                       Height="32"
                                       Margin="4,9,20,0"
                                       VerticalAlignment="Center"
                                       AutomationProperties.AccessibilityView="Raw"
                                       AutomationProperties.Name="RatingCaption"
                                       Foreground="{ThemeResource RatingControlCaptionForeground}"
									   FontFamily="{StaticResource MaterialRegularFontFamily}"
                                       IsHitTestVisible="False"
                                       Style="{ThemeResource MaterialCaption}"
                                       Text="{TemplateBinding Caption}"
                                       TextLineBounds="TrimToBaseline" />
							<!--  4 = 8 item spacing +4 of magic redline spacing -8 to compensate for scale of the last RatingItem  -->
							<!--
                                NB: The redlines say 8px, but it's really 12 px because:
                                Designer note: The value between the last glyph and first text character is 12px.
                                (There's 4px of whitespace accounted for in the text area in the redline)
                            -->
							<!--  TODO MSFT: 9925444 Fix vertical alignment in all text scenarios  -->
						</StackPanel>

						<ContentPresenter x:Name="ForegroundContentPresenter"
                                          Grid.Row="0"
                                          IsHitTestVisible="False">
							<!--  Margin is on the StackPanel because ContentPresenter clips differently such that moving the reverse margin up won't work  -->
							<StackPanel Margin="-40,-40,-40,-40"
                                        Orientation="Horizontal">
								<StackPanel x:Name="RatingForegroundStackPanel"
                                            Margin="40,40,40,40"
                                            IsHitTestVisible="False"
                                            Orientation="Horizontal" />
							</StackPanel>
						</ContentPresenter>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
</ResourceDictionary>

<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
					xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
					xmlns:uc="using:Uno.Cupertino"
					xmlns:uno="using:Uno.UI.Xaml.Controls"
					xmlns:xamarin="http://uno.ui/xamarin"
					mc:Ignorable="xamarin">

	<!-- Converters -->
	<uc:FromNullToValueConverter x:Key="NullToVisible"
								 NotNullValue="Collapsed"
								 NullValue="Visible" />

	<!-- Brushes -->
	<x:Double x:Key="ComboBoxPopupMaxHeight">300</x:Double>

	<SolidColorBrush x:Key="CupertinoComboBoxBorderBrush"
					 Color="{ThemeResource LabelColor}"
					 Opacity="0.2" />

	<CornerRadius x:Key="CupertinoComboBoxCornerRadius">5</CornerRadius>

	<!-- Style -->
	<Style x:Key="CupertinoComboBoxItemStyle"
		   TargetType="ComboBoxItem">
		<Setter Property="FontFamily"
				Value="{ThemeResource CupertinoFontFamily}" />
		<Setter Property="Background"
				Value="Transparent" />
		<Setter Property="VerticalContentAlignment"
				Value="Center" />
		<Setter Property="HorizontalContentAlignment"
				Value="Stretch" />
		<Setter Property="CornerRadius"
				Value="5" />
		<Setter Property="Padding"
				Value="0" />
		<Setter Property="Height"
				Value="43" />

		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ComboBoxItem">
					<Grid x:Name="RootGrid"
						  Background="{TemplateBinding Background}">

						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal" />

								<VisualState x:Name="PointerOver">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="PressedOverlay"
														 Storyboard.TargetProperty="Opacity"
														 Duration="{StaticResource CupertinoAnimationDuration}"
														 To="1">
											<DoubleAnimation.EasingFunction>
												<CubicEase EasingMode="EaseIn" />
											</DoubleAnimation.EasingFunction>
										</DoubleAnimation>
									</Storyboard>
								</VisualState>

								<VisualState x:Name="Pressed">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="PressedOverlay"
														 Storyboard.TargetProperty="Opacity"
														 Duration="{StaticResource CupertinoAnimationDuration}"
														 To="0.9">
											<DoubleAnimation.EasingFunction>
												<CubicEase EasingMode="EaseIn" />
											</DoubleAnimation.EasingFunction>
										</DoubleAnimation>
									</Storyboard>
								</VisualState>

								<VisualState x:Name="Disabled" />

								<VisualState x:Name="Selected">
									<VisualState.Setters>
										<Setter Target="PressedOverlay.Opacity"
												Value="1" />
									</VisualState.Setters>
								</VisualState>

								<VisualState x:Name="SelectedPointerOver">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="PressedOverlay"
														 Storyboard.TargetProperty="Opacity"
														 Duration="{StaticResource CupertinoAnimationDuration}"
														 To="1">
											<DoubleAnimation.EasingFunction>
												<CubicEase EasingMode="EaseIn" />
											</DoubleAnimation.EasingFunction>
										</DoubleAnimation>
									</Storyboard>
								</VisualState>

								<VisualState x:Name="SelectedDisabled">
									<VisualState.Setters>
										<Setter Target="ContentPresenter.Opacity"
												Value="{StaticResource CupertinoDisableStateOpacity}" />
									</VisualState.Setters>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>

						<!-- Pressed Overlay -->
						<Grid x:Name="PressedOverlay"
							  Margin="10"
							  Background="{ThemeResource CupertinoSecondarySystemFillBrush}"
							  CornerRadius="{TemplateBinding CornerRadius}"
							  IsHitTestVisible="False"
							  VerticalAlignment="Stretch"
							  HorizontalAlignment="Stretch"
							  Opacity="0" />

						<!-- ContentPresenter-->
						<ContentPresenter x:Name="ContentPresenter"
										  ContentTransitions="{TemplateBinding ContentTransitions}"
										  Content="{TemplateBinding Content}">
							<ContentPresenter.ContentTemplate>
								<DataTemplate>
									<Grid>
										<TextBlock Text="{Binding}"
												   Style="{ThemeResource CupertinoFootnote}"
												   VerticalAlignment="Center"
												   HorizontalAlignment="Center" />
									</Grid>
								</DataTemplate>
							</ContentPresenter.ContentTemplate>
						</ContentPresenter>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="CupertinoComboBoxStyle"
		   TargetType="ComboBox">
		<Setter Property="FontFamily"
				Value="{ThemeResource CupertinoFontFamily}" />
		<Setter Property="Foreground"
				Value="{ThemeResource CupertinoLabelBrush}" />
		<Setter Property="Background"
				Value="{ThemeResource CupertinoSystemBackgroundBrush}" />
		<Setter Property="Padding"
				Value="0" />
		<Setter Property="BorderThickness"
				Value="1" />
		<Setter Property="BorderBrush"
				Value="{ThemeResource CupertinoComboBoxBorderBrush}" />
		<Setter Property="CornerRadius"
				Value="{StaticResource CupertinoComboBoxCornerRadius}" />
		<Setter Property="MinHeight"
				Value="43" />
		<Setter Property="TabNavigation"
				Value="Once" />
		<Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
				Value="Disabled" />
		<Setter Property="ScrollViewer.VerticalScrollBarVisibility"
				Value="Auto" />
		<Setter Property="ScrollViewer.HorizontalScrollMode"
				Value="Disabled" />
		<Setter Property="ScrollViewer.VerticalScrollMode"
				Value="Auto" />
		<Setter Property="ScrollViewer.IsVerticalRailEnabled"
				Value="True" />
		<Setter Property="ScrollViewer.IsDeferredScrollingEnabled"
				Value="False" />
		<Setter Property="ScrollViewer.BringIntoViewOnFocusChange"
				Value="True" />
		<Setter Property="HorizontalContentAlignment"
				Value="Stretch" />
		<Setter Property="HorizontalAlignment"
				Value="Stretch" />
		<Setter Property="ItemContainerStyle"
				Value="{StaticResource CupertinoComboBoxItemStyle}" />
		<xamarin:Setter Property="uno:ComboBox.DropDownPreferredPlacement"
						Value="Below" />

		<Setter Property="ItemsPanel">
			<Setter.Value>
				<ItemsPanelTemplate>
					<CarouselPanel />
				</ItemsPanelTemplate>
			</Setter.Value>
		</Setter>

		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ComboBox">
					<Grid x:Name="RootGrid"
						  CornerRadius="{TemplateBinding CornerRadius}"
						  Background="{TemplateBinding Background}"
						  BorderBrush="{TemplateBinding BorderBrush}"
						  BorderThickness="{TemplateBinding BorderThickness}">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal" />
								<VisualState x:Name="PointerOver" />

								<VisualState x:Name="Pressed">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="PressedBackground"
														 Storyboard.TargetProperty="Opacity"
														 Duration="{StaticResource CupertinoAnimationDuration}"
														 To="1">
											<DoubleAnimation.EasingFunction>
												<CubicEase EasingMode="EaseIn" />
											</DoubleAnimation.EasingFunction>
										</DoubleAnimation>
									</Storyboard>
								</VisualState>

								<VisualState x:Name="Disabled">
									<VisualState.Setters>
										<Setter Target="RootGrid.Opacity"
												Value="{StaticResource CupertinoDisableStateOpacity}" />
									</VisualState.Setters>
								</VisualState>
							</VisualStateGroup>

							<VisualStateGroup x:Name="FocusStates">

								<VisualState x:Name="Focused">
									<VisualState.Setters>
										<Setter Target="HighlightBackground.Opacity"
												Value="1" />
										<Setter Target="Highlight.Opacity"
												Value="1" />
									</VisualState.Setters>
								</VisualState>

								<VisualState x:Name="FocusedPressed" />

								<VisualState x:Name="Unfocused" />
								<VisualState x:Name="PointerFocused" />

								<VisualState x:Name="FocusedDropDown">
									<VisualState.Setters>
										<Setter Target="PopupBorder.Visibility"
												Value="Visible" />
									</VisualState.Setters>
								</VisualState>
							</VisualStateGroup>

							<VisualStateGroup x:Name="DropDownStates">

								<VisualState x:Name="Opened">
									<Storyboard>
										<SplitOpenThemeAnimation ClosedTargetName="ContentPresenter"
																 ContentTranslationOffset="0"
																 ContentTargetName="ScrollViewer"
																 ClosedLength="{Binding TemplateSettings.DropDownClosedHeight, RelativeSource={RelativeSource Mode=TemplatedParent}}"
																 OffsetFromCenter="{Binding TemplateSettings.DropDownOffset, RelativeSource={RelativeSource Mode=TemplatedParent}}"
																 OpenedTargetName="PopupBorder"
																 OpenedLength="{Binding TemplateSettings.DropDownOpenedHeight, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
									</Storyboard>
								</VisualState>

								<VisualState x:Name="Closed">
									<Storyboard>
										<SplitCloseThemeAnimation ClosedTargetName="ContentPresenter"
																  ContentTranslationOffset="40"
																  ContentTranslationDirection="{Binding TemplateSettings.SelectedItemDirection, RelativeSource={RelativeSource Mode=TemplatedParent}}"
																  ContentTargetName="ScrollViewer"
																  ClosedLength="{Binding TemplateSettings.DropDownClosedHeight, RelativeSource={RelativeSource Mode=TemplatedParent}}"
																  OffsetFromCenter="{Binding TemplateSettings.DropDownOffset, RelativeSource={RelativeSource Mode=TemplatedParent}}"
																  OpenedTargetName="PopupBorder"
																  OpenedLength="{Binding TemplateSettings.DropDownOpenedHeight, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>

						<Grid x:Name="ComboBoxContent">

							<!-- Drop Down Border -->
							<Rectangle Fill="{ThemeResource CupertinoSystemBackgroundBrush}"
									   Width="1"
									   HorizontalAlignment="Right" />

							<!-- Pressed Background -->
							<Rectangle x:Name="PressedBackground"
									   Fill="{ThemeResource CupertinoSystemBackgroundBrush}"
									   Opacity="0" />

							<!-- Highlight Background -->
							<Border x:Name="HighlightBackground"
									Background="{ThemeResource CupertinoSystemBackgroundBrush}"
									Opacity="0"
									CornerRadius="4" />

							<!-- Highlight -->
							<Rectangle x:Name="Highlight"
									   Fill="{ThemeResource CupertinoSystemBackgroundBrush}"
									   Margin="{TemplateBinding BorderThickness}"
									   Opacity="0" />

							<Grid Margin="16,0">

								<!-- ContentPresenter -->
								<ContentPresenter x:Name="ContentPresenter"
												  Grid.Column="1"
												  VerticalAlignment="Center"
												  Foreground="{ThemeResource CupertinoTertiaryGrayBrush}" />

								<!-- Selected value -->
								<TextBlock x:Name="PlaceholderTextBlock"
										   Grid.Column="1"
										   Visibility="{Binding SelectedItem, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource NullToVisible}, TargetNullValue=Collapsed, FallbackValue=Collapsed}"
										   Text="{TemplateBinding PlaceholderText}"
										   Style="{ThemeResource CupertinoFootnote}"
										   Foreground="{ThemeResource CupertinoTertiaryGrayBrush}"
										   VerticalAlignment="Center"
										   TextWrapping="NoWrap"
										   MaxLines="1" />
							</Grid>

							<!-- Popup -->
							<Popup x:Name="Popup">
								<Border x:Name="PopupBorder">
									<!-- Workaround for Issue #213 where android PopupBorder doesn't get redrawn properly, adds Background, CornerRadius and Border to ScrollViewer  -->
									<ScrollViewer x:Name="ScrollViewer"
												  Background="{TemplateBinding Background}"
												  BorderBrush="{StaticResource CupertinoSenaryGrayColor}"
												  BorderThickness="1"
												  AutomationProperties.AccessibilityView="Raw"
												  BringIntoViewOnFocusChange="{TemplateBinding ScrollViewer.BringIntoViewOnFocusChange}"
												  HorizontalScrollMode="{TemplateBinding ScrollViewer.HorizontalScrollMode}"
												  HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
												  IsHorizontalRailEnabled="{TemplateBinding ScrollViewer.IsHorizontalRailEnabled}"
												  IsVerticalRailEnabled="{TemplateBinding ScrollViewer.IsVerticalRailEnabled}"
												  IsDeferredScrollingEnabled="{TemplateBinding ScrollViewer.IsDeferredScrollingEnabled}"
												  MinWidth="{ThemeResource ComboBoxPopupThemeMinWidth}"
												  VerticalSnapPointsType="OptionalSingle"
												  VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
												  VerticalScrollMode="{TemplateBinding ScrollViewer.VerticalScrollMode}"
												  VerticalSnapPointsAlignment="Near"
												  ZoomMode="Disabled">
										<ItemsPresenter />
									</ScrollViewer>
								</Border>
							</Popup>
						</Grid>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
</ResourceDictionary>
